{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'second',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {}\n};\nvar data = !localStorage.getItem('data') ? {\n  resetData\n} : JSON.parse(localStorage.getItem('data')); // var data = resetData;\n\nlet selected;\nlet preventSelect;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Frame, {\n        id: \"bank\",\n        info: data['river'].info,\n        subtasks: data['bank'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Frame, {\n        id: \"river\",\n        info: data['river'].info,\n        subtasks: data['river'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\n\nfunction StatusBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statusBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonBar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: newTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = StatusBar;\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info\n    };\n  }\n\n  changeIndex(val) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: this.state.info.index + val\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: '',\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    let endIndex = this.state.info.index + 7;\n    this.changeIndex = this.changeIndex.bind(this);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"changeButton\",\n        onClick: function () {\n          this.changeIndex(-7);\n        },\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          id: x.id,\n          title: x.title,\n          subtasks: x.subtasks,\n          parent: this\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"changeButton\",\n        onClick: function () {\n          console.log('yes', this.changeIndex);\n          this.changeIndex(7);\n        },\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  addTask() {\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = {\n      id: String(now),\n      info: {\n        complete: ''\n      },\n      title: '',\n      subtasks: []\n    };\n    const subtasks = this.props.parent.state.subtasks;\n    subtasks.push(newTask);\n    this.props.parent.setState({\n      subtasks: subtasks\n    });\n    save(this.props.parent, 'task');\n  }\n\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n  }\n\n  displayOptions(ev) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    } else {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  changeStartDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        startDate: ev.target.value\n      }\n    }));\n  }\n\n  changeEndDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        endDate: ev.target.value\n      }\n    }));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n  }\n\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef(); // task with info and subtasks\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.complete,\n            onClick: this.toggleComplete,\n            children: \"\\u221A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.important,\n            onClick: this.toggleImportant,\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.maybe,\n            onClick: this.toggleMaybe,\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: this.deleteThis,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput\",\n            value: this.state.info.startDate,\n            onChange: ev => this.changeStartDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput\",\n            value: this.state.info.endDate,\n            onChange: ev => this.changeEndDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          ref: this.taskList,\n          subtasks: this.state.subtasks,\n          parent: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (!selected.state.parent) {\n    console.log('1');\n    el = selected;\n  } else if (selected.state.parent) {\n    console.log('2');\n    el = selected.state.parent;\n  }\n\n  console.log(el);\n  el.taskList.current.state.addTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    console.log('error');\n    console.trace();\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  selected = el;\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 500);\n  console.log(selected);\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  console.log(parentObject);\n  console.log(data);\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction init() {\n  selected = undefined;\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n}\n\ninit();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StatusBar\");","map":{"version":3,"sources":["/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","ReactDOM","$","render","resetData","bank","info","index","subtasks","id","title","river","settings","data","localStorage","getItem","JSON","parse","selected","preventSelect","App","StatusBar","newTask","Frame","Component","constructor","props","state","lists","changeIndex","val","setState","prevState","now","Date","i","length","push","String","getTime","endIndex","bind","div","slice","map","x","console","log","List","taskList","createRef","changeTitle","ev","target","value","selectThis","selectTask","TaskList","addTask","today","complete","parent","save","tasksListed","task","Task","displayOptions","hasClass","changeStartDate","startDate","changeEndDate","endDate","toggleComplete","status","toggleImportant","important","maybe","toggleMaybe","deleteThis","currentTask","findIndex","splice","type","el","current","trace","setTimeout","saveType","parents","reverse","parentObject","parentId","find","setItem","stringify","init","undefined","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:'1', title: 'second', subtasks: [], info: {}}\n    ]}, \n  settings: {}\n};\n\nvar data = !localStorage.getItem('data') ? { resetData } :\n  JSON.parse(localStorage.getItem('data'));\n\n// var data = resetData;\n\nlet selected;\nlet preventSelect;\n\nfunction App() {\n  return (\n    <>\n      <StatusBar />\n      <div className='container'>\n        <Frame id='bank' info={data['river'].info} \n          subtasks={data['bank'].subtasks} />\n        <Frame id='river' info={data['river'].info} \n          subtasks={data['river'].subtasks} />\n      </div>\n    </>\n  )\n}\n\nfunction StatusBar() {\n  return (\n    <div className='statusBar'>\n      <input className='searchBar'></input>\n      <div className='buttonBar'>\n        <button className='button' onClick={newTask}>+</button>\n      </div>\n    </div>\n  )\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info};\n  }\n  changeIndex(val) {\n    this.setState(prevState => ({\n      info: {...prevState.info, index: this.state.info.index + val}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: '', subtasks: [], info: {}});\n    }\n    let endIndex = this.state.info.index + 7;\n    this.changeIndex = this.changeIndex.bind(this);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button class='changeButton'\n          onClick={function () {this.changeIndex(-7)}}>&lt;</button>\n        {this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n          return (\n            <List key={x.id} id={x.id} title={x.title}\n              subtasks={x.subtasks} parent={this} />\n          )\n        })}\n        <button class='changeButton' \n          onClick={function () {\n            console.log('yes', this.changeIndex);\n            this.changeIndex(7);\n          }}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        <input \n          className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  addTask() {\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = {\n      id: String(now),\n      info: {complete: ''},\n      title: '',\n      subtasks: [],\n    }\n    const subtasks = this.props.parent.state.subtasks;\n    subtasks.push(newTask);\n    this.props.parent.setState({subtasks: subtasks});\n    save(this.props.parent, 'task');\n  }\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul>\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'};\n  }\n  displayOptions(ev) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    } else {\n      this.setState({displayOptions: 'hide'});\n    }\n  }\n  changeTitle(ev) { this.setState({title: ev.target.value}); }\n  changeStartDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, startDate: ev.target.value}})); \n  }\n  changeEndDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, endDate: ev.target.value}})); \n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n  }\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    this.state.parent.setState({subtasks: subtasks});\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}>\n          <div className={'options ' + this.state.displayOptions}>\n            <button \n              className={'button ' + this.state.info.complete}\n              onClick={this.toggleComplete}>\n                √\n              </button>\n            <button \n              className={'button ' + this.state.info.important}\n              onClick={this.toggleImportant}>\n                !\n              </button>\n            <button \n              className={'button ' + this.state.info.maybe}\n              onClick={this.toggleMaybe}>\n                ?\n              </button>\n            <button \n              className={'button'}\n              onClick={this.deleteThis}>\n                x\n              </button>\n            <input className='optionsInput' \n              value={this.state.info.startDate} \n              onChange={(ev) => this.changeStartDate(ev)}>\n            </input>\n            <input className='optionsInput' \n              value={this.state.info.endDate} \n              onChange={(ev) => this.changeEndDate(ev)}>\n            </input>\n          </div>\n        </span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)}></textarea>\n        <ul>\n          <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n            parent={this} />\n        </ul>\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (!selected.state.parent) {\n    console.log('1');\n    el = selected;\n  } else if (selected.state.parent) {\n    console.log('2');\n    el = selected.state.parent;\n  }\n  console.log(el);\n  el.taskList.current.state.addTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    console.log('error');\n    console.trace();\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  selected = el;\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 500)\n  console.log(selected);\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  console.log(parentObject);\n  console.log(data);\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction init() {\n  selected = undefined;\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}