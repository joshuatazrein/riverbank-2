{"ast":null,"code":"import * as display from '../display/display';\nimport * as util from '../util/util';\nimport Task from '../../components/Task/Task';\nimport List from '../../components/List/List';\nimport TaskList from '../../components/TaskList/TaskList';\nimport Frame from '../../components/Frame/Frame';\nexport function deleteTask() {\n  if (window.selected && window.selected instanceof Task) {\n    window.undoData = localStorage.getItem('data');\n    window.selected.deleteThis();\n  }\n}\nexport function newTask(type) {\n  // create new task after window.selected\n  if (!window.selected || window.preventReturn) return;\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = String(now);\n  window.data.tasks[newTask] = {\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  window.copiedTask = newTask;\n  pasteTask(type);\n}\nexport function selectTask(el, force) {\n  // make this task window.selected\n  if (window.preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  window.preventSelect = true;\n  setTimeout(function () {\n    window.preventSelect = false;\n  }, 100);\n\n  if (window.selected) {\n    save(window.selected, 'task');\n  }\n\n  if (window.selected === el && !force) {\n    return;\n  }\n\n  if (window.selected instanceof Task && window.selected !== el) {\n    window.selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  window.selected = el;\n\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  } else if (el instanceof List) {\n    el.listInput.current.focus();\n  }\n}\nexport function save(task, saveType) {\n  // save the new window.data\n  var saveObject;\n\n  if (saveType === 'list') {\n    saveObject = task.props.parent;\n  } else {\n    saveObject = task;\n  }\n\n  var subtasks;\n  if (saveObject.subtasksCurrent) subtasks = saveObject.subtasksCurrent;else subtasks = saveObject.state.subtasks;\n  window.data.tasks[util.stripR(saveObject.props.id)] = {\n    title: saveObject.state.title,\n    info: saveObject.state.info,\n    subtasks: subtasks\n  };\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\nexport function undo() {\n  localStorage.setItem('data', window.undoData);\n  setTimeout(() => window.location.reload(), 500);\n}\nexport function saveSetting(setting, value) {\n  window.data.settings[setting] = value;\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\nexport function cutTask() {\n  if (!window.selected || window.selected instanceof List) return;\n  copyTask();\n  window.selected.deleteThis(false);\n  window.undoData = localStorage.getItem('data');\n}\nexport function copyTask(mirror) {\n  if (!window.selected || window.selected instanceof List) return;\n  save(window.selected);\n\n  if (mirror) {\n    window.copiedTask = window.selected.props.id;\n  } else {\n    // only copy window.data\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = String(now);\n    window.data.tasks[newTask] = { ...window.data.tasks[util.stripR(window.selected.props.id)]\n    };\n    window.copiedTask = newTask;\n  }\n}\nexport function pasteTask(type) {\n  console.log(window.selected);\n  if (!window.selected || !window.copiedTask) return;\n  window.undoData = localStorage.getItem('data');\n\n  if (window.selected instanceof List || type === 'task') {\n    const subtasks = window.selected.state.subtasks;\n    subtasks.splice(0, 0, window.copiedTask);\n    window.selected.setState({\n      subtasks: subtasks\n    });\n    save(window.selected, 'task');\n  } else if (window.selected instanceof Task || type === 'list') {\n    const subtasks = window.selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x === window.selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, window.copiedTask);\n    window.selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(window.selected, 'list');\n  }\n}\nexport function indentTask(unindent) {\n  // umm fix sometime\n  if (!window.selected) return;\n  const lastSelected = window.selected;\n  save(window.selected);\n  const subtasks = window.selected.props.parent.taskList.current.subtaskObjects;\n  const here = subtasks.findIndex(x => util.stripR(x.current.props.id) === util.stripR(window.selected.props.id));\n  console.log(subtasks, here);\n\n  if (unindent !== true) {\n    if (here === 0) return;\n    const taskAbove = subtasks[here - 1].current;\n    const theseSubtasks = util.getSubtasks(taskAbove);\n    theseSubtasks.push(window.selected.props.id);\n    const previousSubtasks = util.getSubtasks(window.selected.props.parent);\n    previousSubtasks.splice(here, 1);\n    console.log(previousSubtasks.map(x => window.data.tasks[util.stripR(x)].title));\n    taskAbove.setState({\n      subtasks: theseSubtasks\n    });\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n    lastSelected.props.parent.setState({\n      subtasks: previousSubtasks\n    });\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n    save(taskAbove);\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n    save(lastSelected.props.parent);\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n  } else {\n    if (window.selected.props.parent.props.parent instanceof Frame) return;\n    const subtasks = window.selected.props.parent.props.parent.taskList.current.subtaskObjects;\n    const here = subtasks.findIndex(x => x.current.props.id === window.selected.props.parent.props.id);\n    const theseSubtasks = window.selected.props.parent.props.parent.state.subtasks;\n    theseSubtasks.splice(here + 1, 0, window.selected.props.id);\n    console.log(theseSubtasks);\n    window.selected.props.parent.props.parent.setState({\n      subtasks: theseSubtasks\n    });\n    save(window.selected.props.parent.props.parent);\n    const parentSubtasks = util.getSubtasks(lastSelected.props.parent);\n    parentSubtasks.splice(parentSubtasks.findIndex(x => x === lastSelected.props.id), 1);\n    lastSelected.props.parent.setState({\n      subtasks: parentSubtasks\n    });\n    save(lastSelected.props.parent);\n  }\n}\nexport function moveTask(direction) {\n  if (!window.selected) return;\n\n  if (window.selected.props.parent.subtasksCurrent) {\n    var subtasks = window.selected.props.parent.subtasksCurrent.concat();\n  } else {\n    var subtasks = window.selected.props.parent.state.subtasks;\n  }\n\n  let selectedPlace = subtasks.findIndex(x => x === window.selected.props.id);\n  const length = subtasks.length;\n  if (selectedPlace === 0 && direction === -1) return;else if (selectedPlace === subtasks.length && direction === 1) return;\n\n  if (direction === -1) {\n    var subtasksChopped = subtasks.slice(0, selectedPlace).reverse();\n  } else {\n    var subtasksChopped = subtasks.slice(selectedPlace + 1);\n  }\n\n  if (window.data.settings.hideComplete === 'hideComplete') {\n    var insertPlace = (subtasksChopped.findIndex(x => window.data.tasks[util.stripR(x)].info.complete !== 'complete') + 1) * direction;\n  } else {\n    var insertPlace = 1 * direction;\n  }\n\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + insertPlace, 0, spliceTask);\n  window.selected.props.parent.setState({\n    subtasks: subtasks\n  });\n  save(window.selected.props.parent, 'task');\n}\nexport function listEdit(type) {\n  if (!window.selected) {\n    alert('select a list');\n    return;\n  }\n\n  if (type === 'migrate' && util.getFrame(window.selected).props.id === 'bank') {\n    alert('select a date');\n    return;\n  }\n\n  var incompleteTasks = [];\n  var subtasksCurrent = util.getList(window.selected).subtasksCurrent;\n\n  function addIncomplete(task) {\n    for (let x of task.taskList.current.subtaskObjects) {\n      addIncomplete(x.current);\n\n      if (x.current.state.info.complete !== 'complete') {\n        if (type === 'clear') {\n          x.current.toggleComplete();\n          x.current.displayOptions({\n            target: undefined\n          }, 'hide');\n          save(x.current);\n        } else if (type === 'migrate' && x.current.props.id.charAt(0) !== 'R') {\n          incompleteTasks.push(x.current.props.id);\n          subtasksCurrent.splice(subtasksCurrent.findIndex(y => y === x.current.props.id), 1);\n        }\n      }\n    }\n  }\n\n  addIncomplete(util.getList(window.selected));\n\n  if (type === 'migrate') {\n    const tomorrow = new Date(util.getList(window.selected).state.title);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    util.getList(window.selected).setState({\n      subtasks: subtasksCurrent\n    });\n    save(util.getList(window.selected));\n    display.searchDate(tomorrow.toDateString());\n    setTimeout(() => {\n      window.selected.setState({\n        subtasks: window.selected.subtasksCurrent.concat(incompleteTasks)\n      });\n      save(window.selected);\n    }, 500);\n  }\n}","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/services/edit/edit.js"],"names":["display","util","Task","List","TaskList","Frame","deleteTask","window","selected","undoData","localStorage","getItem","deleteThis","newTask","type","preventReturn","today","Date","now","getTime","String","data","tasks","info","complete","startDate","endDate","title","subtasks","copiedTask","pasteTask","selectTask","el","force","preventSelect","setTimeout","save","displayOptions","target","undefined","editBar","current","focus","listInput","task","saveType","saveObject","props","parent","subtasksCurrent","state","stripR","id","setItem","JSON","stringify","undo","location","reload","saveSetting","setting","value","settings","cutTask","copyTask","mirror","console","log","splice","setState","insertIndex","findIndex","x","indentTask","unindent","lastSelected","taskList","subtaskObjects","here","taskAbove","theseSubtasks","getSubtasks","push","previousSubtasks","map","parentSubtasks","moveTask","direction","concat","selectedPlace","length","subtasksChopped","slice","reverse","hideComplete","insertPlace","spliceTask","listEdit","alert","getFrame","incompleteTasks","getList","addIncomplete","toggleComplete","charAt","y","tomorrow","setDate","getDate","searchDate","toDateString"],"mappings":"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","sourcesContent":["import * as display from '../display/display';\nimport * as util from '../util/util';\nimport Task from '../../components/Task/Task';\nimport List from '../../components/List/List';\nimport TaskList from '../../components/TaskList/TaskList';\nimport Frame from '../../components/Frame/Frame';\n\nexport function deleteTask() {\n  if (window.selected && window.selected instanceof Task) {\n    window.undoData = localStorage.getItem('data');\n    window.selected.deleteThis();\n  }\n}\n\nexport function newTask(type) {\n  // create new task after window.selected\n  if (!window.selected || window.preventReturn) return;\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = String(now);\n  window.data.tasks[newTask] = {\n    info: { complete: '', startDate: '', endDate: '' },\n    title: '',\n    subtasks: [],\n  };\n  window.copiedTask = newTask;\n  pasteTask(type);\n}\n\nexport function selectTask(el, force) {\n  // make this task window.selected\n  if (window.preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  window.preventSelect = true;\n  setTimeout(function () { window.preventSelect = false }, 100);\n  if (window.selected) {\n    save(window.selected, 'task');\n  }\n  if (window.selected === el && !force) {\n    return;\n  }\n  if (window.selected instanceof Task && window.selected !== el) {\n    window.selected.displayOptions({ target: undefined }, 'hide');\n  }\n  window.selected = el;\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  } else if (el instanceof List) {\n    el.listInput.current.focus();\n  }\n}\n\nexport function save(task, saveType) {\n  // save the new window.data\n  var saveObject;\n  if (saveType === 'list') {\n    saveObject = task.props.parent;\n  } else {\n    saveObject = task;\n  }\n  var subtasks;\n  if (saveObject.subtasksCurrent) subtasks = saveObject.subtasksCurrent;\n  else subtasks = saveObject.state.subtasks;\n  window.data.tasks[util.stripR(saveObject.props.id)] = {\n    title: saveObject.state.title,\n    info: saveObject.state.info, subtasks: subtasks\n  };\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\n\nexport function undo() {\n  localStorage.setItem('data', window.undoData);\n  setTimeout(() => window.location.reload(), 500);\n}\n\nexport function saveSetting(setting, value) {\n  window.data.settings[setting] = value;\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\n\nexport function cutTask() {\n  if (!window.selected || window.selected instanceof List) return;\n  copyTask();\n  window.selected.deleteThis(false);\n  window.undoData = localStorage.getItem('data');\n}\n\nexport function copyTask(mirror) {\n  if (!window.selected || window.selected instanceof List) return;\n  save(window.selected);\n  if (mirror) {\n    window.copiedTask = window.selected.props.id;\n  } else {\n    // only copy window.data\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = String(now);\n    window.data.tasks[newTask] = { ...window.data.tasks[util.stripR(window.selected.props.id)] };\n    window.copiedTask = newTask;\n  }\n}\n\nexport function pasteTask(type) {\n  console.log(window.selected);\n  if (!window.selected || !window.copiedTask) return;\n  window.undoData = localStorage.getItem('data');\n  if (window.selected instanceof List || type === 'task') {\n    const subtasks = window.selected.state.subtasks;\n    subtasks.splice(0, 0, window.copiedTask);\n    window.selected.setState({ subtasks: subtasks });\n    save(window.selected, 'task');\n  } else if (window.selected instanceof Task || type === 'list') {\n    const subtasks = window.selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x === window.selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, window.copiedTask);\n    window.selected.state.parent.setState({ subtasks: subtasks });\n    save(window.selected, 'list');\n  }\n}\n\nexport function indentTask(unindent) {\n  // umm fix sometime\n  if (!window.selected) return;\n  const lastSelected = window.selected;\n  save(window.selected);\n  const subtasks = window.selected.props.parent.taskList.current.subtaskObjects;\n  const here = subtasks\n    .findIndex(x => \n    util.stripR(x.current.props.id) === util.stripR(window.selected.props.id));\n  console.log(subtasks, here);\n  if (unindent !== true) {\n    if (here === 0) return;\n    const taskAbove = subtasks[here - 1].current;\n    const theseSubtasks = util.getSubtasks(taskAbove);\n    theseSubtasks.push(window.selected.props.id);\n    const previousSubtasks = util.getSubtasks(window.selected.props.parent);\n    previousSubtasks.splice(here, 1);\n    console.log(previousSubtasks.map(x => window.data.tasks[util.stripR(x)].title));\n    taskAbove.setState( { subtasks: theseSubtasks });\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n    lastSelected.props.parent.setState({ subtasks: previousSubtasks });\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n    save(taskAbove);\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n    save(lastSelected.props.parent);\n    console.log(window.data.tasks[util.stripR(window.selected.props.id)]);\n  } else {\n    if (window.selected.props.parent.props.parent instanceof Frame) return;\n    const subtasks = window.selected.props.parent.props.parent\n      .taskList.current.subtaskObjects;\n    const here = subtasks.findIndex(\n      x => x.current.props.id === window.selected.props.parent.props.id);\n    const theseSubtasks = window.selected.props.parent.props.parent.state.subtasks;\n    theseSubtasks.splice(here + 1, 0, window.selected.props.id);\n    console.log(theseSubtasks);\n    window.selected.props.parent.props.parent.setState({ subtasks: theseSubtasks });\n    save(window.selected.props.parent.props.parent);\n    const parentSubtasks = util.getSubtasks(lastSelected.props.parent);\n    parentSubtasks.splice(parentSubtasks.findIndex(x => \n      x === lastSelected.props.id), 1);\n    lastSelected.props.parent.setState({ subtasks: parentSubtasks });\n    save(lastSelected.props.parent);\n  }\n}\n\nexport function moveTask(direction) {\n  if (!window.selected) return;\n  if (window.selected.props.parent.subtasksCurrent) {\n    var subtasks = window.selected.props.parent.subtasksCurrent.concat();\n  } else {\n    var subtasks = window.selected.props.parent.state.subtasks;\n  }\n  let selectedPlace =\n    subtasks.findIndex(x => x === window.selected.props.id);\n  const length = subtasks.length;\n  if (selectedPlace === 0 && direction === -1) return;\n  else if (selectedPlace === subtasks.length\n    && direction === 1) return;\n  if (direction === -1) {\n    var subtasksChopped = subtasks.slice(0, selectedPlace).reverse();\n  } else {\n    var subtasksChopped = subtasks.slice(selectedPlace + 1);\n  }\n  if (window.data.settings.hideComplete === 'hideComplete') {\n    var insertPlace = (subtasksChopped.findIndex(x =>\n      window.data.tasks[util.stripR(x)].info.complete !== 'complete') + 1) * direction;\n  } else {\n    var insertPlace = 1 * direction;\n  }\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + insertPlace, 0, spliceTask);\n  window.selected.props.parent.setState({ subtasks: subtasks });\n  save(window.selected.props.parent, 'task');\n}\n\nexport function listEdit(type) {\n  if (!window.selected) {\n    alert('select a list');\n    return;\n  }\n  if (type === 'migrate' && util.getFrame(window.selected).props.id === 'bank') {\n    alert('select a date');\n    return;\n  }\n  var incompleteTasks = [];\n  var subtasksCurrent = util.getList(window.selected).subtasksCurrent;\n  function addIncomplete(task) {\n    for (let x of task.taskList.current.subtaskObjects) {\n      addIncomplete(x.current);\n      if (x.current.state.info.complete !== 'complete') {\n        if (type === 'clear') {\n          x.current.toggleComplete();\n          x.current.displayOptions({target: undefined}, 'hide');\n          save(x.current);\n        } else if (type === 'migrate' && \n          x.current.props.id.charAt(0) !== 'R') {\n          incompleteTasks.push(x.current.props.id);\n          subtasksCurrent.splice(subtasksCurrent\n            .findIndex(y => y === x.current.props.id), 1);\n        }\n      }\n    }\n  }\n  addIncomplete(util.getList(window.selected));\n  if (type === 'migrate') {\n    const tomorrow = new Date(util.getList(window.selected).state.title);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    util.getList(window.selected).setState({\n      subtasks: subtasksCurrent\n    });\n    save(util.getList(window.selected));\n    display.searchDate(tomorrow.toDateString());\n    setTimeout(() => {\n      window.selected.setState(\n        { subtasks: window.selected.subtasksCurrent.concat(incompleteTasks) });\n      save(window.selected);\n    }, 500);\n  }\n}"]},"metadata":{},"sourceType":"module"}