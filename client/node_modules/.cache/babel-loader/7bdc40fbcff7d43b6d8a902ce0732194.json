{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\"; // import \"./react-datepicker.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: String(new Date().getTime()),\n      title: new Date().toDateString(),\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {\n    repeats: {\n      'Mon': [],\n      'Tue': [],\n      'Wed': [],\n      'Thu': [],\n      'Fri': [],\n      'Sat': [],\n      'Sun': []\n    }\n  }\n};\nvar data = !localStorage.getItem('data') ? {\n  resetData\n} : JSON.parse(localStorage.getItem('data'));\nvar deadlines = {};\nvar startdates = {}; // var data = resetData;\n\nvar repeats = data.settings.repeats;\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: ''\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container ' + this.state.hideComplete,\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          id: \"bank\",\n          info: data['river'].info,\n          subtasks: data['bank'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Frame, {\n          id: \"river\",\n          info: data['river'].info,\n          subtasks: data['river'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: ''\n    };\n  }\n\n  search(ev) {\n    function treeSearch(task) {\n      return task.subtasks.concat(task.subtasks.map(x => treeSearch(x)));\n    }\n\n    if (this.state.searchString === '') {\n      var searches = treeSearch(data.river);\n      console.log(searches);\n    }\n\n    this.setState({\n      searchString: ev.target.value\n    });\n    console.log(this.state.searchString);\n  }\n\n  render() {\n    this.search = this.search.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\",\n        onChange: ev => this.search(ev),\n        value: this.state.searchString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: backup,\n          children: \"backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button ' + this.props.parent.state.hideComplete,\n          onClick: () => {\n            this.props.parent.toggleComplete();\n          },\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      repeats: repeats\n    };\n  }\n\n  startTimer(val) {\n    this.setState({\n      minutes: this.state.minutes + val,\n      seconds: 0\n    });\n    this.play();\n  }\n\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({\n            minutes: (this.state.minutes + 1) * multiplier,\n            seconds: 0\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds + 1\n          });\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n\n          this.setState({\n            minutes: (this.state.minutes - 1) * multiplier,\n            seconds: 59\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  end() {\n    alert('timer complete');\n  }\n\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({\n      minutes: 0,\n      seconds: 0\n    });\n  }\n\n  render() {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(50),\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(25),\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(10),\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(5),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            this.setState({\n              minutes: 0,\n              seconds: 1\n            });\n            this.play();\n          },\n          children: \":5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.playPause(),\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"timerBar\",\n        readOnly: true,\n        value: this.state.minutes + ':' + String(this.state.seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(this.state.lists[this.state.lists.length - 1].title);\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: title,\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this); // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n        if (this.props.id === 'river') {\n          // render state correctly in original lists\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this,\n            deadlines: this.state.deadlines[x.title],\n            startdates: this.state.startdates[x.title],\n            repeats: this.state.repeats[x.title.slice(0, 3)]\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [this.props.parent.props.id === 'bank' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        className: \"listInput listTitle\",\n        value: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), this.props.parent.props.id === 'river' && this.props.deadlines && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.deadlines).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"deadline\",\n            children: this.props.deadlines[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), this.props.parent.props.id === 'river' && this.props.startdates && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.startdates).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"startdate\",\n            children: this.props.startdates[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), this.props.parent.props.id === 'river' && this.props.repeats ? /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this,\n        addTasks: this.props.repeats.map(x => {\n          return /*#__PURE__*/_jsxDEV(RepeatTask, {\n            subtasks: [],\n            parent: this,\n            title: x,\n            id: x,\n            info: {}\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass RepeatTask extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Task, {\n      id: this.props.id,\n      info: this.props.info,\n      title: this.props.title,\n      subtasks: this.props.subtasks,\n      parent: this.props.parent\n    }, this.props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: [this.props.addTasks && this.props.addTasks, tasksListed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide',\n      riverTask: false\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    if (parent.props.id === 'river') {\n      this.state.riverTask = true;\n      this.state.repeats = {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title)\n      };\n    }\n  }\n\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (startdates[now.toDateString()] && startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.startDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          startDate: ev.target.value\n        }\n      }));\n    }\n\n    console.log(ev);\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n    }\n  }\n\n  changeEndDate(ev) {\n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (deadlines[now.toDateString()] && deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.endDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      ev = {\n        target: {\n          value: ' '\n        }\n      };\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          endDate: ev.target.value\n        }\n      }));\n    }\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        deadlines: deadlines\n      });\n    }\n  }\n\n  changeRepeat(day) {\n    if (repeats[day].includes(this.state.title)) {\n      repeats[day].splice(repeats[day].indexOf(this.state.title), 1);\n    } else {\n      repeats[day].push(this.state.title);\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        repeats: repeats\n      });\n    }\n\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.resetRepeats();\n  }\n\n  resetRepeats() {\n    this.setState({\n      repeats: {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title)\n      }\n    });\n    data.settings.repeats = repeats;\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleCollapse() {\n    let status = this.state.info.collapsed;\n\n    if (status === 'collapsed') {\n      status = '';\n    } else {\n      status = 'collapsed';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        collapsed: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n    // [[don't use global variable]]\n    let parent = this.props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n\n    if (this.state.repeats) {\n      for (let day of ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {\n        if (this.state.repeats[day]) {\n          this.changeRepeat(day);\n        }\n      }\n    }\n\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false;\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n\n    if (this.state.riverTask) {\n      this.resetRepeats();\n    }\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.resetRepeats = this.resetRepeats.bind(this);\n    this.changeRepeat = this.changeRepeat.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && this.state.info.endDate.length > 0 ? 'event' : '';\n\n    const startInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput startDate\",\n      value: this.state.info.startDate,\n      onChange: ev => this.changeStartDate(ev),\n      ref: this.startDateSpan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this);\n\n    const endInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput endDate\",\n      value: this.state.info.endDate,\n      onChange: ev => this.changeEndDate(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this); // task with info and subtasks\n\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass + ' ' + hasTimes + ' ' + this.state.info.collapsed,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.complete,\n              onClick: this.toggleComplete,\n              children: \"\\u221A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.important,\n              onClick: this.toggleImportant,\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.maybe,\n              onClick: this.toggleMaybe,\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: this.deleteThis,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => {\n                newTask('task');\n                this.displayOptions('hide');\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => this.toggleCollapse(),\n              children: '[]'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), this.state.riverTask && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Mon'],\n              onClick: () => this.changeRepeat('Mon'),\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Tue'],\n              onClick: () => this.changeRepeat('Tue'),\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Wed'],\n              onClick: () => this.changeRepeat('Wed'),\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Thu'],\n              onClick: () => this.changeRepeat('Thu'),\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Fri'],\n              onClick: () => this.changeRepeat('Fri'),\n              children: \"F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Sat'],\n              onClick: () => this.changeRepeat('Sat'),\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Sun'],\n              onClick: () => this.changeRepeat('Sun'),\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this), startInput, endInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n\n  if (selected == el) {\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date(); // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 864,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","useState","ReactDOM","DatePicker","$","render","fs","require","resetData","bank","info","index","subtasks","id","title","river","String","Date","getTime","toDateString","settings","repeats","data","localStorage","getItem","JSON","parse","deadlines","startdates","selected","preventSelect","copiedTask","width","prevWidth","App","Component","constructor","props","state","hideComplete","toggleComplete","setState","StatusBar","searchString","search","ev","treeSearch","task","concat","map","x","searches","console","log","target","value","bind","newTask","cutTask","copyTask","pasteTask","backup","parent","Timer","minutes","seconds","startTimer","val","play","stopwatch","backwards","multiplier","clearInterval","interval","setInterval","end","alert","playPause","audioRef","createRef","padStart","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","changeIndex","newIndex","prevState","now","i","lastDate","length","date","setDate","getDate","push","endIndex","addEventListener","div","slice","List","taskList","changeTitle","selectThis","selectTask","Object","keys","RepeatTask","TaskList","addTask","tasksListed","addTasks","Task","displayOptions","riverTask","startDate","endDate","collapsed","includes","showHide","hasClass","editHeight","heightSpan","current","offsetHeight","changeStartDate","deadline","split","setMonth","Number","changeEndDate","changeRepeat","day","splice","indexOf","currentTask","findIndex","resetRepeats","setItem","stringify","status","complete","toggleImportant","important","maybe","toggleMaybe","toggleCollapse","deleteThis","setTimeout","save","componentDidMount","editBar","focus","optionsButton","startDateSpan","headingClass","hasTimes","startInput","endInput","alignContent","height","editWidth","type","el","today","undefined","saveType","parents","reverse","parentObject","parentId","find","insertIndex","keyComms","ctrlKey","shiftKey","key","metaKey","altKey","preventDefault","document","activeElement","blur","init","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import \"./react-datepicker.css\";\nconst fs = require('fs');\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:String(new Date().getTime()), title: new Date().toDateString(), subtasks: [], info: {}}\n    ]}, \n  settings: {repeats: {'Mon': [], 'Tue': [], 'Wed': [], 'Thu': [], \n  'Fri': [], 'Sat': [], 'Sun': [], }}\n};\n\nvar data = !localStorage.getItem('data') ? { resetData } :\n  JSON.parse(localStorage.getItem('data'));\n\nvar deadlines = {};\nvar startdates = {};\n// var data = resetData;\nvar repeats = data.settings.repeats;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: ''};\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {searchString: ''};\n  }\n  search(ev) {\n    function treeSearch(task) {\n      return task.subtasks.concat(task.subtasks.map(x => treeSearch(x)));\n    }\n    if (this.state.searchString === '') {\n      var searches = treeSearch(data.river);\n      console.log(searches);\n    }\n    this.setState({searchString: ev.target.value});\n    console.log(this.state.searchString);\n  }\n  render() {\n    this.search = this.search.bind(this);\n    return (\n      <div className='statusBar'>\n        <input className='searchBar' onChange={(ev) => this.search(ev)}\n          value={this.state.searchString}></input>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={backup}>backup</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0, repeats: repeats};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    this.play();\n  }\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: (this.state.minutes + 1) * multiplier, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n          this.setState({minutes: (this.state.minutes - 1) * multiplier, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000);\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({minutes: 0, seconds: 0});\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = React.createRef();\n    return (\n      <div>\n        <div className='buttonBar'>\n          <button className='button' onClick={() => this.startTimer(50)}>50</button>\n          <button className='button' onClick={() => this.startTimer(25)}>25</button>\n          <button className='button' onClick={() => this.startTimer(10)}>10</button>\n          <button className='button' onClick={() => this.startTimer(5)}>5</button>\n          <button className='button' onClick={() => {\n            this.setState({minutes: 0, seconds: 1});\n            this.play();\n          }}>:5</button>\n          <button className='button' onClick={() => this.playPause()}>&#9632;</button>\n        </div>\n        <input className='timerBar' readOnly={true}\n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(\n      this.state.lists[this.state.lists.length - 1].title\n    );\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: title, subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} \n                deadlines={this.state.deadlines[x.title]} \n                startdates={this.state.startdates[x.title]} \n                repeats={this.state.repeats[x.title.slice(0, 3)]} />\n            )\n          } else {\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} />\n            )\n          }\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        {this.props.parent.props.id === 'bank' ?\n          <input className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input> :\n          <input readOnly className='listInput listTitle'\n            value={this.state.title}></input>\n        }\n        {this.props.parent.props.id === 'river' && \n        this.props.deadlines &&\n        <ul>\n          {Object.keys(this.props.deadlines).map(x => {\n            return <li \n              className='deadline' key={String(x)}>\n              {this.props.deadlines[x]}</li>;\n          })}\n        </ul>}\n        {this.props.parent.props.id === 'river' && \n        this.props.startdates &&\n        <ul>\n          {Object.keys(this.props.startdates).map(x => {\n            return <li \n              className='startdate' key={String(x)}>\n              {this.props.startdates[x]}</li>;\n          })}\n        </ul>}\n        {(this.props.parent.props.id === 'river' && \n        this.props.repeats) ?\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} addTasks={this.props.repeats.map(x => {\n            return <RepeatTask \n              subtasks={[]} parent={this} title={x}\n              key={x} id={x} info={{}} />;\n          })} /> :\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n        }\n      </div>\n    )\n  }\n}\n\nclass RepeatTask extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render () {\n    return <Task \n      key={this.props.id}\n      id={this.props.id}\n      info={this.props.info}\n      title={this.props.title}\n      subtasks={this.props.subtasks}\n      parent={this.props.parent} />\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {this.props.addTasks && this.props.addTasks}\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide', riverTask: false,\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    if (parent.props.id === 'river') {\n      this.state.riverTask = true;\n      this.state.repeats = {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title),\n      }\n    }\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (startdates[now.toDateString()] && \n        startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.startDate}};\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, startDate: ev.target.value}})); \n    }\n    console.log(ev);\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n    }\n  }\n  changeEndDate(ev) { \n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (deadlines[now.toDateString()] && \n        deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.endDate}};\n    } else if (ev === 'destroy') {\n      ev = {target: {value: ' '}};\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, endDate: ev.target.value}})); \n    }\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({deadlines: deadlines});\n    }\n  }\n  changeRepeat(day) {\n    if (repeats[day].includes(this.state.title)) {\n      repeats[day].splice(repeats[day].indexOf(this.state.title), 1);\n    } else {\n      repeats[day].push(this.state.title)\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({repeats: repeats});\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.resetRepeats();\n  }\n  resetRepeats() {\n    this.setState({repeats: {\n      'Mon': repeats['Mon'].includes(this.state.title),\n      'Tue': repeats['Tue'].includes(this.state.title),\n      'Wed': repeats['Wed'].includes(this.state.title),\n      'Thu': repeats['Thu'].includes(this.state.title),\n      'Fri': repeats['Fri'].includes(this.state.title),\n      'Sat': repeats['Sat'].includes(this.state.title),\n      'Sun': repeats['Sun'].includes(this.state.title),\n    }});\n    data.settings.repeats = repeats;\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleCollapse() {\n    let status = this.state.info.collapsed\n    if (status === 'collapsed') { status = '' }\n    else { status = 'collapsed' }\n    this.setState(prevState => ({\n      info: {...prevState.info, collapsed: status}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n      // [[don't use global variable]]\n    let parent = this.props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n    if (this.state.repeats) {\n      for (let day of ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {\n        if (this.state.repeats[day]) {\n          this.changeRepeat(day);\n        }\n      }\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n    if (this.state.riverTask) {\n      this.resetRepeats();\n    }\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.resetRepeats = this.resetRepeats.bind(this);\n    this.changeRepeat = this.changeRepeat.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    const startInput = \n      <input className='optionsInput startDate' \n      value={this.state.info.startDate} \n      onChange={(ev) => this.changeStartDate(ev)}\n      ref={this.startDateSpan}></input>\n    const endInput = \n      <input className='optionsInput endDate' \n      value={this.state.info.endDate} \n      onChange={(ev) => this.changeEndDate(ev)}>\n      </input>\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n              <button \n                className={'button ' + this.state.info.complete}\n                onClick={this.toggleComplete}>\n                √</button>\n              <button \n                className={'button ' + this.state.info.important}\n                onClick={this.toggleImportant}>\n                !</button>\n              <button \n                className={'button ' + this.state.info.maybe}\n                onClick={this.toggleMaybe}>\n                ?</button>\n              <button \n                className={'button'}\n                onClick={this.deleteThis}>\n                x</button>\n              <button \n                className={'button'}\n                onClick={() => {\n                  newTask('task');\n                  this.displayOptions('hide');\n                }}>\n                +</button>\n              <button \n                className={'button'}\n                onClick={() => this.toggleCollapse()}>\n                {'[]'}</button>\n            </div>\n            {this.state.riverTask &&\n              <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Mon']} \n                  onClick={() => this.changeRepeat('Mon')}>M</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Tue']} \n                  onClick={() => this.changeRepeat('Tue')}>T</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Wed']} \n                  onClick={() => this.changeRepeat('Wed')}>W</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Thu']} \n                  onClick={() => this.changeRepeat('Thu')}>R</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Fri']} \n                  onClick={() => this.changeRepeat('Fri')}>F</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sat']} \n                  onClick={() => this.changeRepeat('Sat')}>S</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sun']} \n                  onClick={() => this.changeRepeat('Sun')}>U</button>\n              </div>\n            }\n            {startInput}\n            {endInput}\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  if (selected == el) {\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date();\n  // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render(<App />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}