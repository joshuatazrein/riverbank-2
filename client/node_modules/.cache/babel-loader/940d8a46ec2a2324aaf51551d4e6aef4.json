{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\"; // import \"./react-datepicker.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nvar mysql = require('mysql');\n\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: String(new Date().getTime()),\n      title: new Date().toDateString(),\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {\n    repeats: {\n      'Mon': [],\n      'Tue': [],\n      'Wed': [],\n      'Thu': [],\n      'Fri': [],\n      'Sat': [],\n      'Sun': []\n    }\n  }\n};\n\ntry {\n  var data = !localStorage.getItem('data') ? resetData : JSON.parse(localStorage.getItem('data'));\n} catch {\n  var data = resetData;\n}\n\nvar deadlines = {};\nvar startdates = {};\n\ntry {\n  var repeats = data.settings.repeats;\n} catch (err) {\n  console.log('error');\n  var data = resetData;\n}\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\nvar app;\nvar loginItem = /*#__PURE__*/React.createRef();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: '',\n      bank: /*#__PURE__*/React.createRef(),\n      river: /*#__PURE__*/React.createRef()\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container ' + this.state.hideComplete,\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          id: \"bank\",\n          info: data['river'].info,\n          subtasks: data['bank'].subtasks,\n          ref: this.state.bank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Frame, {\n          id: \"river\",\n          info: data['river'].info,\n          subtasks: data['river'].subtasks,\n          ref: this.state.river\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: '',\n      foundTasks: {}\n    };\n  }\n\n  treeSearch(task, idString) {\n    let i = 0;\n\n    for (let subtask of task.subtasks) {\n      if (subtask.title.length > 0) {\n        this.searches[subtask.title] = idString + ' ' + i;\n      }\n\n      this.treeSearch(subtask, idString + ' ' + i);\n      i++;\n    }\n  }\n\n  search(ev) {\n    if (this.state.searchString === '') {\n      this.searches = {};\n      this.treeSearch(data.river, 'river');\n      this.treeSearch(data.bank, 'bank');\n    }\n\n    this.setState({\n      searchString: ev.target.value\n    });\n\n    for (let x of Object.keys(this.searches)) {\n      if (!x.includes(this.state.searchString)) {\n        delete this.searches[x];\n      }\n    }\n\n    console.log(this.searches);\n    this.setState({\n      foundTasks: this.searches\n    });\n  }\n\n  goToSearch(title) {\n    const splits = title.split(' ');\n    const frame = app.current.state[splits[0]];\n    frame.current.changeIndex(Number(splits[1]));\n    setTimeout(() => {\n      console.log(frame.current.frames.map(x => x.current));\n      let currentTask = frame.current.frames[0];\n\n      for (let place of splits.slice(2)) {\n        // zoom into places until you find the task\n        currentTask = currentTask.current.taskList.current.subtaskObjects[Number(place)];\n      }\n\n      console.log(currentTask.current);\n      setTimeout(() => {\n        preventSelect = false;\n        selectTask(currentTask.current, true);\n      }, 50);\n    }, 50);\n    this.setState({\n      searchString: '',\n      foundTasks: {}\n    });\n  }\n\n  render() {\n    this.search = this.search.bind(this);\n    this.treeSearch = this.treeSearch.bind(this);\n    this.goToSearch = this.goToSearch.bind(this);\n    this.searchResults = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\",\n        onChange: ev => this.search(ev),\n        value: this.state.searchString,\n        onKeyDown: ev => {\n          if (ev.key === 'Backspace') {\n            this.setState({\n              searchString: '',\n              foundTasks: {}\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: this.searchResults,\n        onChange: () => {\n          this.goToSearch(this.state.foundTasks[this.searchResults.current.value]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), Object.keys(this.state.foundTasks).map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: x,\n          children: x\n        }, x, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: backup,\n          children: \"backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button ' + this.props.parent.state.hideComplete,\n          onClick: () => {\n            this.props.parent.toggleComplete();\n          },\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      repeats: repeats\n    };\n  }\n\n  startTimer(val) {\n    this.setState({\n      minutes: this.state.minutes + val,\n      seconds: 0\n    });\n    this.play();\n  }\n\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({\n            minutes: (this.state.minutes + 1) * multiplier,\n            seconds: 0\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds + 1\n          });\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n\n          this.setState({\n            minutes: (this.state.minutes - 1) * multiplier,\n            seconds: 59\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  end() {\n    alert('timer complete');\n  }\n\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({\n      minutes: 0,\n      seconds: 0\n    });\n  }\n\n  render() {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(50),\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(25),\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(10),\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(5),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            this.setState({\n              minutes: 0,\n              seconds: 1\n            });\n            this.play();\n          },\n          children: \":5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.playPause(),\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"timerBar\",\n        readOnly: true,\n        value: this.state.minutes + ':' + String(this.state.seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(this.state.lists[this.state.lists.length - 1].title);\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: title,\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    this.frames = []; // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n    const shownLists = this.state.lists.slice(this.state.info.index, endIndex);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), shownLists.map(x => {\n        this.frames.push( /*#__PURE__*/React.createRef());\n\n        if (this.props.id === 'river') {\n          // render state correctly in original lists\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this,\n            deadlines: this.state.deadlines[x.title],\n            startdates: this.state.startdates[x.title],\n            repeats: this.state.repeats[x.title.slice(0, 3)],\n            ref: this.frames[this.frames.length - 1]\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  updateRepeats() {\n    const subtaskIDs = this.state.subtasks.map(x => x.id);\n    const newSubs = this.state.subtasks;\n    console.log(subtaskIDs);\n\n    if (this.props.parent.props.id === 'river') {\n      console.log('river');\n\n      for (let repeat of repeats[this.props.title.slice(0, 3)]) {\n        if (!subtaskIDs.includes(repeat.id)) {\n          newSubs.push(repeat);\n        }\n      }\n    }\n\n    console.log(newSubs);\n\n    if (Object.keys(newSubs).length != Object.keys(this.state.subtasks).length) {\n      this.setState({\n        subtasks: newSubs\n      });\n    }\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    this.updateRepeats = this.updateRepeats.bind(this);\n    this.updateRepeats();\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [this.props.parent.props.id === 'bank' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        className: \"listInput listTitle\",\n        value: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), this.props.parent.props.id === 'river' && this.props.deadlines && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.deadlines).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"deadline\",\n            children: this.props.deadlines[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), this.props.parent.props.id === 'river' && this.props.startdates && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.startdates).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"startdate\",\n            children: this.props.startdates[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    this.subtaskObjects = [];\n    const tasksListed = this.props.subtasks.map(x => {\n      this.subtaskObjects.push( /*#__PURE__*/React.createRef());\n\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent,\n        ref: this.subtaskObjects[this.subtaskObjects.length - 1]\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: [this.props.addTasks && this.props.addTasks, tasksListed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide',\n      riverTask: false,\n      this: this\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    if (parent.props.id === 'river') {\n      this.state.riverTask = true;\n      this.state.repeats = {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title)\n      };\n    }\n  }\n\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (startdates[now.toDateString()] && startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.startDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          startDate: ev.target.value\n        }\n      }));\n    }\n\n    console.log(ev);\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n    }\n  }\n\n  changeEndDate(ev) {\n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (deadlines[now.toDateString()] && deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.endDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      ev = {\n        target: {\n          value: ' '\n        }\n      };\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          endDate: ev.target.value\n        }\n      }));\n    }\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        deadlines: deadlines\n      });\n    }\n  }\n\n  changeRepeat(day) {\n    if (repeats[day].map(x => x.id).includes(this.props.id)) {\n      repeats[day].splice(repeats[day].findIndex(x => x.id == this.props.id), 1);\n    } else {\n      const dataObject = {\n        title: this.state.title,\n        id: this.props.id,\n        subtasks: this.state.subtasks,\n        info: this.state.info\n      };\n      repeats[day].push(dataObject);\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        repeats: repeats\n      });\n    }\n\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.resetRepeats();\n  }\n\n  resetRepeats() {\n    this.setState({\n      repeats: {\n        'Mon': repeats['Mon'].map(x => x.id).includes(this.props.id),\n        'Tue': repeats['Tue'].map(x => x.id).includes(this.props.id),\n        'Wed': repeats['Wed'].map(x => x.id).includes(this.props.id),\n        'Thu': repeats['Thu'].map(x => x.id).includes(this.props.id),\n        'Fri': repeats['Fri'].map(x => x.id).includes(this.props.id),\n        'Sat': repeats['Sat'].map(x => x.id).includes(this.props.id),\n        'Sun': repeats['Sun'].map(x => x.id).includes(this.props.id)\n      }\n    });\n    data.settings.repeats = repeats;\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleCollapse() {\n    let status = this.state.info.collapsed;\n\n    if (status === 'collapsed') {\n      status = '';\n    } else {\n      status = 'collapsed';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        collapsed: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n    // [[don't use global variable]]\n    let parent = this.props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n\n    for (let day of ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {\n      if (repeats[day].map(x => x.id).includes(this.props.id)) {\n        this.changeRepeat(day);\n        console.log(repeats);\n      }\n    }\n\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false;\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n\n    if (this.state.riverTask) {\n      this.resetRepeats();\n    }\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.resetRepeats = this.resetRepeats.bind(this);\n    this.changeRepeat = this.changeRepeat.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && this.state.info.endDate.length > 0 ? 'event' : '';\n\n    const startInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput startDate\",\n      value: this.state.info.startDate,\n      onChange: ev => this.changeStartDate(ev),\n      ref: this.startDateSpan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this);\n\n    const endInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput endDate\",\n      value: this.state.info.endDate,\n      onChange: ev => this.changeEndDate(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 7\n    }, this); // task with info and subtasks\n\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass + ' ' + hasTimes + ' ' + this.state.info.collapsed,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.complete,\n              onClick: this.toggleComplete,\n              children: \"\\u221A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.important,\n              onClick: this.toggleImportant,\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.maybe,\n              onClick: this.toggleMaybe,\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: this.deleteThis,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => {\n                newTask('task');\n                this.displayOptions('hide');\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => this.toggleCollapse(),\n              children: '[]'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this), this.state.riverTask && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Mon'],\n              onClick: () => this.changeRepeat('Mon'),\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Tue'],\n              onClick: () => this.changeRepeat('Tue'),\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Wed'],\n              onClick: () => this.changeRepeat('Wed'),\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Thu'],\n              onClick: () => this.changeRepeat('Thu'),\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Fri'],\n              onClick: () => this.changeRepeat('Fri'),\n              children: \"F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Sat'],\n              onClick: () => this.changeRepeat('Sat'),\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Sun'],\n              onClick: () => this.changeRepeat('Sun'),\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this), startInput, endInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el, force) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n  console.log(selected);\n\n  if (selected == el && !force) {\n    console.log('selected and el are the same');\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  }\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction moveTask(direction) {\n  console.log('movetask');\n  if (!selected) return;\n  const subtasks = selected.props.parent.state.subtasks;\n  const selectedPlace = selected.props.parent.state.subtasks.findIndex(x => x.id == selected.props.id);\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + direction, 0, spliceTask);\n  selected.props.parent.setState(subtasks);\n}\n\nfunction backup() {\n  const now = new Date(); // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      case 'u':\n        moveTask(-1);\n        break;\n\n      case 'd':\n        moveTask(1);\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginUsername: '',\n      loginPassword: '',\n      newUsername: '',\n      newPassword1: '',\n      newPassword2: ''\n    };\n  }\n\n  set(ev, setter) {\n    const obj = this.state;\n    obj[setter] = ev.target.value;\n    this.setState({\n      obj\n    });\n  }\n\n  oldUser() {}\n\n  newUser() {}\n\n  render() {\n    this.loginUsername = /*#__PURE__*/React.createRef();\n    this.loginPassword = /*#__PURE__*/React.createRef();\n    const con = mysql.createConnection({\n      host: \"server204.webhosting.com\",\n      user: \"joshcnd_joshua\",\n      password: \"hn%X=FbWIU]J\"\n    });\n    console.log(con);\n    con.connect(function (err) {\n      if (err) throw err;\n      console.log(\"Connected!\");\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"RIVERBANK 2.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"login:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBar\",\n          ref: this.loginUsername,\n          value: this.state.loginUsername,\n          onChange: e => this.set(e, 'loginUsername'),\n          placeholder: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBar\",\n          ref: this.loginPassword,\n          value: this.state.loginPassword,\n          onChange: e => this.set(e, 'loginPassword'),\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"create new user:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBar\",\n          ref: this.newUsername,\n          value: this.state.newUsername,\n          onChange: e => this.set(e, 'newUsername'),\n          placeholder: \"new username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBar\",\n          ref: this.newPassword1,\n          value: this.state.newPassword1,\n          onChange: e => this.set(e, 'newPassword1'),\n          placeholder: \"new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBar\",\n          ref: this.newPassword2,\n          value: this.state.newPassword2,\n          onChange: e => this.set(e, 'newPassword2'),\n          placeholder: \"new password again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction reset() {\n  data = resetData;\n  localStorage.setItem('data', data);\n}\n\nfunction login() {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Login, {\n    ref: loginItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1013,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  app = /*#__PURE__*/React.createRef();\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n    ref: app\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1021,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\nlogin();","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","useState","ReactDOM","DatePicker","$","render","fs","require","mysql","resetData","bank","info","index","subtasks","id","title","river","String","Date","getTime","toDateString","settings","repeats","data","localStorage","getItem","JSON","parse","deadlines","startdates","err","console","log","selected","preventSelect","copiedTask","width","prevWidth","app","loginItem","createRef","App","Component","constructor","props","state","hideComplete","toggleComplete","setState","StatusBar","searchString","foundTasks","treeSearch","task","idString","i","subtask","length","searches","search","ev","target","value","x","Object","keys","includes","goToSearch","splits","split","frame","current","changeIndex","Number","setTimeout","frames","map","currentTask","place","slice","taskList","subtaskObjects","selectTask","bind","searchResults","key","newTask","cutTask","copyTask","pasteTask","backup","parent","Timer","minutes","seconds","startTimer","val","play","stopwatch","backwards","multiplier","clearInterval","interval","setInterval","end","alert","playPause","audioRef","padStart","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","newIndex","prevState","now","lastDate","date","setDate","getDate","push","endIndex","addEventListener","shownLists","div","List","changeTitle","updateRepeats","subtaskIDs","newSubs","repeat","selectThis","TaskList","addTask","tasksListed","addTasks","Task","displayOptions","riverTask","this","startDate","endDate","collapsed","showHide","hasClass","editHeight","heightSpan","offsetHeight","changeStartDate","deadline","setMonth","changeEndDate","changeRepeat","day","splice","findIndex","dataObject","resetRepeats","setItem","stringify","status","complete","toggleImportant","important","maybe","toggleMaybe","toggleCollapse","deleteThis","save","componentDidMount","editBar","focus","optionsButton","startDateSpan","headingClass","hasTimes","startInput","endInput","alignContent","height","editWidth","type","el","today","force","undefined","saveType","parents","reverse","parentObject","parentId","find","concat","insertIndex","moveTask","direction","selectedPlace","spliceTask","keyComms","ctrlKey","shiftKey","metaKey","altKey","preventDefault","document","activeElement","blur","Login","loginUsername","loginPassword","newUsername","newPassword1","newPassword2","set","setter","obj","oldUser","newUser","con","createConnection","host","user","password","connect","e","reset","login","getElementById","init"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import \"./react-datepicker.css\";\nconst fs = require('fs');\nvar mysql = require('mysql');\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:String(new Date().getTime()), title: new Date().toDateString(), subtasks: [], info: {}}\n    ]}, \n  settings: {repeats: {'Mon': [], 'Tue': [], 'Wed': [], 'Thu': [], \n  'Fri': [], 'Sat': [], 'Sun': [], }}\n};\n\ntry {\n  var data = !localStorage.getItem('data') ? resetData :\n    JSON.parse(localStorage.getItem('data'));\n} catch {\n  var data = resetData;\n}\n\nvar deadlines = {};\nvar startdates = {};\n\ntry {\n  var repeats = data.settings.repeats;\n} catch (err) {\n  console.log('error');\n  var data = resetData;\n}\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\nvar app;\nvar loginItem = React.createRef();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: '', \n      bank: React.createRef(),\n      river: React.createRef(),\n    };\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} ref={this.state.bank} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} ref={this.state.river} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {searchString: '', foundTasks: {}};\n  }\n  treeSearch(task, idString) {\n    let i = 0;\n    for (let subtask of task.subtasks) {\n      if (subtask.title.length > 0) {\n        this.searches[subtask.title] = idString + ' ' + i;\n      }\n      this.treeSearch(subtask, idString + ' ' + i);\n      i ++;\n    }\n  }\n  search(ev) {\n    if (this.state.searchString === '') {\n      this.searches = {};\n      this.treeSearch(data.river, 'river');\n      this.treeSearch(data.bank, 'bank');\n    }\n    this.setState({searchString: ev.target.value});\n    for (let x of Object.keys(this.searches)) {\n      if (!x.includes(this.state.searchString)) {\n        delete this.searches[x];\n      }\n    }\n    console.log(this.searches);\n    this.setState({foundTasks: this.searches});\n  }\n  goToSearch(title) {\n    const splits = title.split(' ');\n    const frame = app.current.state[splits[0]];\n    frame.current.changeIndex(Number(splits[1]));\n    setTimeout(() => {\n      console.log(frame.current.frames.map(x => x.current));\n      let currentTask = frame.current.frames[0];\n      for (let place of splits.slice(2)) {\n        // zoom into places until you find the task\n        currentTask = currentTask.current.taskList.current.\n          subtaskObjects[Number(place)];\n      }\n      console.log(currentTask.current);\n      setTimeout(() => {\n        preventSelect = false;\n        selectTask(currentTask.current, true);\n      }, 50)\n    }, 50)\n    this.setState({searchString: '', foundTasks: {}});\n  }\n  render() {\n    this.search = this.search.bind(this);\n    this.treeSearch = this.treeSearch.bind(this);\n    this.goToSearch = this.goToSearch.bind(this);\n    this.searchResults = React.createRef();\n    return (\n      <div className='statusBar'>\n        <input className='searchBar' onChange={(ev) => this.search(ev)}\n          value={this.state.searchString}\n          onKeyDown={(ev) => {\n            if (ev.key === 'Backspace') {\n              this.setState({searchString: '', foundTasks: {}});\n            }\n          }}></input>\n        <select ref={this.searchResults} onChange={() => {\n          this.goToSearch(this.state.foundTasks[\n            this.searchResults.current.value])\n          }}>\n          <option></option>\n          {Object.keys(this.state.foundTasks).map(x => \n            <option key={x} value={x}>{x}</option>)}\n        </select>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={backup}>backup</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0, repeats: repeats};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    this.play();\n  }\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: (this.state.minutes + 1) * multiplier, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n          this.setState({minutes: (this.state.minutes - 1) * multiplier, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000);\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({minutes: 0, seconds: 0});\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = React.createRef();\n    return (\n      <div>\n        <div className='buttonBar'>\n          <button className='button' onClick={() => this.startTimer(50)}>50</button>\n          <button className='button' onClick={() => this.startTimer(25)}>25</button>\n          <button className='button' onClick={() => this.startTimer(10)}>10</button>\n          <button className='button' onClick={() => this.startTimer(5)}>5</button>\n          <button className='button' onClick={() => {\n            this.setState({minutes: 0, seconds: 1});\n            this.play();\n          }}>:5</button>\n          <button className='button' onClick={() => this.playPause()}>&#9632;</button>\n        </div>\n        <input className='timerBar' readOnly={true}\n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(\n      this.state.lists[this.state.lists.length - 1].title\n    );\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: title, subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    this.frames = [];\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const shownLists = \n      this.state.lists.slice(this.state.info.index, endIndex);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {shownLists.map(x => {\n          this.frames.push(React.createRef());\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} \n                deadlines={this.state.deadlines[x.title]} \n                startdates={this.state.startdates[x.title]} \n                repeats={this.state.repeats[x.title.slice(0, 3)]}\n                ref={this.frames[this.frames.length - 1]} />\n            )\n          } else {\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} />\n            )\n          }\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}};\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  updateRepeats() {\n    const subtaskIDs = this.state.subtasks.map(x => x.id);\n    const newSubs = this.state.subtasks;\n    console.log(subtaskIDs);\n    if (this.props.parent.props.id === 'river') {\n      console.log('river');\n      for (let repeat of repeats[this.props.title.slice(0, 3)]) {\n        if (!subtaskIDs.includes(repeat.id)) {\n          newSubs.push(repeat);\n        }\n      }\n    }\n    console.log(newSubs);\n    if (Object.keys(newSubs).length != \n      Object.keys(this.state.subtasks).length) {\n      this.setState({subtasks: newSubs});\n    }\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    this.updateRepeats = this.updateRepeats.bind(this);\n    this.updateRepeats();\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        {this.props.parent.props.id === 'bank' ?\n          <input className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input> :\n          <input readOnly className='listInput listTitle'\n            value={this.state.title}></input>\n        }\n        {this.props.parent.props.id === 'river' && \n        this.props.deadlines &&\n        <ul>\n          {Object.keys(this.props.deadlines).map(x => {\n            return <li \n              className='deadline' key={String(x)}>\n              {this.props.deadlines[x]}</li>;\n          })}\n        </ul>}\n        {this.props.parent.props.id === 'river' && \n        this.props.startdates &&\n        <ul>\n          {Object.keys(this.props.startdates).map(x => {\n            return <li \n              className='startdate' key={String(x)}>\n              {this.props.startdates[x]}</li>;\n          })}\n        </ul>}\n        {<TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />}\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    this.subtaskObjects = [];\n    const tasksListed = this.props.subtasks.map(x => {\n      this.subtaskObjects.push(React.createRef());\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n          ref={this.subtaskObjects[this.subtaskObjects.length - 1]}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {this.props.addTasks && this.props.addTasks}\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide', riverTask: false,\n      this: this\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    if (parent.props.id === 'river') {\n      this.state.riverTask = true;\n      this.state.repeats = {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title),\n      }\n    }\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (startdates[now.toDateString()] && \n        startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.startDate}};\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, startDate: ev.target.value}})); \n    }\n    console.log(ev);\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n    }\n  }\n  changeEndDate(ev) { \n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (deadlines[now.toDateString()] && \n        deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.endDate}};\n    } else if (ev === 'destroy') {\n      ev = {target: {value: ' '}};\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, endDate: ev.target.value}})); \n    }\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({deadlines: deadlines});\n    }\n  }\n  changeRepeat(day) {\n    if (repeats[day].map(x => x.id).includes(this.props.id)) {\n      repeats[day].splice(repeats[day].findIndex(x => \n        x.id == this.props.id), 1);\n    } else {\n      const dataObject = {title: this.state.title, id: this.props.id, \n        subtasks: this.state.subtasks, info: this.state.info};\n      repeats[day].push(dataObject);\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({repeats: repeats});\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.resetRepeats();\n  }\n  resetRepeats() {\n    this.setState({repeats: {\n      'Mon': repeats['Mon'].map(x => x.id).includes(this.props.id),\n      'Tue': repeats['Tue'].map(x => x.id).includes(this.props.id),\n      'Wed': repeats['Wed'].map(x => x.id).includes(this.props.id),\n      'Thu': repeats['Thu'].map(x => x.id).includes(this.props.id),\n      'Fri': repeats['Fri'].map(x => x.id).includes(this.props.id),\n      'Sat': repeats['Sat'].map(x => x.id).includes(this.props.id),\n      'Sun': repeats['Sun'].map(x => x.id).includes(this.props.id),\n    }});\n    data.settings.repeats = repeats;\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleCollapse() {\n    let status = this.state.info.collapsed\n    if (status === 'collapsed') { status = '' }\n    else { status = 'collapsed' }\n    this.setState(prevState => ({\n      info: {...prevState.info, collapsed: status}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n      // [[don't use global variable]]\n    let parent = this.props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n   for (let day of ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {\n      if (repeats[day].map(x => x.id).includes(this.props.id)) {\n        this.changeRepeat(day);\n        console.log(repeats);\n      }\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n    if (this.state.riverTask) {\n      this.resetRepeats();\n    }\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.resetRepeats = this.resetRepeats.bind(this);\n    this.changeRepeat = this.changeRepeat.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    const startInput = \n      <input className='optionsInput startDate' \n      value={this.state.info.startDate} \n      onChange={(ev) => this.changeStartDate(ev)}\n      ref={this.startDateSpan}></input>\n    const endInput = \n      <input className='optionsInput endDate' \n      value={this.state.info.endDate} \n      onChange={(ev) => this.changeEndDate(ev)}>\n      </input>\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n              <button \n                className={'button ' + this.state.info.complete}\n                onClick={this.toggleComplete}>\n                √</button>\n              <button \n                className={'button ' + this.state.info.important}\n                onClick={this.toggleImportant}>\n                !</button>\n              <button \n                className={'button ' + this.state.info.maybe}\n                onClick={this.toggleMaybe}>\n                ?</button>\n              <button \n                className={'button'}\n                onClick={this.deleteThis}>\n                x</button>\n              <button \n                className={'button'}\n                onClick={() => {\n                  newTask('task');\n                  this.displayOptions('hide');\n                }}>\n                +</button>\n              <button \n                className={'button'}\n                onClick={() => this.toggleCollapse()}>\n                {'[]'}</button>\n            </div>\n            {this.state.riverTask &&\n              <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Mon']} \n                  onClick={() => this.changeRepeat('Mon')}>M</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Tue']} \n                  onClick={() => this.changeRepeat('Tue')}>T</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Wed']} \n                  onClick={() => this.changeRepeat('Wed')}>W</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Thu']} \n                  onClick={() => this.changeRepeat('Thu')}>R</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Fri']} \n                  onClick={() => this.changeRepeat('Fri')}>F</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sat']} \n                  onClick={() => this.changeRepeat('Sat')}>S</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sun']} \n                  onClick={() => this.changeRepeat('Sun')}>U</button>\n              </div>\n            }\n            {startInput}\n            {endInput}\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el, force) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  console.log(selected);\n  if (selected == el && !force) {\n    console.log('selected and el are the same');\n    return;\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  }\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction moveTask(direction) {\n  console.log('movetask');\n  if (!selected) return;\n  const subtasks = selected.props.parent.state.subtasks;\n  const selectedPlace = \n    selected.props.parent.state.subtasks.findIndex(x => x.id == selected.props.id);\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + direction, 0, spliceTask);\n  selected.props.parent.setState(subtasks);\n}\n\nfunction backup() {\n  const now = new Date();\n  // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      case 'u':\n        moveTask(-1);\n        break;\n      case 'd':\n        moveTask(1);\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {loginUsername: '', loginPassword: '', \n      newUsername: '', newPassword1: '', newPassword2: ''};\n  }\n  set(ev, setter) {\n    const obj = this.state;\n    obj[setter] = ev.target.value;\n    this.setState({obj});\n  }\n  oldUser() {\n    \n  }\n  newUser() {\n\n  }\n  render() {\n    this.loginUsername = React.createRef();\n    this.loginPassword = React.createRef();\n    const con = mysql.createConnection({\n      host: \"server204.webhosting.com\",\n      user: \"joshcnd_joshua\",\n      password: \"hn%X=FbWIU]J\"\n    });\n    console.log(con);\n    con.connect(function(err) {\n      if (err) throw err;\n      console.log(\"Connected!\");\n    });\n    return (\n      <div>\n        <div className='title'>RIVERBANK 2.0</div>\n        <div className='login'>\n          <p>login:</p>\n          <input className='searchBar' ref={this.loginUsername} value={this.state.loginUsername} onChange={(e) => this.set(e, 'loginUsername')}\n          placeholder='username'></input>\n          <input className='searchBar' ref={this.loginPassword} value={this.state.loginPassword} onChange={(e) => this.set(e, 'loginPassword')}placeholder='password'></input>\n          <button className='button'>submit</button>\n          <p>create new user:</p>\n          <input className='searchBar' ref={this.newUsername} value={this.state.newUsername} onChange={(e) => this.set(e, 'newUsername')}\n          placeholder='new username'></input>\n          <input className='searchBar' ref={this.newPassword1} value={this.state.newPassword1} onChange={(e) => this.set(e, 'newPassword1')}\n          placeholder='new password'></input>\n          <input className='searchBar' ref={this.newPassword2} value={this.state.newPassword2} onChange={(e) => this.set(e, 'newPassword2')}\n          placeholder='new password again'></input>\n          <button className='button'>submit</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction reset() {\n  data = resetData;\n  localStorage.setItem('data', data);\n}\n\nfunction login() {\n  ReactDOM.render(<Login ref={loginItem} />, document.getElementById('root'));\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  app = React.createRef();\n  ReactDOM.render(<App ref={app} />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\nlogin();"]},"metadata":{},"sourceType":"module"}