{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\"; // import \"./react-datepicker.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: String(new Date().getTime()),\n      title: new Date().toDateString(),\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {\n    repeats: {\n      'Mon': [],\n      'Tue': [],\n      'Wed': [],\n      'Thu': [],\n      'Fri': [],\n      'Sat': [],\n      'Sun': []\n    }\n  }\n}; // var data = !localStorage.getItem('data') ? { resetData } :\n//   JSON.parse(localStorage.getItem('data'));\n\nvar deadlines = {};\nvar startdates = {};\nvar data = resetData;\nvar repeats = data.settings.repeats;\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\nvar app;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: '',\n      bank: /*#__PURE__*/React.createRef(),\n      river: /*#__PURE__*/React.createRef()\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container ' + this.state.hideComplete,\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          id: \"bank\",\n          info: data['river'].info,\n          subtasks: data['bank'].subtasks,\n          ref: this.state.bank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Frame, {\n          id: \"river\",\n          info: data['river'].info,\n          subtasks: data['river'].subtasks,\n          ref: this.state.river\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: '',\n      foundTasks: {}\n    };\n  }\n\n  treeSearch(task, idString) {\n    let i = 0;\n\n    for (let subtask of task.subtasks) {\n      if (subtask.title.length > 0) {\n        this.searches[subtask.title] = idString + ' ' + i;\n      }\n\n      this.treeSearch(subtask, idString + ' ' + i);\n      i++;\n    }\n  }\n\n  search(ev) {\n    if (this.state.searchString === '') {\n      this.searches = {};\n      this.treeSearch(data.river, 'river');\n      this.treeSearch(data.bank, 'bank');\n    }\n\n    this.setState({\n      searchString: ev.target.value\n    });\n\n    for (let x of Object.keys(this.searches)) {\n      if (!x.includes(this.state.searchString)) {\n        delete this.searches[x];\n      }\n    }\n\n    console.log(this.searches);\n    this.setState({\n      foundTasks: this.searches\n    });\n  }\n\n  goToSearch(title) {\n    const splits = title.split(' ');\n    const frame = app.current.state[splits[0]];\n    frame.current.changeIndex(Number(splits[1]));\n    setTimeout(() => {\n      console.log(frame.current.frames.map(x => x.current));\n      let currentTask = frame.current.frames[0];\n\n      for (let place of splits.slice(2)) {\n        // zoom into places until you find the task\n        currentTask = currentTask.current.taskList.current.subtaskObjects[Number(place)];\n      }\n\n      console.log(currentTask.current);\n      setTimeout(() => {\n        preventSelect = false;\n        selectTask(currentTask.current, true);\n      }, 50);\n    }, 50);\n    this.setState({\n      searchString: '',\n      foundTasks: {}\n    });\n  }\n\n  render() {\n    this.search = this.search.bind(this);\n    this.treeSearch = this.treeSearch.bind(this);\n    this.goToSearch = this.goToSearch.bind(this);\n    this.searchResults = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\",\n        onChange: ev => this.search(ev),\n        value: this.state.searchString,\n        onKeyDown: ev => {\n          if (ev.key === 'Backspace') {\n            this.setState({\n              searchString: '',\n              foundTasks: {}\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: this.searchResults,\n        onChange: () => {\n          this.goToSearch(this.state.foundTasks[this.searchResults.current.value]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), Object.keys(this.state.foundTasks).map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: x,\n          children: x\n        }, x, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: backup,\n          children: \"backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button ' + this.props.parent.state.hideComplete,\n          onClick: () => {\n            this.props.parent.toggleComplete();\n          },\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      repeats: repeats\n    };\n  }\n\n  startTimer(val) {\n    this.setState({\n      minutes: this.state.minutes + val,\n      seconds: 0\n    });\n    this.play();\n  }\n\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({\n            minutes: (this.state.minutes + 1) * multiplier,\n            seconds: 0\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds + 1\n          });\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n\n          this.setState({\n            minutes: (this.state.minutes - 1) * multiplier,\n            seconds: 59\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  end() {\n    alert('timer complete');\n  }\n\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({\n      minutes: 0,\n      seconds: 0\n    });\n  }\n\n  render() {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(50),\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(25),\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(10),\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(5),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            this.setState({\n              minutes: 0,\n              seconds: 1\n            });\n            this.play();\n          },\n          children: \":5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.playPause(),\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"timerBar\",\n        readOnly: true,\n        value: this.state.minutes + ':' + String(this.state.seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(this.state.lists[this.state.lists.length - 1].title);\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: title,\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    this.frames = []; // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n    const shownLists = this.state.lists.slice(this.state.info.index, endIndex);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), shownLists.map(x => {\n        this.frames.push( /*#__PURE__*/React.createRef());\n\n        if (this.props.id === 'river') {\n          // render state correctly in original lists\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this,\n            deadlines: this.state.deadlines[x.title],\n            startdates: this.state.startdates[x.title],\n            repeats: this.state.repeats[x.title.slice(0, 3)],\n            ref: this.frames[this.frames.length - 1]\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [this.props.parent.props.id === 'bank' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        className: \"listInput listTitle\",\n        value: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), this.props.parent.props.id === 'river' && this.props.deadlines && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.deadlines).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"deadline\",\n            children: this.props.deadlines[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), this.props.parent.props.id === 'river' && this.props.startdates && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.startdates).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"startdate\",\n            children: this.props.startdates[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), this.props.parent.props.id === 'river' && this.props.repeats ? /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this,\n        addTasks: this.props.repeats.map(x => {\n          return /*#__PURE__*/_jsxDEV(RepeatTask, {\n            subtasks: [],\n            parent: this,\n            title: x,\n            id: x,\n            info: {}\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass RepeatTask extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Task, {\n      id: this.props.id,\n      info: this.props.info,\n      title: this.props.title,\n      subtasks: this.props.subtasks,\n      parent: this.props.parent\n    }, this.props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    this.subtaskObjects = [];\n    const tasksListed = this.props.subtasks.map(x => {\n      this.subtaskObjects.push( /*#__PURE__*/React.createRef());\n\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent,\n        ref: this.subtaskObjects[this.subtaskObjects.length - 1]\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: [this.props.addTasks && this.props.addTasks, tasksListed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide',\n      riverTask: false,\n      this: this\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    if (parent.props.id === 'river') {\n      this.state.riverTask = true;\n      this.state.repeats = {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title)\n      };\n    }\n  }\n\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (startdates[now.toDateString()] && startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.startDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          startDate: ev.target.value\n        }\n      }));\n    }\n\n    console.log(ev);\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n    }\n  }\n\n  changeEndDate(ev) {\n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (deadlines[now.toDateString()] && deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.endDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      ev = {\n        target: {\n          value: ' '\n        }\n      };\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          endDate: ev.target.value\n        }\n      }));\n    }\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        deadlines: deadlines\n      });\n    }\n  }\n\n  changeRepeat(day) {\n    if (repeats[day].includes(this.state.title)) {\n      repeats[day].splice(repeats[day].indexOf(this.state.title), 1);\n    } else {\n      repeats[day].push(this.state.title);\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        repeats: repeats\n      });\n    }\n\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.resetRepeats();\n  }\n\n  resetRepeats() {\n    this.setState({\n      repeats: {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title)\n      }\n    });\n    data.settings.repeats = repeats;\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleCollapse() {\n    let status = this.state.info.collapsed;\n\n    if (status === 'collapsed') {\n      status = '';\n    } else {\n      status = 'collapsed';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        collapsed: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n    // [[don't use global variable]]\n    let parent = this.props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n\n    if (this.state.repeats) {\n      for (let day of ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {\n        if (this.state.repeats[day]) {\n          this.changeRepeat(day);\n        }\n      }\n    }\n\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false;\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n\n    if (this.state.riverTask) {\n      this.resetRepeats();\n    }\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.resetRepeats = this.resetRepeats.bind(this);\n    this.changeRepeat = this.changeRepeat.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && this.state.info.endDate.length > 0 ? 'event' : '';\n\n    const startInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput startDate\",\n      value: this.state.info.startDate,\n      onChange: ev => this.changeStartDate(ev),\n      ref: this.startDateSpan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 7\n    }, this);\n\n    const endInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput endDate\",\n      value: this.state.info.endDate,\n      onChange: ev => this.changeEndDate(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this); // task with info and subtasks\n\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass + ' ' + hasTimes + ' ' + this.state.info.collapsed,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.complete,\n              onClick: this.toggleComplete,\n              children: \"\\u221A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.important,\n              onClick: this.toggleImportant,\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.maybe,\n              onClick: this.toggleMaybe,\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: this.deleteThis,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => {\n                newTask('task');\n                this.displayOptions('hide');\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => this.toggleCollapse(),\n              children: '[]'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), this.state.riverTask && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Mon'],\n              onClick: () => this.changeRepeat('Mon'),\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Tue'],\n              onClick: () => this.changeRepeat('Tue'),\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Wed'],\n              onClick: () => this.changeRepeat('Wed'),\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Thu'],\n              onClick: () => this.changeRepeat('Thu'),\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Fri'],\n              onClick: () => this.changeRepeat('Fri'),\n              children: \"F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Sat'],\n              onClick: () => this.changeRepeat('Sat'),\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button repeatButton ' + this.state.repeats['Sun'],\n              onClick: () => this.changeRepeat('Sun'),\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this), startInput, endInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el, force) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n  console.log(selected);\n\n  if (selected == el && !force) {\n    console.log('selected and el are the same');\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  }\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date(); // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  app = /*#__PURE__*/React.createRef();\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n    ref: app\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 934,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","useState","ReactDOM","DatePicker","$","render","fs","require","resetData","bank","info","index","subtasks","id","title","river","String","Date","getTime","toDateString","settings","repeats","deadlines","startdates","data","selected","preventSelect","copiedTask","width","prevWidth","app","App","Component","constructor","props","state","hideComplete","createRef","toggleComplete","setState","StatusBar","searchString","foundTasks","treeSearch","task","idString","i","subtask","length","searches","search","ev","target","value","x","Object","keys","includes","console","log","goToSearch","splits","split","frame","current","changeIndex","Number","setTimeout","frames","map","currentTask","place","slice","taskList","subtaskObjects","selectTask","bind","searchResults","key","newTask","cutTask","copyTask","pasteTask","backup","parent","Timer","minutes","seconds","startTimer","val","play","stopwatch","backwards","multiplier","clearInterval","interval","setInterval","end","alert","playPause","audioRef","padStart","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","newIndex","prevState","now","lastDate","date","setDate","getDate","push","endIndex","addEventListener","shownLists","div","List","changeTitle","selectThis","RepeatTask","TaskList","addTask","tasksListed","addTasks","Task","displayOptions","riverTask","this","startDate","endDate","collapsed","showHide","hasClass","editHeight","heightSpan","offsetHeight","changeStartDate","deadline","setMonth","changeEndDate","changeRepeat","day","splice","indexOf","findIndex","resetRepeats","localStorage","setItem","JSON","stringify","status","complete","toggleImportant","important","maybe","toggleMaybe","toggleCollapse","deleteThis","save","componentDidMount","editBar","focus","optionsButton","startDateSpan","headingClass","hasTimes","startInput","endInput","alignContent","height","editWidth","type","el","today","force","undefined","saveType","parents","reverse","parentObject","parentId","find","concat","insertIndex","keyComms","ctrlKey","shiftKey","metaKey","altKey","preventDefault","document","activeElement","blur","init","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import \"./react-datepicker.css\";\nconst fs = require('fs');\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:String(new Date().getTime()), title: new Date().toDateString(), subtasks: [], info: {}}\n    ]}, \n  settings: {repeats: {'Mon': [], 'Tue': [], 'Wed': [], 'Thu': [], \n  'Fri': [], 'Sat': [], 'Sun': [], }}\n};\n\n// var data = !localStorage.getItem('data') ? { resetData } :\n//   JSON.parse(localStorage.getItem('data'));\n\nvar deadlines = {};\nvar startdates = {};\n\nvar data = resetData;\nvar repeats = data.settings.repeats;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\nvar app;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: '', \n      bank: React.createRef(),\n      river: React.createRef(),\n    };\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} ref={this.state.bank} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} ref={this.state.river} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {searchString: '', foundTasks: {}};\n  }\n  treeSearch(task, idString) {\n    let i = 0;\n    for (let subtask of task.subtasks) {\n      if (subtask.title.length > 0) {\n        this.searches[subtask.title] = idString + ' ' + i;\n      }\n      this.treeSearch(subtask, idString + ' ' + i);\n      i ++;\n    }\n  }\n  search(ev) {\n    if (this.state.searchString === '') {\n      this.searches = {};\n      this.treeSearch(data.river, 'river');\n      this.treeSearch(data.bank, 'bank');\n    }\n    this.setState({searchString: ev.target.value});\n    for (let x of Object.keys(this.searches)) {\n      if (!x.includes(this.state.searchString)) {\n        delete this.searches[x];\n      }\n    }\n    console.log(this.searches);\n    this.setState({foundTasks: this.searches});\n  }\n  goToSearch(title) {\n    const splits = title.split(' ');\n    const frame = app.current.state[splits[0]];\n    frame.current.changeIndex(Number(splits[1]));\n    setTimeout(() => {\n      console.log(frame.current.frames.map(x => x.current));\n      let currentTask = frame.current.frames[0];\n      for (let place of splits.slice(2)) {\n        // zoom into places until you find the task\n        currentTask = currentTask.current.taskList.current.\n          subtaskObjects[Number(place)];\n      }\n      console.log(currentTask.current);\n      setTimeout(() => {\n        preventSelect = false;\n        selectTask(currentTask.current, true);\n      }, 50)\n    }, 50)\n    this.setState({searchString: '', foundTasks: {}});\n  }\n  render() {\n    this.search = this.search.bind(this);\n    this.treeSearch = this.treeSearch.bind(this);\n    this.goToSearch = this.goToSearch.bind(this);\n    this.searchResults = React.createRef();\n    return (\n      <div className='statusBar'>\n        <input className='searchBar' onChange={(ev) => this.search(ev)}\n          value={this.state.searchString}\n          onKeyDown={(ev) => {\n            if (ev.key === 'Backspace') {\n              this.setState({searchString: '', foundTasks: {}});\n            }\n          }}></input>\n        <select ref={this.searchResults} onChange={() => {\n          this.goToSearch(this.state.foundTasks[\n            this.searchResults.current.value])\n          }}>\n          <option></option>\n          {Object.keys(this.state.foundTasks).map(x => \n            <option key={x} value={x}>{x}</option>)}\n        </select>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={backup}>backup</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0, repeats: repeats};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    this.play();\n  }\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: (this.state.minutes + 1) * multiplier, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n          this.setState({minutes: (this.state.minutes - 1) * multiplier, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000);\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({minutes: 0, seconds: 0});\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = React.createRef();\n    return (\n      <div>\n        <div className='buttonBar'>\n          <button className='button' onClick={() => this.startTimer(50)}>50</button>\n          <button className='button' onClick={() => this.startTimer(25)}>25</button>\n          <button className='button' onClick={() => this.startTimer(10)}>10</button>\n          <button className='button' onClick={() => this.startTimer(5)}>5</button>\n          <button className='button' onClick={() => {\n            this.setState({minutes: 0, seconds: 1});\n            this.play();\n          }}>:5</button>\n          <button className='button' onClick={() => this.playPause()}>&#9632;</button>\n        </div>\n        <input className='timerBar' readOnly={true}\n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(\n      this.state.lists[this.state.lists.length - 1].title\n    );\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: title, subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    this.frames = [];\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const shownLists = \n      this.state.lists.slice(this.state.info.index, endIndex);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {shownLists.map(x => {\n          this.frames.push(React.createRef());\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} \n                deadlines={this.state.deadlines[x.title]} \n                startdates={this.state.startdates[x.title]} \n                repeats={this.state.repeats[x.title.slice(0, 3)]}\n                ref={this.frames[this.frames.length - 1]} />\n            )\n          } else {\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} />\n            )\n          }\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        {this.props.parent.props.id === 'bank' ?\n          <input className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input> :\n          <input readOnly className='listInput listTitle'\n            value={this.state.title}></input>\n        }\n        {this.props.parent.props.id === 'river' && \n        this.props.deadlines &&\n        <ul>\n          {Object.keys(this.props.deadlines).map(x => {\n            return <li \n              className='deadline' key={String(x)}>\n              {this.props.deadlines[x]}</li>;\n          })}\n        </ul>}\n        {this.props.parent.props.id === 'river' && \n        this.props.startdates &&\n        <ul>\n          {Object.keys(this.props.startdates).map(x => {\n            return <li \n              className='startdate' key={String(x)}>\n              {this.props.startdates[x]}</li>;\n          })}\n        </ul>}\n        {(this.props.parent.props.id === 'river' && \n        this.props.repeats) ?\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} addTasks={this.props.repeats.map(x => {\n            return <RepeatTask \n              subtasks={[]} parent={this} title={x}\n              key={x} id={x} info={{}} />;\n          })} /> :\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n        }\n      </div>\n    )\n  }\n}\n\nclass RepeatTask extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render () {\n    return <Task \n      key={this.props.id}\n      id={this.props.id}\n      info={this.props.info}\n      title={this.props.title}\n      subtasks={this.props.subtasks}\n      parent={this.props.parent} />\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    this.subtaskObjects = [];\n    const tasksListed = this.props.subtasks.map(x => {\n      this.subtaskObjects.push(React.createRef());\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n          ref={this.subtaskObjects[this.subtaskObjects.length - 1]}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {this.props.addTasks && this.props.addTasks}\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide', riverTask: false,\n      this: this\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    if (parent.props.id === 'river') {\n      this.state.riverTask = true;\n      this.state.repeats = {\n        'Mon': repeats['Mon'].includes(this.state.title),\n        'Tue': repeats['Tue'].includes(this.state.title),\n        'Wed': repeats['Wed'].includes(this.state.title),\n        'Thu': repeats['Thu'].includes(this.state.title),\n        'Fri': repeats['Fri'].includes(this.state.title),\n        'Sat': repeats['Sat'].includes(this.state.title),\n        'Sun': repeats['Sun'].includes(this.state.title),\n      }\n    }\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (startdates[now.toDateString()] && \n        startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.startDate}};\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, startDate: ev.target.value}})); \n    }\n    console.log(ev);\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n    }\n  }\n  changeEndDate(ev) { \n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (deadlines[now.toDateString()] && \n        deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.endDate}};\n    } else if (ev === 'destroy') {\n      ev = {target: {value: ' '}};\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, endDate: ev.target.value}})); \n    }\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({deadlines: deadlines});\n    }\n  }\n  changeRepeat(day) {\n    if (repeats[day].includes(this.state.title)) {\n      repeats[day].splice(repeats[day].indexOf(this.state.title), 1);\n    } else {\n      repeats[day].push(this.state.title)\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({repeats: repeats});\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.resetRepeats();\n  }\n  resetRepeats() {\n    this.setState({repeats: {\n      'Mon': repeats['Mon'].includes(this.state.title),\n      'Tue': repeats['Tue'].includes(this.state.title),\n      'Wed': repeats['Wed'].includes(this.state.title),\n      'Thu': repeats['Thu'].includes(this.state.title),\n      'Fri': repeats['Fri'].includes(this.state.title),\n      'Sat': repeats['Sat'].includes(this.state.title),\n      'Sun': repeats['Sun'].includes(this.state.title),\n    }});\n    data.settings.repeats = repeats;\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleCollapse() {\n    let status = this.state.info.collapsed\n    if (status === 'collapsed') { status = '' }\n    else { status = 'collapsed' }\n    this.setState(prevState => ({\n      info: {...prevState.info, collapsed: status}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n      // [[don't use global variable]]\n    let parent = this.props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n    if (this.state.repeats) {\n      for (let day of ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {\n        if (this.state.repeats[day]) {\n          this.changeRepeat(day);\n        }\n      }\n    }\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n    if (this.state.riverTask) {\n      this.resetRepeats();\n    }\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.resetRepeats = this.resetRepeats.bind(this);\n    this.changeRepeat = this.changeRepeat.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    const startInput = \n      <input className='optionsInput startDate' \n      value={this.state.info.startDate} \n      onChange={(ev) => this.changeStartDate(ev)}\n      ref={this.startDateSpan}></input>\n    const endInput = \n      <input className='optionsInput endDate' \n      value={this.state.info.endDate} \n      onChange={(ev) => this.changeEndDate(ev)}>\n      </input>\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n              <button \n                className={'button ' + this.state.info.complete}\n                onClick={this.toggleComplete}>\n                √</button>\n              <button \n                className={'button ' + this.state.info.important}\n                onClick={this.toggleImportant}>\n                !</button>\n              <button \n                className={'button ' + this.state.info.maybe}\n                onClick={this.toggleMaybe}>\n                ?</button>\n              <button \n                className={'button'}\n                onClick={this.deleteThis}>\n                x</button>\n              <button \n                className={'button'}\n                onClick={() => {\n                  newTask('task');\n                  this.displayOptions('hide');\n                }}>\n                +</button>\n              <button \n                className={'button'}\n                onClick={() => this.toggleCollapse()}>\n                {'[]'}</button>\n            </div>\n            {this.state.riverTask &&\n              <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Mon']} \n                  onClick={() => this.changeRepeat('Mon')}>M</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Tue']} \n                  onClick={() => this.changeRepeat('Tue')}>T</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Wed']} \n                  onClick={() => this.changeRepeat('Wed')}>W</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Thu']} \n                  onClick={() => this.changeRepeat('Thu')}>R</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Fri']} \n                  onClick={() => this.changeRepeat('Fri')}>F</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sat']} \n                  onClick={() => this.changeRepeat('Sat')}>S</button>\n                <button \n                  className={'button repeatButton ' + \n                  this.state.repeats['Sun']} \n                  onClick={() => this.changeRepeat('Sun')}>U</button>\n              </div>\n            }\n            {startInput}\n            {endInput}\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el, force) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  console.log(selected);\n  if (selected == el && !force) {\n    console.log('selected and el are the same');\n    return;\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  }\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date();\n  // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  app = React.createRef();\n  ReactDOM.render(<App ref={app} />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}