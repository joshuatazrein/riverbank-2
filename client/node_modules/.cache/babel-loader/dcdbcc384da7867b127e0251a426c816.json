{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React, { useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar data = {\n  bank: [],\n  river: [],\n  settings: {}\n};\nlet selected;\nlet preventSelect;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Frame, {\n        type: \"bank\",\n        lists: data.bank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Frame, {\n        type: \"river\",\n        lists: data.river\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\n\nfunction StatusBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statusBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonBar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: newTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = StatusBar;\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.lists\n    };\n  }\n\n  render() {\n    const context = /*#__PURE__*/React.createContext();\n    this.context = context;\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.type,\n      className: \"frame\",\n      children: this.state.lists.map(x => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          title: x.title,\n          subtasks: x.subtasks,\n          frame: this.props.parent\n        }, x.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.props.subtasks,\n        frame: this.props.parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  addTask() {\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = {\n      id: String(now),\n      initialInfo: {\n        complete: ''\n      },\n      initialText: '',\n      initialSubtasks: []\n    };\n    const subtasks = this.state.subtasks;\n    subtasks.push(newTask);\n    this.setState({\n      subtasks: subtasks\n    });\n  }\n\n  constructor(props) {\n    super();\n    this.addTask = this.addTask.bind(this);\n    this.state = {\n      subtasks: props.subtasks,\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.subtasks.map(x => {\n        console.log(x.initialKey);\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: x.id,\n          info: x.initialInfo,\n          text: x.initialText,\n          subtasks: x.initialSubtasks,\n          parent: this\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      text: props.text,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n    console.log(this.state);\n  }\n\n  displayOptions(ev) {\n    console.log(ev.target);\n\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      console.log('failed');\n      return;\n    }\n\n    if (this.state.displayOptions == 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    } else {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    }\n  }\n\n  changeText(ev) {\n    this.setState({\n      text: ev.target.value\n    });\n  }\n\n  changeStartDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        startDate: ev.target.value\n      }\n    }));\n  }\n\n  changeEndDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        endDate: ev.target.value\n      }\n    }));\n    console.log(this.state.info);\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status == 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    console.log(this.state.info);\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status == 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    console.log(this.state.info);\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status == 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    console.log(this.state.info);\n  }\n\n  deleteThis() {\n    console.log(this.state);\n    console.log(this.state.parent.state.subtasks, this.state.id);\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id == this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n  }\n\n  save() {\n    // save the new data\n    console.log(data[this.state.parent.type]);\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.save = this.save.bind(this); // task with info and subtasks\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.complete,\n            onClick: this.toggleComplete,\n            children: \"\\u221A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.important,\n            onClick: this.toggleImportant,\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.maybe,\n            onClick: this.toggleMaybe,\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: this.deleteThis,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput\",\n            value: this.state.info.startDate,\n            onChange: ev => this.changeStartDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput\",\n            value: this.state.info.endDate,\n            onChange: ev => this.changeEndDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.text,\n        onChange: ev => this.changeText(ev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          subtasks: this.state.subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (!selected.state) {\n    el = selected;\n  } else if (selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  console.log(el.taskList);\n  el.taskList.current.state.addTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n  selected = el;\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 500);\n  console.log(selected);\n}\n\nfunction init() {\n  selected = undefined;\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n}\n\ninit();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StatusBar\");","map":{"version":3,"sources":["/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","useRef","ReactDOM","$","render","data","bank","river","settings","selected","preventSelect","App","StatusBar","newTask","Frame","Component","constructor","props","state","lists","context","createContext","div","type","map","x","title","subtasks","parent","List","taskList","createRef","selectThis","selectTask","bind","TaskList","addTask","today","Date","now","getTime","id","String","initialInfo","complete","initialText","initialSubtasks","push","setState","console","log","initialKey","Task","info","text","displayOptions","ev","target","hasClass","changeText","value","changeStartDate","prevState","startDate","changeEndDate","endDate","toggleComplete","status","toggleImportant","important","maybe","toggleMaybe","deleteThis","currentTask","findIndex","splice","save","el","current","setTimeout","init","undefined","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nvar data={bank: [], river:[], settings: {}};\n\nlet selected;\nlet preventSelect;\n\nfunction App() {\n  return (\n    <>\n      <StatusBar />\n      <div className='container'>\n        <Frame type='bank' lists={data.bank} />\n        <Frame type='river' lists={data.river} />\n      </div>\n    </>\n  )\n}\n\nfunction StatusBar() {\n  return (\n    <div className='statusBar'>\n      <input className='searchBar'></input>\n      <div className='buttonBar'>\n        <button className='button' onClick={newTask}>+</button>\n      </div>\n    </div>\n  )\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.lists}\n  }\n  render() {\n    const context = React.createContext();\n    this.context = context;\n    const div = (\n      <div id={this.props.type} className='frame'>\n        {this.state.lists.map(x => {\n          return (\n            <List key={x.title} title={x.title} subtasks={x.subtasks} \n              frame={this.props.parent} />\n          )\n        })}\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        <h1>{this.props.title}</h1>\n        <TaskList ref={this.taskList} subtasks={this.props.subtasks} \n          frame={this.props.parent} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  addTask() {\n    const today = new Date();\n    const now = today.getTime();\n    const newTask={\n      id: String(now),\n      initialInfo: {complete: ''},\n      initialText: '',\n      initialSubtasks: [],\n    }\n    const subtasks = this.state.subtasks;\n    subtasks.push(newTask);\n    this.setState({subtasks: subtasks});\n  }\n  constructor(props) {\n    super();\n    this.addTask = this.addTask.bind(this);\n    this.state = {subtasks: props.subtasks, addTask: this.addTask};\n  }\n  render() {\n    return (\n      <ul>\n        {this.state.subtasks.map(x => {\n          console.log(x.initialKey);\n          return (\n            <Task \n              key={x.id}\n              id={x.id}\n              info={x.initialInfo}\n              text={x.initialText}\n              subtasks={x.initialSubtasks}\n              parent={this}\n            />\n          )}\n        )}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {info: props.info, text: props.text, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'};\n    console.log(this.state);\n  }\n  displayOptions(ev) {\n    console.log(ev.target);\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      console.log('failed');\n      return\n    }\n    if (this.state.displayOptions == 'hide') {\n      this.setState({displayOptions: 'show'});\n    } else {\n      this.setState({displayOptions: 'hide'});\n    }\n  }\n  changeText(ev) { this.setState({text: ev.target.value}); }\n  changeStartDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, startDate: ev.target.value}})); \n  }\n  changeEndDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, endDate: ev.target.value}})); \n    console.log(this.state.info);\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status == 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    console.log(this.state.info);\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status == 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    console.log(this.state.info);\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status == 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    console.log(this.state.info);\n  }\n  deleteThis() {\n    console.log(this.state);\n    console.log(this.state.parent.state.subtasks, this.state.id);\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id == this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    this.state.parent.setState({subtasks: subtasks});\n  }\n  save() {\n    // save the new data\n    console.log(data[this.state.parent.type]);\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.save = this.save.bind(this);\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}>\n          <div className={'options ' + this.state.displayOptions}>\n            <button \n              className={'button ' + this.state.info.complete}\n              onClick={this.toggleComplete}>\n                √\n              </button>\n            <button \n              className={'button ' + this.state.info.important}\n              onClick={this.toggleImportant}>\n                !\n              </button>\n            <button \n              className={'button ' + this.state.info.maybe}\n              onClick={this.toggleMaybe}>\n                ?\n              </button>\n            <button \n              className={'button'}\n              onClick={this.deleteThis}>\n                x\n              </button>\n            <input className='optionsInput' \n              value={this.state.info.startDate} \n              onChange={(ev) => this.changeStartDate(ev)}>\n            </input>\n            <input className='optionsInput' \n              value={this.state.info.endDate} \n              onChange={(ev) => this.changeEndDate(ev)}>\n            </input>\n          </div>\n        </span>\n        <textarea className='editBar' value={this.state.text}\n          onChange={(ev) => this.changeText(ev)}></textarea>\n        <ul>\n          <TaskList subtasks={this.state.subtasks} />\n        </ul>\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (!selected.state) {\n    el = selected;\n  } else if (selected.state.parent) {\n    el = selected.state.parent;\n  }\n  console.log(el.taskList);\n  el.taskList.current.state.addTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  selected = el;\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 500)\n  console.log(selected);\n}\n\nfunction init() {\n  selected = undefined;\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}