{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\"; // import \"./react-datepicker.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: String(new Date().getTime()).slice(11) + \"'\" + String(new Date().getTime()).slice(13),\n      title: new Date().toDateString(),\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {\n    repeats: {\n      'Mon': [],\n      'Tue': [],\n      'Wed': [],\n      'Thu': [],\n      'Fri': [],\n      'Sat': [],\n      'Sun': []\n    }\n  }\n};\nvar data;\n\ntry {\n  data = !localStorage.getItem('data') ? {\n    resetData\n  } : JSON.parse(localStorage.getItem('data'));\n} catch (err) {\n  console.log(err);\n  data = resetData;\n}\n\nvar deadlines = {};\nvar startdates = {};\n\ntry {\n  var repeats = data.settings.repeats;\n} catch (err) {\n  console.log('error');\n  var data = resetData;\n}\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\nvar app;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: '',\n      bank: /*#__PURE__*/React.createRef(),\n      river: /*#__PURE__*/React.createRef()\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container ' + this.state.hideComplete,\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          id: \"bank\",\n          info: data['river'].info,\n          subtasks: data['bank'].subtasks,\n          ref: this.state.bank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Frame, {\n          id: \"river\",\n          info: data['river'].info,\n          subtasks: data['river'].subtasks,\n          ref: this.state.river\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: '',\n      foundTasks: {}\n    };\n  }\n\n  treeSearch(task, idString) {\n    let i = 0;\n\n    for (let subtask of task.subtasks) {\n      if (subtask.title.length > 0) {\n        this.searches[subtask.title] = idString + ' ' + i;\n      }\n\n      this.treeSearch(subtask, idString + ' ' + i);\n      i++;\n    }\n  }\n\n  search(ev) {\n    if (this.state.searchString === '') {\n      this.searches = {};\n      this.treeSearch(data.river, 'river');\n      this.treeSearch(data.bank, 'bank');\n    }\n\n    this.setState({\n      searchString: ev.target.value\n    });\n\n    for (let x of Object.keys(this.searches)) {\n      if (!x.includes(this.state.searchString)) {\n        delete this.searches[x];\n      }\n    }\n\n    console.log(this.searches);\n    this.setState({\n      foundTasks: this.searches\n    });\n  }\n\n  goToSearch(title) {\n    const splits = title.split(' ');\n    const frame = app.current.state[splits[0]];\n    frame.current.changeIndex(Number(splits[1]), 'set');\n    setTimeout(() => {\n      console.log(frame.current.frames.map(x => x.current.state.title));\n      let currentTask = frame.current.frames[0];\n\n      for (let place of splits.slice(2)) {\n        // zoom into places until you find the task\n        currentTask = currentTask.current.taskList.current.subtaskObjects[Number(place)];\n      }\n\n      console.log(currentTask.current);\n      preventSelect = false;\n      selectTask(currentTask.current, true);\n    }, 50);\n    this.setState({\n      searchString: '',\n      foundTasks: {}\n    });\n  }\n\n  goToToday() {\n    const today = new Date().toDateString(); // TODO: FINSIH\n  }\n\n  render() {\n    this.search = this.search.bind(this);\n    this.treeSearch = this.treeSearch.bind(this);\n    this.goToSearch = this.goToSearch.bind(this);\n    this.goToToday = this.goToToday.bind(this);\n    this.searchResults = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\",\n        onChange: ev => this.search(ev),\n        value: this.state.searchString,\n        onKeyDown: ev => {\n          if (ev.key === 'Backspace') {\n            this.setState({\n              searchString: '',\n              foundTasks: {}\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: this.searchResults,\n        onChange: () => {\n          this.goToSearch(this.state.foundTasks[this.searchResults.current.value]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), Object.keys(this.state.foundTasks).map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: x,\n          children: x\n        }, x, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: backup,\n          children: \"backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: reset,\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.goToToday,\n          children: \"today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button ' + this.props.parent.state.hideComplete,\n          onClick: () => {\n            this.props.parent.toggleComplete();\n          },\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      repeats: repeats\n    };\n  }\n\n  startTimer(val) {\n    this.setState({\n      minutes: this.state.minutes + val,\n      seconds: 0\n    });\n    this.play();\n  }\n\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({\n            minutes: (this.state.minutes + 1) * multiplier,\n            seconds: 0\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds + 1\n          });\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n\n          this.setState({\n            minutes: (this.state.minutes - 1) * multiplier,\n            seconds: 59\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  end() {\n    alert('timer complete');\n  }\n\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({\n      minutes: 0,\n      seconds: 0\n    });\n  }\n\n  render() {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(50),\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(25),\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(10),\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(5),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            this.setState({\n              minutes: 0,\n              seconds: 1\n            });\n            this.play();\n          },\n          children: \":5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.playPause(),\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"timerBar\",\n        readOnly: true,\n        value: this.state.minutes + ':' + String(this.state.seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n\n  changeIndex(val, set) {\n    let newIndex;\n\n    if (set === 'set') {\n      newIndex = val;\n    } else {\n      newIndex = this.state.info.index + val;\n    }\n\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  componentDidMount() {\n    $(':root').css('--frameWidth', (window.innerWidth - 40) / width + 'px');\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = this.state.lists[this.state.lists.length - 1].title;\n    lastDate = new Date(lastDate.slice(0, 11) + '2' + lastDate.slice(12));\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n        title = title.slice(0, 11) + \"'\" + title.slice(13);\n      }\n\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: title,\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      $(':root').css('--frameWidth', (window.innerWidth - 40) / width + 'px');\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck);\n    const shownLists = this.state.lists.slice(this.state.info.index, endIndex);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), shownLists.map(x => {\n        this.frames.push( /*#__PURE__*/React.createRef());\n\n        if (this.props.id === 'river') {\n          // render state correctly in original lists\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this,\n            deadlines: this.state.deadlines[x.title],\n            startdates: this.state.startdates[x.title],\n            ref: this.frames[this.frames.length - 1]\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [this.props.parent.props.id === 'bank' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        className: \"listInput listTitle\",\n        value: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), this.props.parent.props.id === 'river' && this.props.deadlines && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.deadlines).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"deadline\",\n            children: this.props.deadlines[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), this.props.parent.props.id === 'river' && this.props.startdates && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.startdates).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"startdate\",\n            children: this.props.startdates[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    this.subtaskObjects = [];\n    const tasksListed = this.props.subtasks.map(x => {\n      this.subtaskObjects.push( /*#__PURE__*/React.createRef());\n\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent,\n        ref: this.subtaskObjects[this.subtaskObjects.length - 1]\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: [this.props.addTasks && this.props.addTasks, tasksListed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide',\n      riverTask: false,\n      this: this\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n  }\n\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    let height;\n\n    if (this.state.subtasks.length > 0) {\n      height = '0.5em';\n    } else {\n      height = '0.25em';\n    }\n\n    this.setState({\n      editWidth: this.editBar.current.offsetWidth\n    });\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + ' + height\n    });\n  }\n\n  changeStartDate(ev) {\n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (startdates[now.toDateString()] && startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.startDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          startDate: ev.target.value\n        }\n      }));\n    }\n\n    console.log(ev);\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n    }\n  }\n\n  changeEndDate(ev) {\n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (deadlines[now.toDateString()] && deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.endDate\n        }\n      };\n    } else if (ev === 'destroy') {\n      ev = {\n        target: {\n          value: ' '\n        }\n      };\n    } else {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          endDate: ev.target.value\n        }\n      }));\n    }\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        deadlines: deadlines\n      });\n    }\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleCollapse() {\n    let status = this.state.info.collapsed;\n\n    if (status === 'collapsed') {\n      status = '';\n    } else {\n      status = 'collapsed';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        collapsed: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n    // [[don't use global variable]]\n    let parent = this.props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false;\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && this.state.info.endDate.length > 0 ? 'event' : '';\n\n    const startInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput startDate\",\n      value: this.state.info.startDate,\n      onChange: ev => this.changeStartDate(ev),\n      ref: this.startDateSpan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this);\n\n    const endInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput endDate\",\n      value: this.state.info.endDate,\n      onChange: ev => this.changeEndDate(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this); // task with info and subtasks\n\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass + ' ' + hasTimes + ' ' + this.state.info.collapsed,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.complete,\n              onClick: this.toggleComplete,\n              children: \"\\u221A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.important,\n              onClick: this.toggleImportant,\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.maybe,\n              onClick: this.toggleMaybe,\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: this.deleteThis,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => {\n                newTask('task');\n                this.displayOptions('hide');\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => this.toggleCollapse(),\n              children: '[]'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), startInput, endInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"taskContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"startEndSpans\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"optionsSpan startDate\",\n            children: this.state.info.startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"optionsSpan endDate\",\n            children: this.state.info.endDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"editBar\",\n          value: this.state.title,\n          onChange: ev => this.changeTitle(ev),\n          ref: this.editBar,\n          style: {\n            height: this.state.editHeight\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el, force) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 100);\n  console.log(selected);\n\n  if (selected == el && !force) {\n    console.log('selected and el are the same');\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  }\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date(); // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'u':\n        moveTask(-1);\n        break;\n\n      case 'd':\n        moveTask(1);\n        break;\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction moveTask(direction) {\n  console.log('movetask');\n  if (!selected) return;\n  const subtasks = selected.props.parent.state.subtasks;\n  const selectedPlace = selected.props.parent.state.subtasks.findIndex(x => x.id === selected.props.id);\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + direction, 0, spliceTask);\n  selected.props.parent.setState(subtasks);\n}\n\nfunction reset() {\n  data = resetData;\n  localStorage.setItem('data', JSON.stringify(resetData));\n  setTimeout(function () {\n    window.location.reload();\n  }, 200);\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  app = /*#__PURE__*/React.createRef();\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n    ref: app\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 883,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","useState","ReactDOM","DatePicker","$","render","resetData","bank","info","index","subtasks","id","title","river","String","Date","getTime","slice","toDateString","settings","repeats","data","localStorage","getItem","JSON","parse","err","console","log","deadlines","startdates","selected","preventSelect","copiedTask","width","prevWidth","app","App","Component","constructor","props","state","hideComplete","createRef","toggleComplete","setState","StatusBar","searchString","foundTasks","treeSearch","task","idString","i","subtask","length","searches","search","ev","target","value","x","Object","keys","includes","goToSearch","splits","split","frame","current","changeIndex","Number","setTimeout","frames","map","currentTask","place","taskList","subtaskObjects","selectTask","goToToday","today","bind","searchResults","key","newTask","cutTask","copyTask","pasteTask","backup","reset","parent","Timer","minutes","seconds","startTimer","val","play","stopwatch","backwards","multiplier","clearInterval","interval","setInterval","end","alert","playPause","audioRef","padStart","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","set","newIndex","prevState","componentDidMount","css","now","lastDate","date","setDate","getDate","push","endIndex","addEventListener","shownLists","div","List","changeTitle","selectThis","TaskList","addTask","tasksListed","addTasks","Task","displayOptions","riverTask","this","startDate","endDate","collapsed","showHide","hasClass","height","editWidth","editBar","offsetWidth","editHeight","heightSpan","offsetHeight","changeStartDate","deadline","setMonth","changeEndDate","status","complete","toggleImportant","important","maybe","toggleMaybe","toggleCollapse","deleteThis","findIndex","splice","save","focus","optionsButton","startDateSpan","headingClass","hasTimes","startInput","endInput","alignContent","type","el","force","undefined","saveType","parents","reverse","parentObject","parentId","find","setItem","stringify","concat","insertIndex","keyComms","ctrlKey","shiftKey","moveTask","metaKey","altKey","preventDefault","document","activeElement","blur","direction","selectedPlace","spliceTask","location","reload","init","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAO,4CAAP,C,CACA;;;;AAEA,IAAIC,SAAS,GAAG;AACdC,EAAAA,IAAI,EACF;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAP;AAAmBC,IAAAA,QAAQ,EAAE,CAC3B;AAACC,MAAAA,EAAE,EAAC,GAAJ;AAASC,MAAAA,KAAK,EAAC,OAAf;AAAwBF,MAAAA,QAAQ,EAAE,EAAlC;AAAsCF,MAAAA,IAAI,EAAE;AAA5C,KAD2B;AAA7B,GAFY;AAKdK,EAAAA,KAAK,EACH;AAACL,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAP;AAAmBC,IAAAA,QAAQ,EAAE,CAC3B;AAACC,MAAAA,EAAE,EAACG,MAAM,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD,CAAN,CAA6BC,KAA7B,CAAmC,EAAnC,IAAyC,GAAzC,GACFH,MAAM,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD,CAAN,CAA6BC,KAA7B,CAAmC,EAAnC,CADF;AAC0CL,MAAAA,KAAK,EAAE,IAAIG,IAAJ,GAAWG,YAAX,EADjD;AAC4ER,MAAAA,QAAQ,EAAE,EADtF;AAC0FF,MAAAA,IAAI,EAAE;AADhG,KAD2B;AAA7B,GANY;AAUdW,EAAAA,QAAQ,EAAE;AAACC,IAAAA,OAAO,EAAE;AAAC,aAAO,EAAR;AAAY,aAAO,EAAnB;AAAuB,aAAO,EAA9B;AAAkC,aAAO,EAAzC;AACpB,aAAO,EADa;AACT,aAAO,EADE;AACE,aAAO;AADT;AAAV;AAVI,CAAhB;AAcA,IAAIC,IAAJ;;AACA,IAAI;AACFA,EAAAA,IAAI,GAAG,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,GAAgC;AAAEjB,IAAAA;AAAF,GAAhC,GACLkB,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADF;AAED,CAHD,CAGE,OAAOG,GAAP,EAAY;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,EAAAA,IAAI,GAAGf,SAAP;AACD;;AAED,IAAIuB,SAAS,GAAG,EAAhB;AACA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,IAAI;AACF,MAAIV,OAAO,GAAGC,IAAI,CAACF,QAAL,CAAcC,OAA5B;AACD,CAFD,CAEE,OAAOM,GAAP,EAAY;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,MAAIP,IAAI,GAAGf,SAAX;AACD;;AAED,IAAIyB,QAAJ;AACA,IAAIC,aAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,KAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,GAAJ;;AAEA,MAAMC,GAAN,SAAkBrC,KAAK,CAACsC,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,YAAY,EAAE,EAAf;AACXnC,MAAAA,IAAI,eAAEP,KAAK,CAAC2C,SAAN,EADK;AAEX9B,MAAAA,KAAK,eAAEb,KAAK,CAAC2C,SAAN;AAFI,KAAb;AAID;;AACDC,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKH,KAAL,CAAWC,YAAX,IAA2B,EAA/B,EAAmC;AACjC,WAAKG,QAAL,CAAc;AAACH,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD,KAFD,MAEO;AACL,WAAKG,QAAL,CAAc;AAACH,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD;AACF;;AACDrC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAE,eAAe,KAAKoC,KAAL,CAAWC,YAA1C;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAErB,IAAI,CAAC,OAAD,CAAJ,CAAcb,IAArC;AACE,UAAA,QAAQ,EAAEa,IAAI,CAAC,MAAD,CAAJ,CAAaX,QADzB;AACmC,UAAA,GAAG,EAAE,KAAK+B,KAAL,CAAWlC;AADnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAEc,IAAI,CAAC,OAAD,CAAJ,CAAcb,IAAtC;AACE,UAAA,QAAQ,EAAEa,IAAI,CAAC,OAAD,CAAJ,CAAcX,QAD1B;AACoC,UAAA,GAAG,EAAE,KAAK+B,KAAL,CAAW5B;AADpD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAWD;;AA3B+B;;AA8BlC,MAAMiC,SAAN,SAAwB9C,KAAK,CAACsC,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACM,MAAAA,YAAY,EAAE,EAAf;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAb;AACD;;AACDC,EAAAA,UAAU,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACzB,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,OAAT,IAAoBH,IAAI,CAACxC,QAAzB,EAAmC;AACjC,UAAI2C,OAAO,CAACzC,KAAR,CAAc0C,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAKC,QAAL,CAAcF,OAAO,CAACzC,KAAtB,IAA+BuC,QAAQ,GAAG,GAAX,GAAiBC,CAAhD;AACD;;AACD,WAAKH,UAAL,CAAgBI,OAAhB,EAAyBF,QAAQ,GAAG,GAAX,GAAiBC,CAA1C;AACAA,MAAAA,CAAC;AACF;AACF;;AACDI,EAAAA,MAAM,CAACC,EAAD,EAAK;AACT,QAAI,KAAKhB,KAAL,CAAWM,YAAX,KAA4B,EAAhC,EAAoC;AAClC,WAAKQ,QAAL,GAAgB,EAAhB;AACA,WAAKN,UAAL,CAAgB5B,IAAI,CAACR,KAArB,EAA4B,OAA5B;AACA,WAAKoC,UAAL,CAAgB5B,IAAI,CAACd,IAArB,EAA2B,MAA3B;AACD;;AACD,SAAKsC,QAAL,CAAc;AAACE,MAAAA,YAAY,EAAEU,EAAE,CAACC,MAAH,CAAUC;AAAzB,KAAd;;AACA,SAAK,IAAIC,CAAT,IAAcC,MAAM,CAACC,IAAP,CAAY,KAAKP,QAAjB,CAAd,EAA0C;AACxC,UAAI,CAACK,CAAC,CAACG,QAAF,CAAW,KAAKtB,KAAL,CAAWM,YAAtB,CAAL,EAA0C;AACxC,eAAO,KAAKQ,QAAL,CAAcK,CAAd,CAAP;AACD;AACF;;AACDjC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK2B,QAAjB;AACA,SAAKV,QAAL,CAAc;AAACG,MAAAA,UAAU,EAAE,KAAKO;AAAlB,KAAd;AACD;;AACDS,EAAAA,UAAU,CAACpD,KAAD,EAAQ;AAChB,UAAMqD,MAAM,GAAGrD,KAAK,CAACsD,KAAN,CAAY,GAAZ,CAAf;AACA,UAAMC,KAAK,GAAG/B,GAAG,CAACgC,OAAJ,CAAY3B,KAAZ,CAAkBwB,MAAM,CAAC,CAAD,CAAxB,CAAd;AACAE,IAAAA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BC,MAAM,CAACL,MAAM,CAAC,CAAD,CAAP,CAAhC,EAA6C,KAA7C;AACAM,IAAAA,UAAU,CAAC,MAAM;AACf5C,MAAAA,OAAO,CAACC,GAAR,CAAYuC,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBC,GAArB,CAAyBb,CAAC,IAAIA,CAAC,CAACQ,OAAF,CAAU3B,KAAV,CAAgB7B,KAA9C,CAAZ;AACA,UAAI8D,WAAW,GAAGP,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqB,CAArB,CAAlB;;AACA,WAAK,IAAIG,KAAT,IAAkBV,MAAM,CAAChD,KAAP,CAAa,CAAb,CAAlB,EAAmC;AACjC;AACAyD,QAAAA,WAAW,GAAGA,WAAW,CAACN,OAAZ,CAAoBQ,QAApB,CAA6BR,OAA7B,CACZS,cADY,CACGP,MAAM,CAACK,KAAD,CADT,CAAd;AAED;;AACDhD,MAAAA,OAAO,CAACC,GAAR,CAAY8C,WAAW,CAACN,OAAxB;AACApC,MAAAA,aAAa,GAAG,KAAhB;AACA8C,MAAAA,UAAU,CAACJ,WAAW,CAACN,OAAb,EAAsB,IAAtB,CAAV;AACD,KAXS,EAWP,EAXO,CAAV;AAYA,SAAKvB,QAAL,CAAc;AAACE,MAAAA,YAAY,EAAE,EAAf;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAd;AACD;;AACD+B,EAAAA,SAAS,GAAG;AACV,UAAMC,KAAK,GAAG,IAAIjE,IAAJ,GAAWG,YAAX,EAAd,CADU,CAEV;AACD;;AACDb,EAAAA,MAAM,GAAG;AACP,SAAKmD,MAAL,GAAc,KAAKA,MAAL,CAAYyB,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKhC,UAAL,GAAkB,KAAKA,UAAL,CAAgBgC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKjB,UAAL,GAAkB,KAAKA,UAAL,CAAgBiB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKF,SAAL,GAAiB,KAAKA,SAAL,CAAeE,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,aAAL,gBAAqBlF,KAAK,CAAC2C,SAAN,EAArB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,QAAQ,EAAGc,EAAD,IAAQ,KAAKD,MAAL,CAAYC,EAAZ,CAA/C;AACE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWM,YADpB;AAEE,QAAA,SAAS,EAAGU,EAAD,IAAQ;AACjB,cAAIA,EAAE,CAAC0B,GAAH,KAAW,WAAf,EAA4B;AAC1B,iBAAKtC,QAAL,CAAc;AAACE,cAAAA,YAAY,EAAE,EAAf;AAAmBC,cAAAA,UAAU,EAAE;AAA/B,aAAd;AACD;AACF;AANH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,GAAG,EAAE,KAAKkC,aAAlB;AAAiC,QAAA,QAAQ,EAAE,MAAM;AAC/C,eAAKlB,UAAL,CAAgB,KAAKvB,KAAL,CAAWO,UAAX,CACd,KAAKkC,aAAL,CAAmBd,OAAnB,CAA2BT,KADb,CAAhB;AAEC,SAHH;AAAA,gCAIE;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKGE,MAAM,CAACC,IAAP,CAAY,KAAKrB,KAAL,CAAWO,UAAvB,EAAmCyB,GAAnC,CAAuCb,CAAC,iBACvC;AAAgB,UAAA,KAAK,EAAEA,CAAvB;AAAA,oBAA2BA;AAA3B,WAAaA,CAAb;AAAA;AAAA;AAAA;AAAA,gBADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEwB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKV,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AACE,UAAA,SAAS,EAAE,YAAY,KAAKvC,KAAL,CAAWkD,MAAX,CAAkBjD,KAAlB,CAAwBC,YADjD;AAC+D,UAAA,OAAO,EAAE,MAAM;AAC1E,iBAAKF,KAAL,CAAWkD,MAAX,CAAkB9C,cAAlB;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAYE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AA3FqC;;AA8FxC,MAAM+C,KAAN,SAAoB3F,KAAK,CAACsC,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACmD,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE,CAAtB;AAAyBzE,MAAAA,OAAO,EAAEA;AAAlC,KAAb;AACD;;AACD0E,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,SAAKlD,QAAL,CAAc;AAAC+C,MAAAA,OAAO,EAAE,KAAKnD,KAAL,CAAWmD,OAAX,GAAqBG,GAA/B;AAAoCF,MAAAA,OAAO,EAAE;AAA7C,KAAd;AACA,SAAKG,IAAL;AACD;;AACDA,EAAAA,IAAI,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACzB,UAAMC,UAAU,GAAGD,SAAS,GAAG,CAAC,CAAJ,GAAQ,CAApC;AACAE,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;;AACA,QAAIJ,SAAS,KAAK,WAAlB,EAA+B;AAC7B,WAAKI,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,YAAI,KAAK7D,KAAL,CAAWoD,OAAX,KAAuB,EAA3B,EAA+B;AAC7B,eAAKhD,QAAL,CAAc;AAAC+C,YAAAA,OAAO,EAAE,CAAC,KAAKnD,KAAL,CAAWmD,OAAX,GAAqB,CAAtB,IAA2BO,UAArC;AACZN,YAAAA,OAAO,EAAE;AADG,WAAd;AAED,SAHD,MAGO;AACL,eAAKhD,QAAL,CAAc;AAACgD,YAAAA,OAAO,EAAE,KAAKpD,KAAL,CAAWoD,OAAX,GAAqB;AAA/B,WAAd;AACD;AACF,OAP0B,EAOxB,IAPwB,CAA3B;AAQD,KATD,MASO;AACL,WAAKQ,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,YAAI,KAAK7D,KAAL,CAAWoD,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,cAAI,KAAKpD,KAAL,CAAWmD,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,iBAAKW,GAAL;AACA,iBAAKP,IAAL,CAAU,WAAV,EAAuB,IAAvB;AACD;;AACD,eAAKnD,QAAL,CAAc;AAAC+C,YAAAA,OAAO,EAAE,CAAC,KAAKnD,KAAL,CAAWmD,OAAX,GAAqB,CAAtB,IAA2BO,UAArC;AACZN,YAAAA,OAAO,EAAE;AADG,WAAd;AAED,SAPD,MAOO;AACL,eAAKhD,QAAL,CAAc;AAACgD,YAAAA,OAAO,EAAE,KAAKpD,KAAL,CAAWoD,OAAX,GAAqB;AAA/B,WAAd;AACD;AACF,OAX0B,EAWxB,IAXwB,CAA3B;AAYD;AACF;;AACDU,EAAAA,GAAG,GAAG;AACJC,IAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;;AACDC,EAAAA,SAAS,GAAG;AACVL,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA,SAAKxD,QAAL,CAAc;AAAC+C,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAAd;AACD;;AACDxF,EAAAA,MAAM,GAAI;AACR,SAAKyF,UAAL,GAAkB,KAAKA,UAAL,CAAgBb,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKwB,SAAL,GAAiB,KAAKA,SAAL,CAAexB,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKe,IAAL,GAAY,KAAKA,IAAL,CAAUf,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKyB,QAAL,gBAAgB1G,KAAK,CAAC2C,SAAN,EAAhB;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKmD,UAAL,CAAgB,EAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,EAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,EAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,CAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM;AACxC,iBAAKjD,QAAL,CAAc;AAAC+C,cAAAA,OAAO,EAAE,CAAV;AAAaC,cAAAA,OAAO,EAAE;AAAtB,aAAd;AACA,iBAAKG,IAAL;AACD,WAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKS,SAAL,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AACE,QAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWmD,OAAX,GAAqB,GAArB,GACP9E,MAAM,CAAC,KAAK2B,KAAL,CAAWoD,OAAZ,CAAN,CAA2Bc,QAA3B,CAAoC,CAApC,EAAuC,GAAvC;AAFF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAlEiC;;AAqEpC,MAAMC,KAAN,SAAoB5G,KAAK,CAACsC,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACoE,MAAAA,KAAK,EAAErE,KAAK,CAAC9B,QAAd;AAAwBF,MAAAA,IAAI,EAAEgC,KAAK,CAAChC,IAApC;AACX0B,MAAAA,KAAK,EAAE4E,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B;AADI,KAAb;AAEA7G,IAAAA,CAAC,CAAC4G,MAAD,CAAD,CAAUE,EAAV,CAAa,QAAb,EAAuB,KAAKC,WAA5B;;AACA,QAAI3E,KAAK,CAAC7B,EAAN,KAAa,OAAjB,EAA0B;AACxB,WAAK8B,KAAL,CAAWZ,SAAX,GAAuBA,SAAvB;AACA,WAAKY,KAAL,CAAWX,UAAX,GAAwBA,UAAxB;AACA,WAAKW,KAAL,CAAWrB,OAAX,GAAqBA,OAArB;AACD;AACF;;AACDiD,EAAAA,WAAW,CAAC0B,GAAD,EAAMqB,GAAN,EAAW;AACpB,QAAIC,QAAJ;;AACA,QAAID,GAAG,KAAK,KAAZ,EAAmB;AACjBC,MAAAA,QAAQ,GAAGtB,GAAX;AACD,KAFD,MAEO;AACLsB,MAAAA,QAAQ,GAAG,KAAK5E,KAAL,CAAWjC,IAAX,CAAgBC,KAAhB,GAAwBsF,GAAnC;AACD;;AACD,QAAIsB,QAAQ,GAAG,CAAf,EAAkBA,QAAQ,GAAG,CAAX;AAClB,SAAKxE,QAAL,CAAcyE,SAAS,KAAK;AAC1B9G,MAAAA,IAAI,EAAE,EAAC,GAAG8G,SAAS,CAAC9G,IAAd;AAAoBC,QAAAA,KAAK,EAAE4G;AAA3B;AADoB,KAAL,CAAvB;AAGD;;AACDE,EAAAA,iBAAiB,GAAG;AAClBnH,IAAAA,CAAC,CAAC,OAAD,CAAD,CAAWoH,GAAX,CAAe,cAAf,EACG,CAACR,MAAM,CAACC,UAAP,GAAoB,EAArB,IAA2B/E,KAA5B,GAAqC,IADvC;AAED;;AACD7B,EAAAA,MAAM,GAAG;AACP,UAAMoH,GAAG,GAAG,IAAI1G,IAAJ,EAAZ;AACA,QAAIqC,CAAC,GAAG,CAAR;AACA,QAAIsE,QAAQ,GAAG,KAAKjF,KAAL,CAAWoE,KAAX,CAAiB,KAAKpE,KAAL,CAAWoE,KAAX,CAAiBvD,MAAjB,GAA0B,CAA3C,EAA8C1C,KAA7D;AACA8G,IAAAA,QAAQ,GAAG,IAAI3G,IAAJ,CACT2G,QAAQ,CAACzG,KAAT,CAAe,CAAf,EAAkB,EAAlB,IAAwB,GAAxB,GAA8ByG,QAAQ,CAACzG,KAAT,CAAe,EAAf,CADrB,CAAX;;AAGA,WAAO,KAAKwB,KAAL,CAAWoE,KAAX,CAAiBvD,MAAjB,GAA0B,KAAKb,KAAL,CAAWjC,IAAX,CAAgBC,KAAhB,GAAwB,CAAzD,EAA4D;AAC1D2C,MAAAA,CAAC;;AACD,UAAI,KAAKZ,KAAL,CAAW7B,EAAX,KAAkB,MAAtB,EAA8B;AAC5B,YAAIC,KAAK,GAAG,EAAZ;AACD,OAFD,MAEO,IAAI,KAAK4B,KAAL,CAAW7B,EAAX,KAAkB,OAAtB,EAA+B;AACpC,cAAMgH,IAAI,GAAG,IAAI5G,IAAJ,CAAS2G,QAAQ,CAAC1G,OAAT,EAAT,CAAb;AACA2G,QAAAA,IAAI,CAACC,OAAL,CAAaF,QAAQ,CAACG,OAAT,KAAqBzE,CAAlC;AACA,YAAIxC,KAAK,GAAG+G,IAAI,CAACzG,YAAL,EAAZ;AACAN,QAAAA,KAAK,GAAGA,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,EAAf,IAAqB,GAArB,GAA2BL,KAAK,CAACK,KAAN,CAAY,EAAZ,CAAnC;AACD;;AACD,WAAKwB,KAAL,CAAWoE,KAAX,CAAiBiB,IAAjB,CAAsB;AAACnH,QAAAA,EAAE,EAAEG,MAAM,CAAC2G,GAAG,CAACzG,OAAJ,KAAgBoC,CAAjB,CAAX;AACpBxC,QAAAA,KAAK,EAAEA,KADa;AACNF,QAAAA,QAAQ,EAAE,EADJ;AACQF,QAAAA,IAAI,EAAE;AADd,OAAtB;AAED;;AACD,aAAS2G,WAAT,GAAuB;AACrB;AACA,YAAMjF,KAAK,GAAG4E,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B,CAAd;AACA7G,MAAAA,CAAC,CAAC,OAAD,CAAD,CAAWoH,GAAX,CAAe,cAAf,EACG,CAACR,MAAM,CAACC,UAAP,GAAoB,EAArB,IAA2B/E,KAA5B,GAAqC,IADvC;;AAEA,UAAIA,KAAK,IAAI,KAAKO,KAAL,CAAWP,KAAxB,EAA+B;AAC7B,aAAKW,QAAL,CAAc;AAACX,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACD;AACF;;AACD,QAAI6F,QAAQ,GAAG,KAAKtF,KAAL,CAAWjC,IAAX,CAAgBC,KAAhB,GAAwB,KAAKgC,KAAL,CAAWP,KAAlD;AACA,SAAKmC,WAAL,GAAmB,KAAKA,WAAL,CAAiBY,IAAjB,CAAsB,IAAtB,CAAnB;AACAkC,IAAAA,WAAW,GAAGA,WAAW,CAAClC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKT,MAAL,GAAc,EAAd;AACAwC,IAAAA,MAAM,CAACgB,gBAAP,CAAwB,QAAxB,EAAkCb,WAAlC;AACA,UAAMc,UAAU,GACd,KAAKxF,KAAL,CAAWoE,KAAX,CAAiB5F,KAAjB,CAAuB,KAAKwB,KAAL,CAAWjC,IAAX,CAAgBC,KAAvC,EAA8CsH,QAA9C,CADF;;AAEA,UAAMG,GAAG,gBACP;AAAK,MAAA,EAAE,EAAE,KAAK1F,KAAL,CAAW7B,EAApB;AAAwB,MAAA,SAAS,EAAC,OAAlC;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACE,QAAA,OAAO,EAAE,MAAM,KAAK0D,WAAL,CAAiB,KAAK5B,KAAL,CAAWP,KAAX,GAAmB,CAAC,CAArC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGG+F,UAAU,CAACxD,GAAX,CAAeb,CAAC,IAAI;AACnB,aAAKY,MAAL,CAAYsD,IAAZ,eAAiB9H,KAAK,CAAC2C,SAAN,EAAjB;;AACA,YAAI,KAAKH,KAAL,CAAW7B,EAAX,KAAkB,OAAtB,EAA+B;AAC7B;AACA,8BACE,QAAC,IAAD;AAAiB,YAAA,EAAE,EAAEiD,CAAC,CAACjD,EAAvB;AAA2B,YAAA,KAAK,EAAEiD,CAAC,CAAChD,KAApC;AACE,YAAA,QAAQ,EAAEgD,CAAC,CAAClD,QADd;AACwB,YAAA,MAAM,EAAE,IADhC;AAEE,YAAA,SAAS,EAAE,KAAK+B,KAAL,CAAWZ,SAAX,CAAqB+B,CAAC,CAAChD,KAAvB,CAFb;AAGE,YAAA,UAAU,EAAE,KAAK6B,KAAL,CAAWX,UAAX,CAAsB8B,CAAC,CAAChD,KAAxB,CAHd;AAIE,YAAA,GAAG,EAAE,KAAK4D,MAAL,CAAY,KAAKA,MAAL,CAAYlB,MAAZ,GAAqB,CAAjC;AAJP,aAAWM,CAAC,CAACjD,EAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SATD,MASO;AACL,8BACE,QAAC,IAAD;AAAiB,YAAA,EAAE,EAAEiD,CAAC,CAACjD,EAAvB;AAA2B,YAAA,KAAK,EAAEiD,CAAC,CAAChD,KAApC;AACE,YAAA,QAAQ,EAAEgD,CAAC,CAAClD,QADd;AACwB,YAAA,MAAM,EAAE;AADhC,aAAWkD,CAAC,CAACjD,EAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAID;AACF,OAjBA,CAHH,eAqBE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACE,QAAA,OAAO,EAAE,MAAM,KAAK0D,WAAL,CAAiB,KAAK5B,KAAL,CAAWP,KAA5B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AA0BA,WAAOgG,GAAP;AACD;;AA3FiC;;AA8FpC,MAAMC,IAAN,SAAmBnI,KAAK,CAACsC,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKoC,QAAL,gBAAgB5E,KAAK,CAAC2C,SAAN,EAAhB;AACA,SAAKF,KAAL,GAAa;AAAC/B,MAAAA,QAAQ,EAAE8B,KAAK,CAAC9B,QAAjB;AAA2BE,MAAAA,KAAK,EAAE4B,KAAK,CAAC5B,KAAxC;AACXJ,MAAAA,IAAI,EAAE;AADK,KAAb;AAED;;AACD4H,EAAAA,WAAW,CAAC3E,EAAD,EAAK;AACd,SAAKZ,QAAL,CAAc;AAACjC,MAAAA,KAAK,EAAE6C,EAAE,CAACC,MAAH,CAAUC;AAAlB,KAAd;AACD;;AACDtD,EAAAA,MAAM,GAAG;AACP,aAASgI,UAAT,GAAsB;AACpBvD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDuD,IAAAA,UAAU,GAAGA,UAAU,CAACpD,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKmD,WAAL,GAAmB,KAAKA,WAAL,CAAiBnD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAEoD,UAA/B;AAAA,iBACG,KAAK7F,KAAL,CAAWkD,MAAX,CAAkBlD,KAAlB,CAAwB7B,EAAxB,KAA+B,MAA/B,gBACC;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAE,KAAK8B,KAAL,CAAW7B,KAA/C;AACA,QAAA,QAAQ,EAAE,KAAKwH;AADf;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,SAAS,EAAC,qBAA1B;AACE,QAAA,KAAK,EAAE,KAAK3F,KAAL,CAAW7B;AADpB;AAAA;AAAA;AAAA;AAAA,cAJJ,EAOG,KAAK4B,KAAL,CAAWkD,MAAX,CAAkBlD,KAAlB,CAAwB7B,EAAxB,KAA+B,OAA/B,IACD,KAAK6B,KAAL,CAAWX,SADV,iBAED;AAAA,kBACGgC,MAAM,CAACC,IAAP,CAAY,KAAKtB,KAAL,CAAWX,SAAvB,EAAkC4C,GAAlC,CAAsCb,CAAC,IAAI;AAC1C,8BAAO;AACL,YAAA,SAAS,EAAC,UADL;AAAA,sBAEJ,KAAKpB,KAAL,CAAWX,SAAX,CAAqB+B,CAArB;AAFI,aACqB9C,MAAM,CAAC8C,CAAD,CAD3B;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cATF,EAgBG,KAAKpB,KAAL,CAAWkD,MAAX,CAAkBlD,KAAlB,CAAwB7B,EAAxB,KAA+B,OAA/B,IACD,KAAK6B,KAAL,CAAWV,UADV,iBAED;AAAA,kBACG+B,MAAM,CAACC,IAAP,CAAY,KAAKtB,KAAL,CAAWV,UAAvB,EAAmC2C,GAAnC,CAAuCb,CAAC,IAAI;AAC3C,8BAAO;AACL,YAAA,SAAS,EAAC,WADL;AAAA,sBAEJ,KAAKpB,KAAL,CAAWV,UAAX,CAAsB8B,CAAtB;AAFI,aACsB9C,MAAM,CAAC8C,CAAD,CAD5B;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cAlBF,eAyBG,QAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAKgB,QAApB;AAA8B,QAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAW/B,QAAnD;AACC,QAAA,MAAM,EAAE;AADT;AAAA;AAAA;AAAA;AAAA,cAzBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AA9CgC;;AAiDnC,MAAM4H,QAAN,SAAuBtI,KAAK,CAACsC,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAC8F,MAAAA,OAAO,EAAE,KAAKA;AAAf,KAAb;AACD;;AACDlI,EAAAA,MAAM,GAAG;AACP,SAAKwE,cAAL,GAAsB,EAAtB;AACA,UAAM2D,WAAW,GAAG,KAAKhG,KAAL,CAAW9B,QAAX,CAAoB+D,GAApB,CAAwBb,CAAC,IAAI;AAC/C,WAAKiB,cAAL,CAAoBiD,IAApB,eAAyB9H,KAAK,CAAC2C,SAAN,EAAzB;;AACA,YAAMO,IAAI,gBACR,QAAC,IAAD;AAEE,QAAA,EAAE,EAAEU,CAAC,CAACjD,EAFR;AAGE,QAAA,IAAI,EAAEiD,CAAC,CAACpD,IAHV;AAIE,QAAA,KAAK,EAAEoD,CAAC,CAAChD,KAJX;AAKE,QAAA,QAAQ,EAAEgD,CAAC,CAAClD,QALd;AAME,QAAA,MAAM,EAAE,KAAK8B,KAAL,CAAWkD,MANrB;AAOE,QAAA,GAAG,EAAE,KAAKb,cAAL,CAAoB,KAAKA,cAAL,CAAoBvB,MAApB,GAA6B,CAAjD;AAPP,SACOM,CAAC,CAACjD,EADT;AAAA;AAAA;AAAA;AAAA,cADF;;AAWA,aAAOuC,IAAP;AAAY,KAbM,CAApB;AAcA,wBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,iBACG,KAAKV,KAAL,CAAWiG,QAAX,IAAuB,KAAKjG,KAAL,CAAWiG,QADrC,EAEGD,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA3BoC;;AA8BvC,MAAME,IAAN,SAAmB1I,KAAK,CAACsC,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,KAAL,GAAa;AACXjC,MAAAA,IAAI,EAAEgC,KAAK,CAAChC,IADD;AACOI,MAAAA,KAAK,EAAE4B,KAAK,CAAC5B,KADpB;AAEXF,MAAAA,QAAQ,EAAE8B,KAAK,CAAC9B,QAFL;AAEegF,MAAAA,MAAM,EAAElD,KAAK,CAACkD,MAF7B;AAGX/E,MAAAA,EAAE,EAAE6B,KAAK,CAAC7B,EAHC;AAGGgI,MAAAA,cAAc,EAAE,MAHnB;AAG2BC,MAAAA,SAAS,EAAE,KAHtC;AAIXC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMA,QAAI,CAAC,KAAKpG,KAAL,CAAWjC,IAAX,CAAgBsI,SAArB,EAAgC,KAAKrG,KAAL,CAAWjC,IAAX,CAAgBsI,SAAhB,GAA4B,EAA5B;AAChC,QAAI,CAAC,KAAKrG,KAAL,CAAWjC,IAAX,CAAgBuI,OAArB,EAA8B,KAAKtG,KAAL,CAAWjC,IAAX,CAAgBuI,OAAhB,GAA0B,EAA1B;AAC9B,QAAI,CAAC,KAAKtG,KAAL,CAAWjC,IAAX,CAAgBwI,SAArB,EAAgC,KAAKvG,KAAL,CAAWjC,IAAX,CAAgBwI,SAAhB,GAA4B,EAA5B;AAChC,QAAItD,MAAM,GAAGlD,KAAK,CAACkD,MAAnB;;AACA,WAAOA,MAAM,CAAClD,KAAP,CAAakD,MAApB,EAA4B;AAC1BA,MAAAA,MAAM,GAAGA,MAAM,CAAClD,KAAP,CAAakD,MAAtB;AACD;AACF;;AACDiD,EAAAA,cAAc,CAAClF,EAAD,EAAKwF,QAAL,EAAe;AAC3B,QAAI7I,CAAC,CAACqD,EAAE,CAACC,MAAJ,CAAD,CAAawF,QAAb,CAAsB,SAAtB,KACF9I,CAAC,CAACqD,EAAE,CAACC,MAAJ,CAAD,CAAagC,MAAb,GAAsBwD,QAAtB,CAA+B,SAA/B,CADF,EAC6C;AAC3C;AACD;;AACD,QAAID,QAAQ,KAAK,MAAb,IAAuB,KAAKxG,KAAL,CAAWkG,cAAX,KAA8B,MAAzD,EAAiE;AAC/D,WAAK9F,QAAL,CAAc;AAAC8F,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,KAFD,MAEO,IAAIM,QAAQ,IAAI,MAAZ,IAAsB,KAAKxG,KAAL,CAAWkG,cAAX,KAA8B,MAAxD,EAAgE;AACrE,WAAK9F,QAAL,CAAc;AAAC8F,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD;AACF;;AACDP,EAAAA,WAAW,CAAC3E,EAAD,EAAK;AACd,QAAI0F,MAAJ;;AACA,QAAI,KAAK1G,KAAL,CAAW/B,QAAX,CAAoB4C,MAApB,GAA6B,CAAjC,EAAoC;AAClC6F,MAAAA,MAAM,GAAG,OAAT;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,GAAG,QAAT;AACD;;AACD,SAAKtG,QAAL,CAAc;AAACuG,MAAAA,SAAS,EAAE,KAAKC,OAAL,CAAajF,OAAb,CAAqBkF;AAAjC,KAAd;AACA,SAAKzG,QAAL,CAAc;AAACjC,MAAAA,KAAK,EAAE6C,EAAE,CAACC,MAAH,CAAUC,KAAlB;AAAyB4F,MAAAA,UAAU,EACjD,UAAUzI,MAAM,CAAC,KAAK0I,UAAL,CAAgBpF,OAAhB,CAAwBqF,YAAzB,CAAhB,GACA,OADA,GACUN;AAFI,KAAd;AAGD;;AACDO,EAAAA,eAAe,CAACjG,EAAD,EAAK;AAClB,QAAI,KAAKhB,KAAL,CAAWjC,IAAX,CAAgBsI,SAAhB,CAA0B/E,QAA1B,CAAmC,GAAnC,CAAJ,EAA6C;AAC3C;AACA,YAAM4F,QAAQ,GAAG,KAAKlH,KAAL,CAAWjC,IAAX,CAAgBsI,SAAhB,CAA0B5E,KAA1B,CAAgC,GAAhC,CAAjB;AACA,YAAMuD,GAAG,GAAG,IAAI1G,IAAJ,EAAZ;AACA0G,MAAAA,GAAG,CAACmC,QAAJ,CAAatF,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsB,CAAnC;AACAlC,MAAAA,GAAG,CAACG,OAAJ,CAAYtD,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAlB;;AACA,UAAI7H,UAAU,CAAC2F,GAAG,CAACvG,YAAJ,EAAD,CAAV,IACFY,UAAU,CAAC2F,GAAG,CAACvG,YAAJ,EAAD,CAAV,CAA+B,KAAKsB,KAAL,CAAW7B,EAA1C,CADF,EACiD;AAC/C,eAAOmB,UAAU,CAAC2F,GAAG,CAACvG,YAAJ,EAAD,CAAV,CAA+B,KAAKsB,KAAL,CAAW7B,EAA1C,CAAP;AACD;AACF;;AACD,QAAI8C,EAAE,KAAK,MAAX,EAAmB;AACjBA,MAAAA,EAAE,GAAG;AAACC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWjC,IAAX,CAAgBsI;AAAxB;AAAT,OAAL;AACD,KAFD,MAEO,IAAIrF,EAAE,KAAK,SAAX,EAAsB;AAC3B,UAAIiC,MAAM,GAAG,KAAKlD,KAAL,CAAWkD,MAAxB;;AACA,aAAOA,MAAM,CAAClD,KAAP,CAAakD,MAApB,EAA4B;AAC1BA,QAAAA,MAAM,GAAGA,MAAM,CAAClD,KAAP,CAAakD,MAAtB;AACD;;AACDA,MAAAA,MAAM,CAAC7C,QAAP,CAAgB;AAACf,QAAAA,UAAU,EAAEA;AAAb,OAAhB;AACA;AACD,KAPM,MAOA;AACL,WAAKe,QAAL,CAAcyE,SAAS,KAAK;AAC1B9G,QAAAA,IAAI,EAAE,EAAC,GAAG8G,SAAS,CAAC9G,IAAd;AAAoBsI,UAAAA,SAAS,EAAErF,EAAE,CAACC,MAAH,CAAUC;AAAzC;AADoB,OAAL,CAAvB;AAED;;AACDhC,IAAAA,OAAO,CAACC,GAAR,CAAY6B,EAAZ;;AACA,QAAIA,EAAE,CAACC,MAAH,CAAUC,KAAV,CAAgBI,QAAhB,CAAyB,GAAzB,CAAJ,EAAmC;AACjC;AACA,YAAM4F,QAAQ,GAAGlG,EAAE,CAACC,MAAH,CAAUC,KAAV,CAAgBO,KAAhB,CAAsB,GAAtB,CAAjB;AACA,YAAMuD,GAAG,GAAG,IAAI1G,IAAJ,EAAZ;AACA0G,MAAAA,GAAG,CAACmC,QAAJ,CAAatF,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsB,CAAnC;AACAlC,MAAAA,GAAG,CAACG,OAAJ,CAAYtD,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAlB;;AACA,UAAI,CAAC7H,UAAU,CAAC2F,GAAG,CAACvG,YAAJ,EAAD,CAAf,EAAqC;AACnCY,QAAAA,UAAU,CAAC2F,GAAG,CAACvG,YAAJ,EAAD,CAAV,GAAiC,EAAjC;AACD;;AACDY,MAAAA,UAAU,CAAC2F,GAAG,CAACvG,YAAJ,EAAD,CAAV,CAA+B,KAAKsB,KAAL,CAAW7B,EAA1C,IAAgD,KAAK8B,KAAL,CAAW7B,KAA3D;AACA,UAAI8E,MAAM,GAAG,KAAKlD,KAAL,CAAWkD,MAAxB;;AACA,aAAOA,MAAM,CAAClD,KAAP,CAAakD,MAApB,EAA4B;AAC1BA,QAAAA,MAAM,GAAGA,MAAM,CAAClD,KAAP,CAAakD,MAAtB;AACD;;AACDA,MAAAA,MAAM,CAAC7C,QAAP,CAAgB;AAACf,QAAAA,UAAU,EAAEA;AAAb,OAAhB;AACD;AACF;;AACD+H,EAAAA,aAAa,CAACpG,EAAD,EAAK;AAChB,QAAI,KAAKhB,KAAL,CAAWjC,IAAX,CAAgBuI,OAAhB,CAAwBhF,QAAxB,CAAiC,GAAjC,CAAJ,EAA2C;AACzC;AACA,YAAM4F,QAAQ,GAAG,KAAKlH,KAAL,CAAWjC,IAAX,CAAgBuI,OAAhB,CAAwB7E,KAAxB,CAA8B,GAA9B,CAAjB;AACA,YAAMuD,GAAG,GAAG,IAAI1G,IAAJ,EAAZ;AACA0G,MAAAA,GAAG,CAACmC,QAAJ,CAAatF,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsB,CAAnC;AACAlC,MAAAA,GAAG,CAACG,OAAJ,CAAYtD,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAlB;;AACA,UAAI9H,SAAS,CAAC4F,GAAG,CAACvG,YAAJ,EAAD,CAAT,IACFW,SAAS,CAAC4F,GAAG,CAACvG,YAAJ,EAAD,CAAT,CAA8B,KAAKsB,KAAL,CAAW7B,EAAzC,CADF,EACgD;AAC9C,eAAOkB,SAAS,CAAC4F,GAAG,CAACvG,YAAJ,EAAD,CAAT,CAA8B,KAAKsB,KAAL,CAAW7B,EAAzC,CAAP;AACD;AACF;;AACD,QAAI8C,EAAE,KAAK,MAAX,EAAmB;AACjBA,MAAAA,EAAE,GAAG;AAACC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWjC,IAAX,CAAgBuI;AAAxB;AAAT,OAAL;AACD,KAFD,MAEO,IAAItF,EAAE,KAAK,SAAX,EAAsB;AAC3BA,MAAAA,EAAE,GAAG;AAACC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AAAT,OAAL;AACD,KAFM,MAEA;AACL,WAAKd,QAAL,CAAcyE,SAAS,KAAK;AAC1B9G,QAAAA,IAAI,EAAE,EAAC,GAAG8G,SAAS,CAAC9G,IAAd;AAAoBuI,UAAAA,OAAO,EAAEtF,EAAE,CAACC,MAAH,CAAUC;AAAvC;AADoB,OAAL,CAAvB;AAED;;AACD,QAAIF,EAAE,CAACC,MAAH,CAAUC,KAAV,CAAgBI,QAAhB,CAAyB,GAAzB,CAAJ,EAAmC;AACjC;AACA,YAAM4F,QAAQ,GAAGlG,EAAE,CAACC,MAAH,CAAUC,KAAV,CAAgBO,KAAhB,CAAsB,GAAtB,CAAjB;AACA,YAAMuD,GAAG,GAAG,IAAI1G,IAAJ,EAAZ;AACA0G,MAAAA,GAAG,CAACmC,QAAJ,CAAatF,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsB,CAAnC;AACAlC,MAAAA,GAAG,CAACG,OAAJ,CAAYtD,MAAM,CAACqF,QAAQ,CAAC,CAAD,CAAT,CAAlB;;AACA,UAAI,CAAC9H,SAAS,CAAC4F,GAAG,CAACvG,YAAJ,EAAD,CAAd,EAAoC;AAClCW,QAAAA,SAAS,CAAC4F,GAAG,CAACvG,YAAJ,EAAD,CAAT,GAAgC,EAAhC;AACD;;AACDW,MAAAA,SAAS,CAAC4F,GAAG,CAACvG,YAAJ,EAAD,CAAT,CAA8B,KAAKsB,KAAL,CAAW7B,EAAzC,IAA+C,KAAK8B,KAAL,CAAW7B,KAA1D;AACA,UAAI8E,MAAM,GAAG,KAAKlD,KAAL,CAAWkD,MAAxB;;AACA,aAAOA,MAAM,CAAClD,KAAP,CAAakD,MAApB,EAA4B;AAC1BA,QAAAA,MAAM,GAAGA,MAAM,CAAClD,KAAP,CAAakD,MAAtB;AACD;;AACDA,MAAAA,MAAM,CAAC7C,QAAP,CAAgB;AAAChB,QAAAA,SAAS,EAAEA;AAAZ,OAAhB;AACD;AACF;;AACDe,EAAAA,cAAc,GAAG;AACf,QAAIkH,MAAM,GAAG,KAAKrH,KAAL,CAAWjC,IAAX,CAAgBuJ,QAA7B;;AACA,QAAID,MAAM,KAAK,UAAf,EAA2B;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAA1C,MACK;AAAEA,MAAAA,MAAM,GAAG,UAAT;AAAqB;;AAC5B,SAAKjH,QAAL,CAAcyE,SAAS,KAAK;AAC1B9G,MAAAA,IAAI,EAAE,EAAC,GAAG8G,SAAS,CAAC9G,IAAd;AAAoBuJ,QAAAA,QAAQ,EAAED;AAA9B;AADoB,KAAL,CAAvB;AAEA,SAAKnB,cAAL,CAAoB,MAApB;AACD;;AACDqB,EAAAA,eAAe,GAAG;AAChB,QAAIF,MAAM,GAAG,KAAKrH,KAAL,CAAWjC,IAAX,CAAgByJ,SAA7B;;AACA,QAAIH,MAAM,KAAK,WAAf,EAA4B;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAA3C,MACK;AAAEA,MAAAA,MAAM,GAAG,WAAT;AAAsB;;AAC7B,SAAKjH,QAAL,CAAcyE,SAAS,KAAK;AAC1B9G,MAAAA,IAAI,EAAE,EAAC,GAAG8G,SAAS,CAAC9G,IAAd;AAAoByJ,QAAAA,SAAS,EAAEH,MAA/B;AAAuCI,QAAAA,KAAK,EAAE;AAA9C;AADoB,KAAL,CAAvB;AAEA,SAAKvB,cAAL,CAAoB,MAApB;AACD;;AACDwB,EAAAA,WAAW,GAAG;AACZ,QAAIL,MAAM,GAAG,KAAKrH,KAAL,CAAWjC,IAAX,CAAgB0J,KAA7B;;AACA,QAAIJ,MAAM,KAAK,OAAf,EAAwB;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAAvC,MACK;AAAEA,MAAAA,MAAM,GAAG,OAAT;AAAkB;;AACzB,SAAKjH,QAAL,CAAcyE,SAAS,KAAK;AAC1B9G,MAAAA,IAAI,EAAE,EAAC,GAAG8G,SAAS,CAAC9G,IAAd;AAAoB0J,QAAAA,KAAK,EAAEJ,MAA3B;AAAmCG,QAAAA,SAAS,EAAE;AAA9C;AADoB,KAAL,CAAvB;AAEA,SAAKtB,cAAL,CAAoB,MAApB;AACD;;AACDyB,EAAAA,cAAc,GAAG;AACf,QAAIN,MAAM,GAAG,KAAKrH,KAAL,CAAWjC,IAAX,CAAgBwI,SAA7B;;AACA,QAAIc,MAAM,KAAK,WAAf,EAA4B;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAA3C,MACK;AAAEA,MAAAA,MAAM,GAAG,WAAT;AAAsB;;AAC7B,SAAKjH,QAAL,CAAcyE,SAAS,KAAK;AAC1B9G,MAAAA,IAAI,EAAE,EAAC,GAAG8G,SAAS,CAAC9G,IAAd;AAAoBwI,QAAAA,SAAS,EAAEc;AAA/B;AADoB,KAAL,CAAvB;AAEA,SAAKnB,cAAL,CAAoB,MAApB;AACD;;AACD0B,EAAAA,UAAU,GAAG;AACX;AACE;AACF,QAAI3E,MAAM,GAAG,KAAKlD,KAAL,CAAWkD,MAAxB;;AACA,WAAOA,MAAM,CAAClD,KAAP,CAAakD,MAApB,EAA4B;AAC1BA,MAAAA,MAAM,GAAGA,MAAM,CAAClD,KAAP,CAAakD,MAAtB;AACD;;AACD,SAAKmE,aAAL,CAAmB,SAAnB;AACA,SAAKH,eAAL,CAAqB,SAArB;AACA,UAAMhJ,QAAQ,GAAG,KAAK+B,KAAL,CAAWiD,MAAX,CAAkBjD,KAAlB,CAAwB/B,QAAzC;AACA,UAAMgE,WAAW,GAAGhE,QAAQ,CAAC4J,SAAT,CAAmB1G,CAAC,IAAI;AAC1C,aAAOA,CAAC,CAACjD,EAAF,KAAS,KAAK8B,KAAL,CAAW9B,EAA3B;AACD,KAFmB,CAApB;AAGAD,IAAAA,QAAQ,CAAC6J,MAAT,CAAgB7F,WAAhB,EAA6B,CAA7B;AACA3C,IAAAA,QAAQ,GAAG,KAAKU,KAAL,CAAWiD,MAAtB;AACA,SAAKjD,KAAL,CAAWiD,MAAX,CAAkB7C,QAAlB,CAA2B;AAACnC,MAAAA,QAAQ,EAAEA;AAAX,KAA3B;AACAsB,IAAAA,aAAa,GAAG,IAAhB;AACAuC,IAAAA,UAAU,CAAC,MAAM;AACfvC,MAAAA,aAAa,GAAG,KAAhB;AACAwI,MAAAA,IAAI,CAAC,KAAKhI,KAAL,CAAWkD,MAAZ,EAAoB,MAApB,CAAJ;AACD,KAHS,EAGP,GAHO,CAAV;AAID;;AACD6B,EAAAA,iBAAiB,GAAG;AAClB,SAAKa,WAAL,CAAiB;AAAC1E,MAAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAW7B;AAAnB;AAAT,KAAjB;AACA,SAAKyI,OAAL,CAAajF,OAAb,CAAqBqG,KAArB;AACA3F,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,SAAK+E,aAAL,CAAmB,MAAnB;AACA,SAAKH,eAAL,CAAqB,MAArB;AACD;;AACDrJ,EAAAA,MAAM,GAAG;AACP;AACA,SAAKsI,cAAL,GAAsB,KAAKA,cAAL,CAAoB1D,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKrC,cAAL,GAAsB,KAAKA,cAAL,CAAoBqC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAK+E,eAAL,GAAuB,KAAKA,eAAL,CAAqB/E,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKkF,WAAL,GAAmB,KAAKA,WAAL,CAAiBlF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKoF,UAAL,GAAkB,KAAKA,UAAL,CAAgBpF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKL,QAAL,gBAAgB5E,KAAK,CAAC2C,SAAN,EAAhB;AACA,SAAK+H,aAAL,gBAAqB1K,KAAK,CAAC2C,SAAN,EAArB;AACA,SAAK0G,OAAL,gBAAerJ,KAAK,CAAC2C,SAAN,EAAf;AACA,SAAK6G,UAAL,gBAAkBxJ,KAAK,CAAC2C,SAAN,EAAlB;AACA,SAAKgI,aAAL,gBAAqB3K,KAAK,CAAC2C,SAAN,EAArB;AACA,UAAMiI,YAAY,GAAG,KAAKnI,KAAL,CAAW/B,QAAX,CAAoB4C,MAApB,GAA6B,CAA7B,GACnB,SADmB,GACP,EADd;AAEA,UAAMuH,QAAQ,GAAG,KAAKpI,KAAL,CAAWjC,IAAX,CAAgBsI,SAAhB,CAA0BxF,MAA1B,GAAmC,CAAnC,IACf,KAAKb,KAAL,CAAWjC,IAAX,CAAgBuI,OAAhB,CAAwBzF,MAAxB,GAAiC,CADlB,GACsB,OADtB,GACgC,EADjD;;AAEA,UAAMwH,UAAU,gBACd;AAAO,MAAA,SAAS,EAAC,wBAAjB;AACA,MAAA,KAAK,EAAE,KAAKrI,KAAL,CAAWjC,IAAX,CAAgBsI,SADvB;AAEA,MAAA,QAAQ,EAAGrF,EAAD,IAAQ,KAAKiG,eAAL,CAAqBjG,EAArB,CAFlB;AAGA,MAAA,GAAG,EAAE,KAAKkH;AAHV;AAAA;AAAA;AAAA;AAAA,YADF;;AAKA,UAAMI,QAAQ,gBACZ;AAAO,MAAA,SAAS,EAAC,sBAAjB;AACA,MAAA,KAAK,EAAE,KAAKtI,KAAL,CAAWjC,IAAX,CAAgBuI,OADvB;AAEA,MAAA,QAAQ,EAAGtF,EAAD,IAAQ,KAAKoG,aAAL,CAAmBpG,EAAnB;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,CArBO,CA0BP;;;AACA,wBACE;AACA,MAAA,SAAS,EAAE,UAAU,KAAKhB,KAAL,CAAWjC,IAAX,CAAgByJ,SAA1B,GACT,GADS,GACH,KAAKxH,KAAL,CAAWjC,IAAX,CAAgBuJ,QADb,GAET,GAFS,GAEH,KAAKtH,KAAL,CAAWjC,IAAX,CAAgB0J,KAFb,GAGT,GAHS,GAGHU,YAHG,GAIT,GAJS,GAIHC,QAJG,GAKT,GALS,GAKH,KAAKpI,KAAL,CAAWjC,IAAX,CAAgBwI,SANxB;AAOA,MAAA,OAAO,EAAE,MAAM;AAAClE,QAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB,OAPjC;AAAA,8BASE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAGrB,EAAD,IAAQ,KAAKkF,cAAL,CAAoBlF,EAApB,CAAxC;AACE,QAAA,GAAG,EAAE,KAAKiH,aADZ;AAAA,+BAEE;AAAK,UAAA,SAAS,EAAE,aAAa,KAAKjI,KAAL,CAAWkG,cAAxC;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,KAAK,EAAE;AAACzG,cAAAA,KAAK,EAAE,MAAR;AAChC8I,cAAAA,YAAY,EAAE;AADkB,aAAlC;AAAA,oCAEE;AACE,cAAA,SAAS,EAAE,YAAY,KAAKvI,KAAL,CAAWjC,IAAX,CAAgBuJ,QADzC;AAEE,cAAA,OAAO,EAAE,KAAKnH,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME;AACE,cAAA,SAAS,EAAE,YAAY,KAAKH,KAAL,CAAWjC,IAAX,CAAgByJ,SADzC;AAEE,cAAA,OAAO,EAAE,KAAKD,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAUE;AACE,cAAA,SAAS,EAAE,YAAY,KAAKvH,KAAL,CAAWjC,IAAX,CAAgB0J,KADzC;AAEE,cAAA,OAAO,EAAE,KAAKC,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAcE;AACE,cAAA,SAAS,EAAE,QADb;AAEE,cAAA,OAAO,EAAE,KAAKE,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,eAkBE;AACE,cAAA,SAAS,EAAE,QADb;AAEE,cAAA,OAAO,EAAE,MAAM;AACbjF,gBAAAA,OAAO,CAAC,MAAD,CAAP;AACA,qBAAKuD,cAAL,CAAoB,MAApB;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAyBE;AACE,cAAA,SAAS,EAAE,QADb;AAEE,cAAA,OAAO,EAAE,MAAM,KAAKyB,cAAL,EAFjB;AAAA,wBAGG;AAHH;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EA+BGU,UA/BH,EAgCGC,QAhCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cATF,eA8CE;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,eAAX;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,uBAAhB;AAAA,sBAAyC,KAAKtI,KAAL,CAAWjC,IAAX,CAAgBsI;AAAzD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,qBAAhB;AAAA,sBAAuC,KAAKrG,KAAL,CAAWjC,IAAX,CAAgBuI;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAU,UAAA,SAAS,EAAC,SAApB;AAA8B,UAAA,KAAK,EAAE,KAAKtG,KAAL,CAAW7B,KAAhD;AACE,UAAA,QAAQ,EAAG6C,EAAD,IAAQ,KAAK2E,WAAL,CAAiB3E,EAAjB,CADpB;AAC0C,UAAA,GAAG,EAAE,KAAK4F,OADpD;AAEE,UAAA,KAAK,EAAE;AAACF,YAAAA,MAAM,EAAE,KAAK1G,KAAL,CAAW8G;AAApB;AAFT;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF,eAuDE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AACE,QAAA,GAAG,EAAE,KAAKC,UADZ;AAEE,QAAA,KAAK,EAAE;AAACtH,UAAAA,KAAK,EAAE,KAAKO,KAAL,CAAW2G;AAAnB,SAFT;AAAA,kBAGG,KAAK3G,KAAL,CAAW7B,KAAX,GAAmB;AAHtB;AAAA;AAAA;AAAA;AAAA,cAvDF,eA2DE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAKgE,QAApB;AAA8B,QAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAW/B,QAAnD;AACE,QAAA,MAAM,EAAE;AADV;AAAA;AAAA;AAAA;AAAA,cA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgED;;AAhRgC;;AAmRnC,SAAS0E,OAAT,CAAiB6F,IAAjB,EAAuB;AACrB;AACA,MAAIC,EAAJ;;AACA,MAAID,IAAI,IAAI,MAAR,IAAkB,CAAClJ,QAAQ,CAACU,KAAT,CAAeiD,MAAtC,EAA8C;AAC5CwF,IAAAA,EAAE,GAAGnJ,QAAL;AACD,GAFD,MAEO,IAAIkJ,IAAI,IAAI,MAAR,IAAkBlJ,QAAQ,CAACU,KAAT,CAAeiD,MAArC,EAA6C;AAClDwF,IAAAA,EAAE,GAAGnJ,QAAQ,CAACU,KAAT,CAAeiD,MAApB;AACD;;AACD,QAAMV,KAAK,GAAG,IAAIjE,IAAJ,EAAd;AACA,QAAM0G,GAAG,GAAGzC,KAAK,CAAChE,OAAN,EAAZ;AACA,QAAMoE,OAAO,GAAG;AACdzE,IAAAA,EAAE,EAAEG,MAAM,CAAC2G,GAAD,CADI;AAEdjH,IAAAA,IAAI,EAAE;AAACuJ,MAAAA,QAAQ,EAAE,EAAX;AAAejB,MAAAA,SAAS,EAAE,EAA1B;AAA8BC,MAAAA,OAAO,EAAE;AAAvC,KAFQ;AAGdnI,IAAAA,KAAK,EAAE,EAHO;AAIdF,IAAAA,QAAQ,EAAE;AAJI,GAAhB;AAMAuB,EAAAA,UAAU,GAAGmD,OAAb;AACAG,EAAAA,SAAS,CAAC0F,IAAD,CAAT;AACD;;AAED,SAASnG,UAAT,CAAoBoG,EAApB,EAAwBC,KAAxB,EAA+B;AAC7B;AACA,MAAInJ,aAAJ,EAAmB;;AACnB,MAAIkJ,EAAE,YAAY5C,QAAlB,EAA4B;AAC1B;AACD;;AACDtG,EAAAA,aAAa,GAAG,IAAhB;AACAuC,EAAAA,UAAU,CAAC,YAAY;AAAEvC,IAAAA,aAAa,GAAG,KAAhB;AAAuB,GAAtC,EAAwC,GAAxC,CAAV;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;;AACA,MAAIA,QAAQ,IAAImJ,EAAZ,IAAkB,CAACC,KAAvB,EAA8B;AAC5BxJ,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA;AACD;;AACD,MAAIG,QAAJ,EAAc;AACZyI,IAAAA,IAAI,CAACzI,QAAD,EAAW,MAAX,CAAJ;AACD;;AACD,MAAIA,QAAQ,YAAY2G,IAApB,IAA4BwC,EAAE,IAAInJ,QAAtC,EAAgD;AAC9CA,IAAAA,QAAQ,CAAC4G,cAAT,CAAwB;AAACjF,MAAAA,MAAM,EAAE0H;AAAT,KAAxB,EAA6C,MAA7C;AACD;;AACDrJ,EAAAA,QAAQ,GAAGmJ,EAAX;;AACA,MAAIA,EAAE,YAAYxC,IAAlB,EAAwB;AACtBwC,IAAAA,EAAE,CAAC7B,OAAH,CAAWjF,OAAX,CAAmBqG,KAAnB;AACD;AACF;;AAED,SAASD,IAAT,CAActH,IAAd,EAAoBmI,QAApB,EAA8B;AAC5B;AACA,MAAI3F,MAAM,GAAGxC,IAAI,CAACV,KAAL,CAAWkD,MAAxB;AACA,MAAI4F,OAAO,GAAG,CAACpI,IAAI,CAACV,KAAL,CAAW7B,EAAZ,CAAd;;AACA,SAAO+E,MAAM,IAAIA,MAAM,CAAClD,KAAP,CAAa7B,EAA9B,EAAkC;AAChC2K,IAAAA,OAAO,CAACxD,IAAR,CAAapC,MAAM,CAAClD,KAAP,CAAa7B,EAA1B;AACA+E,IAAAA,MAAM,GAAGA,MAAM,CAAClD,KAAP,CAAakD,MAAtB;AACD;;AACD4F,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,EAAV;AACA,MAAIC,YAAY,GAAGnK,IAAI,CAACiK,OAAO,CAAC,CAAD,CAAR,CAAvB;AACA,MAAIvD,QAAJ;;AACA,MAAIsD,QAAQ,KAAK,MAAjB,EAAyB;AACvB;AACAtD,IAAAA,QAAQ,GAAG,CAAX;AACD,GAHD,MAGO,IAAIsD,QAAQ,KAAK,MAAb,IAAuB,CAACA,QAA5B,EAAsC;AAC3C;AACAtD,IAAAA,QAAQ,GAAG,CAAC,CAAZ;AACD;;AACD,OAAK,IAAI0D,QAAT,IAAqBH,OAAO,CAACrK,KAAR,CAAc,CAAd,EAAiBqK,OAAO,CAAChI,MAAR,GAAiByE,QAAlC,CAArB,EAAkE;AAChEyD,IAAAA,YAAY,GAAGA,YAAY,CAAC9K,QAAb,CAAsBgL,IAAtB,CAA2B9H,CAAC,IAAIA,CAAC,CAACjD,EAAF,KAAS8K,QAAzC,CAAf;AACD;;AACD,MAAI,CAACD,YAAL,EAAmB;AACnBA,EAAAA,YAAY,CAAC5K,KAAb,GAAqBsC,IAAI,CAACT,KAAL,CAAW7B,KAAhC;AACA4K,EAAAA,YAAY,CAAC9K,QAAb,GAAwBwC,IAAI,CAACT,KAAL,CAAW/B,QAAnC;AACA8K,EAAAA,YAAY,CAAChL,IAAb,GAAoB0C,IAAI,CAACT,KAAL,CAAWjC,IAA/B;AACAc,EAAAA,YAAY,CAACqK,OAAb,CAAqB,MAArB,EAA6BnK,IAAI,CAACoK,SAAL,CAAevK,IAAf,CAA7B;AACD;;AAED,SAASgE,OAAT,GAAmB;AACjB,MAAI,CAACtD,QAAD,IAAaA,QAAQ,YAAYoG,IAArC,EAA2C;AAC3C7C,EAAAA,QAAQ;AACRvD,EAAAA,QAAQ,CAACsI,UAAT;AACD;;AAED,SAAS/E,QAAT,GAAoB;AAClB,MAAI,CAACvD,QAAD,IAAaA,QAAQ,YAAYoG,IAArC,EAA2C;AAC3C,QAAM1F,KAAK,GAAGV,QAAQ,CAACU,KAAvB;AACAR,EAAAA,UAAU,GAAG;AAACrB,IAAAA,KAAK,EAAE6B,KAAK,CAAC7B,KAAd;AAAqBD,IAAAA,EAAE,EAAEoB,QAAQ,CAACS,KAAT,CAAe7B,EAAxC;AACXH,IAAAA,IAAI,EAAE,EAAC,GAAGiC,KAAK,CAACjC;AAAV,KADK;AACYE,IAAAA,QAAQ,EAAE+B,KAAK,CAAC/B,QAAN,CAAemL,MAAf;AADtB,GAAb;AAED;;AAED,SAAStG,SAAT,CAAmB0F,IAAnB,EAAyB;AACvB,MAAI,CAAClJ,QAAL,EAAe;;AACf,MAAIA,QAAQ,YAAYoG,IAApB,IAA4B8C,IAAI,KAAK,MAAzC,EAAiD;AAC/C,UAAMvK,QAAQ,GAAGqB,QAAQ,CAACU,KAAT,CAAe/B,QAAhC;AACAA,IAAAA,QAAQ,CAAC6J,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBtI,UAAtB;AACAF,IAAAA,QAAQ,CAACc,QAAT,CAAkB;AAACnC,MAAAA,QAAQ,EAAEA;AAAX,KAAlB;AACA8J,IAAAA,IAAI,CAACzI,QAAD,EAAW,MAAX,CAAJ;AACD,GALD,MAKO,IAAIA,QAAQ,YAAY2G,IAApB,IAA4BuC,IAAI,KAAK,MAAzC,EAAiD;AACtD,UAAMvK,QAAQ,GAAGqB,QAAQ,CAACU,KAAT,CAAeiD,MAAf,CAAsBjD,KAAtB,CAA4B/B,QAA7C;AACA,UAAMoL,WAAW,GAAGpL,QAAQ,CAAC4J,SAAT,CAAmB1G,CAAC,IAAIA,CAAC,CAACjD,EAAF,IAAQoB,QAAQ,CAACS,KAAT,CAAe7B,EAA/C,IAAqD,CAAzE;AACAD,IAAAA,QAAQ,CAAC6J,MAAT,CAAgBuB,WAAhB,EAA6B,CAA7B,EAAgC7J,UAAhC;AACAF,IAAAA,QAAQ,CAACU,KAAT,CAAeiD,MAAf,CAAsB7C,QAAtB,CAA+B;AAACnC,MAAAA,QAAQ,EAAEA;AAAX,KAA/B;AACA8J,IAAAA,IAAI,CAACzI,QAAD,EAAW,MAAX,CAAJ;AACD;AACF;;AAED,SAASyD,MAAT,GAAkB;AAChB,QAAMiC,GAAG,GAAG,IAAI1G,IAAJ,EAAZ,CADgB,CAEhB;AACD;;AAED,SAASgL,QAAT,CAAkBtI,EAAlB,EAAsB;AACpB,MAAIA,EAAE,CAACuI,OAAH,IAAcvI,EAAE,CAACwI,QAArB,EAA+B;AAC7B,YAAQxI,EAAE,CAAC0B,GAAX;AACE,WAAK,GAAL;AACEI,QAAAA,SAAS,CAAC,MAAD,CAAT;AACA;;AACF,WAAK,GAAL;AACEH,QAAAA,OAAO,CAAC,MAAD,CAAP;AACA;;AACF;AACE;AARJ;AAUD,GAXD,MAWO,IAAI3B,EAAE,CAACuI,OAAP,EAAgB;AACrB,YAAQvI,EAAE,CAAC0B,GAAX;AACE,WAAK,GAAL;AACEE,QAAAA,OAAO;AACP;;AACF,WAAK,GAAL;AACEC,QAAAA,QAAQ;AACR;;AACF,WAAK,GAAL;AACEC,QAAAA,SAAS;AACT;;AACF,WAAK,GAAL;AACEH,QAAAA,OAAO;AACP;;AACF,WAAK,WAAL;AACE,YAAIrD,QAAQ,IAAIA,QAAQ,YAAY2G,IAApC,EAA0C;AACxC3G,UAAAA,QAAQ,CAACsI,UAAT;AACD;;AACH,WAAK,GAAL;AACE6B,QAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,QAAQ,CAAC,CAAD,CAAR;AACA;;AACF,WAAK,GAAL;AACE,YAAInK,QAAQ,IAAIA,QAAQ,YAAY2G,IAApC,EAA0C;AACxC3G,UAAAA,QAAQ,CAAC4G,cAAT,CAAwB;AAACjF,YAAAA,MAAM,EAAEtD,CAAC,CAAC,SAAD;AAAV,WAAxB;;AACA,cAAI2B,QAAQ,CAACU,KAAT,CAAekG,cAAf,KAAkC,MAAtC,EAA8C;AAC5C5G,YAAAA,QAAQ,CAAC4I,aAAT,CAAuBvG,OAAvB,CAA+BqG,KAA/B;AACD,WAFD,MAEO;AACL1I,YAAAA,QAAQ,CAACsH,OAAT,CAAiBjF,OAAjB,CAAyBqG,KAAzB;AACD;AACF;;AAAA;AACD;;AACF;AACE;AAlCJ;AAoCD,GArCM,MAqCA,IAAI,CAAChH,EAAE,CAAC0I,OAAJ,IAAe,CAAC1I,EAAE,CAACuI,OAAnB,IAA8B,CAACvI,EAAE,CAAC2I,MAAtC,EAA8C;AACnD,YAAQ3I,EAAE,CAAC0B,GAAX;AACE,WAAK,QAAL;AACE1B,QAAAA,EAAE,CAAC4I,cAAH;AACAC,QAAAA,QAAQ,CAACC,aAAT,CAAuBC,IAAvB;AACA1H,QAAAA,UAAU,CAACsG,SAAD,CAAV;AACA;;AACF;AACE;AAPJ;AASD;AACF;;AAED,SAASc,QAAT,CAAkBO,SAAlB,EAA6B;AAC3B9K,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,MAAI,CAACG,QAAL,EAAe;AACf,QAAMrB,QAAQ,GAAGqB,QAAQ,CAACS,KAAT,CAAekD,MAAf,CAAsBjD,KAAtB,CAA4B/B,QAA7C;AACA,QAAMgM,aAAa,GACjB3K,QAAQ,CAACS,KAAT,CAAekD,MAAf,CAAsBjD,KAAtB,CAA4B/B,QAA5B,CAAqC4J,SAArC,CAA+C1G,CAAC,IAAIA,CAAC,CAACjD,EAAF,KAASoB,QAAQ,CAACS,KAAT,CAAe7B,EAA5E,CADF;AAEA,QAAMgM,UAAU,GAAGjM,QAAQ,CAAC6J,MAAT,CAAgBmC,aAAhB,EAA+B,CAA/B,EAAkC,CAAlC,CAAnB;AACAhM,EAAAA,QAAQ,CAAC6J,MAAT,CAAgBmC,aAAa,GAAGD,SAAhC,EAA2C,CAA3C,EAA8CE,UAA9C;AACA5K,EAAAA,QAAQ,CAACS,KAAT,CAAekD,MAAf,CAAsB7C,QAAtB,CAA+BnC,QAA/B;AACD;;AAED,SAAS+E,KAAT,GAAiB;AACfpE,EAAAA,IAAI,GAAGf,SAAP;AACAgB,EAAAA,YAAY,CAACqK,OAAb,CAAqB,MAArB,EAA6BnK,IAAI,CAACoK,SAAL,CAAetL,SAAf,CAA7B;AACAiE,EAAAA,UAAU,CAAC,YAAY;AAAEyC,IAAAA,MAAM,CAAC4F,QAAP,CAAgBC,MAAhB;AAA0B,GAAzC,EAA2C,GAA3C,CAAV;AACD;;AAED,SAASC,IAAT,GAAgB;AACd/K,EAAAA,QAAQ,GAAGqJ,SAAX;AACAlJ,EAAAA,KAAK,GAAG4E,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B,CAAR;AACA9E,EAAAA,SAAS,GAAG2E,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B,CAAZ;AACA7E,EAAAA,GAAG,gBAAGpC,KAAK,CAAC2C,SAAN,EAAN;AACAzC,EAAAA,QAAQ,CAACG,MAAT,eAAgB,QAAC,GAAD;AAAK,IAAA,GAAG,EAAE+B;AAAV;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAmCkK,QAAQ,CAACS,cAAT,CAAwB,MAAxB,CAAnC;AACA3M,EAAAA,CAAC,CAACkM,QAAD,CAAD,CAAYpF,EAAZ,CAAe,SAAf,EAA0B6E,QAA1B;AACD;;AAEDe,IAAI","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import \"./react-datepicker.css\";\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:String(new Date().getTime()).slice(11) + \"'\" + \n        String(new Date().getTime()).slice(13), title: new Date().toDateString(), subtasks: [], info: {}}\n    ]}, \n  settings: {repeats: {'Mon': [], 'Tue': [], 'Wed': [], 'Thu': [], \n  'Fri': [], 'Sat': [], 'Sun': [], }}\n};\n\nvar data;\ntry {\n  data = !localStorage.getItem('data') ? { resetData } :\n    JSON.parse(localStorage.getItem('data'));\n} catch (err) {\n  console.log(err);\n  data = resetData;\n}\n\nvar deadlines = {};\nvar startdates = {};\n\ntry {\n  var repeats = data.settings.repeats;\n} catch (err) {\n  console.log('error');\n  var data = resetData;\n}\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\nvar app;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: '', \n      bank: React.createRef(),\n      river: React.createRef(),\n    };\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} ref={this.state.bank} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} ref={this.state.river} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {searchString: '', foundTasks: {}};\n  }\n  treeSearch(task, idString) {\n    let i = 0;\n    for (let subtask of task.subtasks) {\n      if (subtask.title.length > 0) {\n        this.searches[subtask.title] = idString + ' ' + i;\n      }\n      this.treeSearch(subtask, idString + ' ' + i);\n      i ++;\n    }\n  }\n  search(ev) {\n    if (this.state.searchString === '') {\n      this.searches = {};\n      this.treeSearch(data.river, 'river');\n      this.treeSearch(data.bank, 'bank');\n    }\n    this.setState({searchString: ev.target.value});\n    for (let x of Object.keys(this.searches)) {\n      if (!x.includes(this.state.searchString)) {\n        delete this.searches[x];\n      }\n    }\n    console.log(this.searches);\n    this.setState({foundTasks: this.searches});\n  }\n  goToSearch(title) {\n    const splits = title.split(' ');\n    const frame = app.current.state[splits[0]];\n    frame.current.changeIndex(Number(splits[1]), 'set');\n    setTimeout(() => {\n      console.log(frame.current.frames.map(x => x.current.state.title));\n      let currentTask = frame.current.frames[0];\n      for (let place of splits.slice(2)) {\n        // zoom into places until you find the task\n        currentTask = currentTask.current.taskList.current.\n          subtaskObjects[Number(place)];\n      }\n      console.log(currentTask.current);\n      preventSelect = false;\n      selectTask(currentTask.current, true);\n    }, 50);\n    this.setState({searchString: '', foundTasks: {}});\n  }\n  goToToday() {\n    const today = new Date().toDateString();\n    // TODO: FINSIH\n  }\n  render() {\n    this.search = this.search.bind(this);\n    this.treeSearch = this.treeSearch.bind(this);\n    this.goToSearch = this.goToSearch.bind(this);\n    this.goToToday = this.goToToday.bind(this);\n    this.searchResults = React.createRef();\n    return (\n      <div className='statusBar'>\n        <input className='searchBar' onChange={(ev) => this.search(ev)}\n          value={this.state.searchString}\n          onKeyDown={(ev) => {\n            if (ev.key === 'Backspace') {\n              this.setState({searchString: '', foundTasks: {}});\n            }\n          }}></input>\n        <select ref={this.searchResults} onChange={() => {\n          this.goToSearch(this.state.foundTasks[\n            this.searchResults.current.value])\n          }}>\n          <option></option>\n          {Object.keys(this.state.foundTasks).map(x => \n            <option key={x} value={x}>{x}</option>)}\n        </select>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={backup}>backup</button>\n          <button className='button' onClick={reset}>reset</button>\n          <button className='button' onClick={() => this.goToToday}>today</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0, repeats: repeats};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    this.play();\n  }\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: (this.state.minutes + 1) * multiplier, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n          this.setState({minutes: (this.state.minutes - 1) * multiplier, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000);\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({minutes: 0, seconds: 0});\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = React.createRef();\n    return (\n      <div>\n        <div className='buttonBar'>\n          <button className='button' onClick={() => this.startTimer(50)}>50</button>\n          <button className='button' onClick={() => this.startTimer(25)}>25</button>\n          <button className='button' onClick={() => this.startTimer(10)}>10</button>\n          <button className='button' onClick={() => this.startTimer(5)}>5</button>\n          <button className='button' onClick={() => {\n            this.setState({minutes: 0, seconds: 1});\n            this.play();\n          }}>:5</button>\n          <button className='button' onClick={() => this.playPause()}>&#9632;</button>\n        </div>\n        <input className='timerBar' readOnly={true}\n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n    if (props.id === 'river') {\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n      this.state.repeats = repeats;\n    }\n  }\n  changeIndex(val, set) {\n    let newIndex;\n    if (set === 'set') {\n      newIndex = val;\n    } else {\n      newIndex = this.state.info.index + val;\n    }\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  componentDidMount() {\n    $(':root').css('--frameWidth', \n      ((window.innerWidth - 40) / width) + 'px');\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = this.state.lists[this.state.lists.length - 1].title\n    lastDate = new Date(\n      lastDate.slice(0, 11) + '2' + lastDate.slice(12)\n    );\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n        title = title.slice(0, 11) + \"'\" + title.slice(13);\n      }\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: title, subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      $(':root').css('--frameWidth', \n        ((window.innerWidth - 40) / width) + 'px');\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck);\n    const shownLists = \n      this.state.lists.slice(this.state.info.index, endIndex);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {shownLists.map(x => {\n          this.frames.push(React.createRef());\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} \n                deadlines={this.state.deadlines[x.title]} \n                startdates={this.state.startdates[x.title]} \n                ref={this.frames[this.frames.length - 1]} />\n            )\n          } else {\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} />\n            )\n          }\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}};\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        {this.props.parent.props.id === 'bank' ?\n          <input className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input> :\n          <input readOnly className='listInput listTitle'\n            value={this.state.title}></input>\n        }\n        {this.props.parent.props.id === 'river' && \n        this.props.deadlines &&\n        <ul>\n          {Object.keys(this.props.deadlines).map(x => {\n            return <li \n              className='deadline' key={String(x)}>\n              {this.props.deadlines[x]}</li>;\n          })}\n        </ul>}\n        {this.props.parent.props.id === 'river' && \n        this.props.startdates &&\n        <ul>\n          {Object.keys(this.props.startdates).map(x => {\n            return <li \n              className='startdate' key={String(x)}>\n              {this.props.startdates[x]}</li>;\n          })}\n        </ul>}\n        {<TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />}\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    this.subtaskObjects = [];\n    const tasksListed = this.props.subtasks.map(x => {\n      this.subtaskObjects.push(React.createRef());\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n          ref={this.subtaskObjects[this.subtaskObjects.length - 1]}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {this.props.addTasks && this.props.addTasks}\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide', riverTask: false,\n      this: this\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n    let parent = props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    let height;\n    if (this.state.subtasks.length > 0) {\n      height = '0.5em';\n    } else {\n      height = '0.25em';\n    }\n    this.setState({editWidth: this.editBar.current.offsetWidth});\n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + \n    'px + ' + height});\n  }\n  changeStartDate(ev) { \n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (startdates[now.toDateString()] && \n        startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.startDate}};\n    } else if (ev === 'destroy') {\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n      return;\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, startDate: ev.target.value}})); \n    }\n    console.log(ev);\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n    }\n  }\n  changeEndDate(ev) { \n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (deadlines[now.toDateString()] && \n        deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.endDate}};\n    } else if (ev === 'destroy') {\n      ev = {target: {value: ' '}};\n    } else {\n      this.setState(prevState => ({\n        info: {...prevState.info, endDate: ev.target.value}})); \n    }\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({deadlines: deadlines});\n    }\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleCollapse() {\n    let status = this.state.info.collapsed\n    if (status === 'collapsed') { status = '' }\n    else { status = 'collapsed' }\n    this.setState(prevState => ({\n      info: {...prevState.info, collapsed: status}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    // TODO: remove deadline, repeat & startdate \n      // [[don't use global variable]]\n    let parent = this.props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    this.changeEndDate('destroy');\n    this.changeStartDate('destroy');\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(() => {\n      preventSelect = false\n      save(this.props.parent, 'list');\n    }, 200);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    const startInput = \n      <input className='optionsInput startDate' \n      value={this.state.info.startDate} \n      onChange={(ev) => this.changeStartDate(ev)}\n      ref={this.startDateSpan}></input>\n    const endInput = \n      <input className='optionsInput endDate' \n      value={this.state.info.endDate} \n      onChange={(ev) => this.changeEndDate(ev)}>\n      </input>\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n              <button \n                className={'button ' + this.state.info.complete}\n                onClick={this.toggleComplete}>\n                √</button>\n              <button \n                className={'button ' + this.state.info.important}\n                onClick={this.toggleImportant}>\n                !</button>\n              <button \n                className={'button ' + this.state.info.maybe}\n                onClick={this.toggleMaybe}>\n                ?</button>\n              <button \n                className={'button'}\n                onClick={this.deleteThis}>\n                x</button>\n              <button \n                className={'button'}\n                onClick={() => {\n                  newTask('task');\n                  this.displayOptions('hide');\n                }}>\n                +</button>\n              <button \n                className={'button'}\n                onClick={() => this.toggleCollapse()}>\n                {'[]'}</button>\n            </div>\n            {startInput}\n            {endInput}\n          </div>\n        </span>\n        <div class='taskContent'>\n          <div class='startEndSpans'>\n            <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n            <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n          </div>\n          <textarea className='editBar' value={this.state.title}\n            onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n            style={{height: this.state.editHeight}}></textarea>\n        </div>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el, force) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 100);\n  console.log(selected);\n  if (selected == el && !force) {\n    console.log('selected and el are the same');\n    return;\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  }\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  if (!parentObject) return;\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date();\n  // fs.writeFile('file.txt', JSON.stringify('data'), \n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'u':\n        moveTask(-1);\n        break;\n      case 'd':\n        moveTask(1);\n        break;\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction moveTask(direction) {\n  console.log('movetask');\n  if (!selected) return;\n  const subtasks = selected.props.parent.state.subtasks;\n  const selectedPlace = \n    selected.props.parent.state.subtasks.findIndex(x => x.id === selected.props.id);\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + direction, 0, spliceTask);\n  selected.props.parent.setState(subtasks);\n}\n\nfunction reset() {\n  data = resetData;\n  localStorage.setItem('data', JSON.stringify(resetData));\n  setTimeout(function () { window.location.reload() }, 200);\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  app = React.createRef();\n  ReactDOM.render(<App ref={app} />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}