{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'second',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {}\n};\nvar data = !localStorage.getItem('data') ? {\n  resetData\n} : JSON.parse(localStorage.getItem('data')); // var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Frame, {\n        id: \"bank\",\n        info: data['river'].info,\n        subtasks: data['bank'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Frame, {\n        id: \"river\",\n        info: data['river'].info,\n        subtasks: data['river'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: ''\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.props.parent.toggleComplete(),\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: '',\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this); // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          id: x.id,\n          title: x.title,\n          subtasks: x.subtasks,\n          parent: this\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: tasksListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n  }\n\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        startDate: ev.target.value\n      }\n    }));\n  }\n\n  changeEndDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        endDate: ev.target.value\n      }\n    }));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(function () {\n      preventSelect = false;\n    }, 500);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : ''; // task with info and subtasks\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.complete,\n            onClick: this.toggleComplete,\n            children: \"\\u221A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.important,\n            onClick: this.toggleImportant,\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.maybe,\n            onClick: this.toggleMaybe,\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: this.deleteThis,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: () => {\n              newTask('task');\n              this.displayOptions('hide');\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput startDate\",\n            value: this.state.info.startDate,\n            onChange: ev => this.changeStartDate(ev),\n            ref: this.startDateSpan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput endDate\",\n            value: this.state.info.endDate,\n            onChange: ev => this.changeEndDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + ' x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          ref: this.taskList,\n          subtasks: this.state.subtasks,\n          parent: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n\n  if (selected == el) {\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","ReactDOM","$","render","resetData","bank","info","index","subtasks","id","title","river","settings","data","localStorage","getItem","JSON","parse","selected","preventSelect","copiedTask","width","prevWidth","App","StatusBar","Component","constructor","props","state","hideComplete","toggleComplete","setState","newTask","cutTask","copyTask","pasteTask","parent","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","changeIndex","val","newIndex","prevState","now","Date","i","length","push","String","getTime","endIndex","bind","addEventListener","div","slice","map","x","List","taskList","createRef","changeTitle","ev","target","value","selectThis","selectTask","TaskList","addTask","tasksListed","task","Task","displayOptions","showHide","hasClass","editHeight","heightSpan","current","offsetHeight","changeStartDate","startDate","changeEndDate","endDate","status","complete","toggleImportant","important","maybe","toggleMaybe","deleteThis","currentTask","findIndex","splice","setTimeout","componentDidMount","editBar","focus","optionsButton","startDateSpan","headingClass","height","editWidth","type","el","today","console","log","save","undefined","saveType","parents","reverse","parentObject","parentId","find","setItem","stringify","concat","insertIndex","keyComms","ctrlKey","shiftKey","key","metaKey","altKey","preventDefault","document","activeElement","blur","init","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:'1', title: 'second', subtasks: [], info: {}}\n    ]}, \n  settings: {}\n};\n\nvar data = !localStorage.getItem('data') ? { resetData } :\n  JSON.parse(localStorage.getItem('data'));\n\n// var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nfunction App() {\n  return (\n    <>\n      <StatusBar />\n      <div className='container'>\n        <Frame id='bank' info={data['river'].info} \n          subtasks={data['bank'].subtasks} />\n        <Frame id='river' info={data['river'].info} \n          subtasks={data['river'].subtasks} />\n      </div>\n    </>\n  )\n}\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: ''};\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render() {\n    return (\n      <div className='statusBar'>\n        <input className='searchBar'></input>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={() => this.props.parent.toggleComplete()}>+√/-√</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: '', subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n          return (\n            <List key={x.id} id={x.id} title={x.title}\n              subtasks={x.subtasks} parent={this} />\n          )\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        <input \n          className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'\n    };\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, startDate: ev.target.value}})); \n  }\n  changeEndDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, endDate: ev.target.value}})); \n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(function () {preventSelect = false}, 500);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <button \n              className={'button ' + this.state.info.complete}\n              onClick={this.toggleComplete}>\n              √</button>\n            <button \n              className={'button ' + this.state.info.important}\n              onClick={this.toggleImportant}>\n              !</button>\n            <button \n              className={'button ' + this.state.info.maybe}\n              onClick={this.toggleMaybe}>\n              ?</button>\n            <button \n              className={'button'}\n              onClick={this.deleteThis}>\n              x</button>\n            <button \n              className={'button'}\n              onClick={() => {\n                newTask('task');\n                this.displayOptions('hide');\n              }}>\n              +</button>\n            <input className='optionsInput startDate' \n              value={this.state.info.startDate} \n              onChange={(ev) => this.changeStartDate(ev)}\n              ref={this.startDateSpan}>\n            </input>\n            <input className='optionsInput endDate' \n              value={this.state.info.endDate} \n              onChange={(ev) => this.changeEndDate(ev)}>\n            </input>\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + ' x'}</span>\n        <ul>\n          <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n            parent={this} />\n        </ul>\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  if (selected == el) {\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render(<App />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}