{"ast":null,"code":"import * as display from '../display/display';\nimport * as util from '../util/util';\nimport Task from '../../components/Task/Task';\nimport List from '../../components/List/List';\nimport TaskList from '../../components/TaskList/TaskList';\nimport Frame from '../../components/Frame/Frame';\nexport function deleteTask() {\n  if (window.selected && window.selected instanceof Task) {\n    window.undoData = localStorage.getItem('data');\n    window.selected.deleteThis();\n  }\n}\nexport function newTask(type) {\n  // create new task after window.selected\n  if (!window.selected || window.preventReturn) return;\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = String(now);\n  window.data.tasks[newTask] = {\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  window.copiedTask = newTask;\n  pasteTask(type);\n}\nexport function selectTask(el, force) {\n  if (window.getSelection) {\n    if (window.getSelection().empty) {\n      // Chrome\n      window.getSelection().empty();\n    } else if (window.getSelection().removeAllRanges) {\n      // Firefox\n      window.getSelection().removeAllRanges();\n    }\n  } // make this task window.selected\n\n\n  if (window.preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  window.preventSelect = true;\n  setTimeout(function () {\n    window.preventSelect = false;\n  }, 100);\n\n  if (window.selected) {\n    save(window.selected, 'task');\n  }\n\n  if (window.selected === el && !force) {\n    return;\n  }\n\n  if (window.selected instanceof Task && window.selected !== el) {\n    window.selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  window.selected = el;\n\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  } else if (el instanceof List) {\n    el.listInput.current.focus();\n  }\n}\nexport function save(task, saveType) {\n  // save the new window.data\n  var saveObject;\n\n  if (saveType === 'list') {\n    saveObject = task.props.parent;\n  } else {\n    saveObject = task;\n  }\n\n  var subtasks;\n  if (saveObject.subtasksCurrent) subtasks = saveObject.subtasksCurrent;else subtasks = saveObject.state.subtasks;\n  window.data.tasks[util.stripR(saveObject.props.id)] = {\n    title: saveObject.state.title,\n    info: saveObject.state.info,\n    subtasks: subtasks\n  };\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\nexport function undo() {\n  localStorage.setItem('data', window.undoData);\n  setTimeout(() => window.location.reload(), 500);\n}\nexport function saveSetting(setting, value) {\n  window.data.settings[setting] = value;\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\nexport function cutTask() {\n  if (!window.selected || window.selected instanceof List) return;\n  copyTask();\n  window.selected.deleteThis(false);\n  window.undoData = localStorage.getItem('data');\n}\nexport function copyTask(mirror) {\n  if (!window.selected || window.selected instanceof List) return;\n  save(window.selected);\n\n  if (mirror) {\n    window.copiedTask = window.selected.props.id;\n  } else {\n    // only copy window.data\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = String(now);\n    window.data.tasks[newTask] = { ...window.data.tasks[util.stripR(window.selected.props.id)]\n    };\n    window.copiedTask = newTask;\n  }\n}\nexport function pasteTask(type) {\n  if (!window.selected || !window.copiedTask) return;\n  window.undoData = localStorage.getItem('data');\n\n  if (window.selected instanceof List || type === 'task') {\n    const subtasks = window.selected.state.subtasks;\n    subtasks.splice(0, 0, window.copiedTask);\n    window.selected.setState({\n      subtasks: subtasks\n    });\n    save(window.selected, 'task');\n  } else if (window.selected instanceof Task || type === 'list') {\n    const subtasks = window.selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x === window.selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, window.copiedTask);\n    window.selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(window.selected, 'list');\n  }\n}\nexport function indentTask(unindent) {\n  // umm fix sometime\n  if (!window.selected) return;\n  const lastSelected = window.selected;\n  save(window.selected);\n  console.log(window.selected.props.parent);\n  const subtasks = window.selected.props.parent.taskList.current.subtaskObjects;\n  const here = subtasks.findIndex(x => util.stripR(x.current.props.id) === util.stripR(window.selected.props.id));\n\n  if (unindent !== true) {\n    if (here === 0) return;\n    const taskAbove = subtasks[here - 1].current;\n    const theseSubtasks = util.getSubtasks(taskAbove);\n    theseSubtasks.push(window.selected.props.id);\n    const previousSubtasks = util.getSubtasks(window.selected.props.parent);\n    previousSubtasks.splice(here, 1);\n    taskAbove.setState({\n      subtasks: theseSubtasks\n    });\n    lastSelected.props.parent.setState({\n      subtasks: previousSubtasks\n    });\n    save(taskAbove);\n    save(lastSelected.props.parent);\n  } else {\n    if (window.selected.props.parent.props.parent instanceof Frame) return;\n    const subtasks = window.selected.props.parent.props.parent.taskList.current.subtaskObjects;\n    const here = subtasks.findIndex(x => x.current.props.id === window.selected.props.parent.props.id);\n    const theseSubtasks = window.selected.props.parent.props.parent.state.subtasks;\n    theseSubtasks.splice(here + 1, 0, window.selected.props.id);\n    window.selected.props.parent.props.parent.setState({\n      subtasks: theseSubtasks\n    });\n    save(window.selected.props.parent.props.parent);\n    const parentSubtasks = util.getSubtasks(lastSelected.props.parent);\n    parentSubtasks.splice(parentSubtasks.findIndex(x => x === lastSelected.props.id), 1);\n    lastSelected.props.parent.setState({\n      subtasks: parentSubtasks\n    });\n    save(lastSelected.props.parent);\n  }\n}\nexport function moveTask(direction) {\n  if (!window.selected) return;\n  var subtasks;\n\n  if (window.selected.props.parent.subtasksCurrent) {\n    subtasks = window.selected.props.parent.subtasksCurrent.concat();\n  } else {\n    subtasks = window.selected.props.parent.state.subtasks;\n  }\n\n  let selectedPlace = subtasks.findIndex(x => x === window.selected.props.id);\n  if (selectedPlace === 0 && direction === -1) return;else if (selectedPlace === subtasks.length && direction === 1) return;\n  var subtasksChopped;\n\n  if (direction === -1) {\n    subtasksChopped = subtasks.slice(0, selectedPlace).reverse();\n  } else {\n    subtasksChopped = subtasks.slice(selectedPlace + 1);\n  }\n\n  var insertPlace;\n\n  if (window.data.settings.hideComplete === 'hideComplete') {\n    insertPlace = (subtasksChopped.findIndex(x => window.data.tasks[util.stripR(x)].info.complete !== 'complete') + 1) * direction;\n  } else {\n    insertPlace = 1 * direction;\n  }\n\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + insertPlace, 0, spliceTask);\n  window.selected.props.parent.setState({\n    subtasks: subtasks\n  });\n  save(window.selected.props.parent, 'task');\n}\nexport function listEdit(type) {\n  if (!window.selected) {\n    alert('select a list');\n    return;\n  }\n\n  if (type === 'migrate' && util.getFrame(window.selected).props.id === 'bank') {\n    alert('select a date');\n    return;\n  }\n\n  var incompleteTasks = [];\n  var subtasksCurrent = util.getList(window.selected).subtasksCurrent;\n\n  function addIncomplete(task) {\n    for (let x of task.taskList.current.subtaskObjects) {\n      addIncomplete(x.current);\n\n      if (x.current.state.info.complete !== 'complete') {\n        if (type === 'clear') {\n          x.current.toggleComplete();\n          x.current.displayOptions({\n            target: undefined\n          }, 'hide');\n          save(x.current);\n        } else if (type === 'migrate' && x.current.props.id.charAt(0) !== 'R') {\n          incompleteTasks.push(x.current.props.id);\n          subtasksCurrent.splice(subtasksCurrent.findIndex(y => y === x.current.props.id), 1);\n        }\n      }\n    }\n  }\n\n  addIncomplete(util.getList(window.selected));\n\n  if (type === 'migrate') {\n    const tomorrow = new Date(util.getList(window.selected).state.title);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    util.getList(window.selected).setState({\n      subtasks: subtasksCurrent\n    });\n    save(util.getList(window.selected));\n    display.searchDate(tomorrow.toDateString());\n    setTimeout(() => {\n      window.selected.setState({\n        subtasks: window.selected.subtasksCurrent.concat(incompleteTasks)\n      });\n      save(window.selected);\n    }, 500);\n  }\n}","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/services/edit/edit.js"],"names":["display","util","Task","List","TaskList","Frame","deleteTask","window","selected","undoData","localStorage","getItem","deleteThis","newTask","type","preventReturn","today","Date","now","getTime","String","data","tasks","info","complete","startDate","endDate","title","subtasks","copiedTask","pasteTask","selectTask","el","force","getSelection","empty","removeAllRanges","preventSelect","setTimeout","save","displayOptions","target","undefined","editBar","current","focus","listInput","task","saveType","saveObject","props","parent","subtasksCurrent","state","stripR","id","setItem","JSON","stringify","undo","location","reload","saveSetting","setting","value","settings","cutTask","copyTask","mirror","splice","setState","insertIndex","findIndex","x","indentTask","unindent","lastSelected","console","log","taskList","subtaskObjects","here","taskAbove","theseSubtasks","getSubtasks","push","previousSubtasks","parentSubtasks","moveTask","direction","concat","selectedPlace","length","subtasksChopped","slice","reverse","insertPlace","hideComplete","spliceTask","listEdit","alert","getFrame","incompleteTasks","getList","addIncomplete","toggleComplete","charAt","y","tomorrow","setDate","getDate","searchDate","toDateString"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,oBAAzB;AACA,OAAO,KAAKC,IAAZ,MAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,MAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,YAA2BN,IAAlD,EAAwD;AACtDK,IAAAA,MAAM,CAACE,QAAP,GAAkBC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;AACAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBI,UAAhB;AACD;AACF;AAED,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B;AACA,MAAI,CAACP,MAAM,CAACC,QAAR,IAAoBD,MAAM,CAACQ,aAA/B,EAA8C;AAE9C,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,GAAG,GAAGF,KAAK,CAACG,OAAN,EAAZ;AACA,QAAMN,OAAO,GAAGO,MAAM,CAACF,GAAD,CAAtB;AACAX,EAAAA,MAAM,CAACc,IAAP,CAAYC,KAAZ,CAAkBT,OAAlB,IAA6B;AAC3BU,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE,EAA3B;AAA+BC,MAAAA,OAAO,EAAE;AAAxC,KADqB;AAE3BC,IAAAA,KAAK,EAAE,EAFoB;AAG3BC,IAAAA,QAAQ,EAAE;AAHiB,GAA7B;AAKArB,EAAAA,MAAM,CAACsB,UAAP,GAAoBhB,OAApB;AACAiB,EAAAA,SAAS,CAAChB,IAAD,CAAT;AACD;AAED,OAAO,SAASiB,UAAT,CAAoBC,EAApB,EAAwBC,KAAxB,EAA+B;AACpC,MAAI1B,MAAM,CAAC2B,YAAX,EAAyB;AACvB,QAAI3B,MAAM,CAAC2B,YAAP,GAAsBC,KAA1B,EAAiC;AAAG;AAClC5B,MAAAA,MAAM,CAAC2B,YAAP,GAAsBC,KAAtB;AACD,KAFD,MAEO,IAAI5B,MAAM,CAAC2B,YAAP,GAAsBE,eAA1B,EAA2C;AAAG;AACnD7B,MAAAA,MAAM,CAAC2B,YAAP,GAAsBE,eAAtB;AACD;AACF,GAPmC,CAQpC;;;AACA,MAAI7B,MAAM,CAAC8B,aAAX,EAA0B;;AAC1B,MAAIL,EAAE,YAAY5B,QAAlB,EAA4B;AAC1B;AACD;;AACDG,EAAAA,MAAM,CAAC8B,aAAP,GAAuB,IAAvB;AACAC,EAAAA,UAAU,CAAC,YAAY;AAAE/B,IAAAA,MAAM,CAAC8B,aAAP,GAAuB,KAAvB;AAA8B,GAA7C,EAA+C,GAA/C,CAAV;;AACA,MAAI9B,MAAM,CAACC,QAAX,EAAqB;AACnB+B,IAAAA,IAAI,CAAChC,MAAM,CAACC,QAAR,EAAkB,MAAlB,CAAJ;AACD;;AACD,MAAID,MAAM,CAACC,QAAP,KAAoBwB,EAApB,IAA0B,CAACC,KAA/B,EAAsC;AACpC;AACD;;AACD,MAAI1B,MAAM,CAACC,QAAP,YAA2BN,IAA3B,IAAmCK,MAAM,CAACC,QAAP,KAAoBwB,EAA3D,EAA+D;AAC7DzB,IAAAA,MAAM,CAACC,QAAP,CAAgBgC,cAAhB,CAA+B;AAAEC,MAAAA,MAAM,EAAEC;AAAV,KAA/B,EAAsD,MAAtD;AACD;;AACDnC,EAAAA,MAAM,CAACC,QAAP,GAAkBwB,EAAlB;;AACA,MAAIA,EAAE,YAAY9B,IAAlB,EAAwB;AACtB8B,IAAAA,EAAE,CAACW,OAAH,CAAWC,OAAX,CAAmBC,KAAnB;AACD,GAFD,MAEO,IAAIb,EAAE,YAAY7B,IAAlB,EAAwB;AAC7B6B,IAAAA,EAAE,CAACc,SAAH,CAAaF,OAAb,CAAqBC,KAArB;AACD;AACF;AAED,OAAO,SAASN,IAAT,CAAcQ,IAAd,EAAoBC,QAApB,EAA8B;AACnC;AACA,MAAIC,UAAJ;;AACA,MAAID,QAAQ,KAAK,MAAjB,EAAyB;AACvBC,IAAAA,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAWC,MAAxB;AACD,GAFD,MAEO;AACLF,IAAAA,UAAU,GAAGF,IAAb;AACD;;AACD,MAAInB,QAAJ;AACA,MAAIqB,UAAU,CAACG,eAAf,EAAgCxB,QAAQ,GAAGqB,UAAU,CAACG,eAAtB,CAAhC,KACKxB,QAAQ,GAAGqB,UAAU,CAACI,KAAX,CAAiBzB,QAA5B;AACLrB,EAAAA,MAAM,CAACc,IAAP,CAAYC,KAAZ,CAAkBrB,IAAI,CAACqD,MAAL,CAAYL,UAAU,CAACC,KAAX,CAAiBK,EAA7B,CAAlB,IAAsD;AACpD5B,IAAAA,KAAK,EAAEsB,UAAU,CAACI,KAAX,CAAiB1B,KAD4B;AAEpDJ,IAAAA,IAAI,EAAE0B,UAAU,CAACI,KAAX,CAAiB9B,IAF6B;AAEvBK,IAAAA,QAAQ,EAAEA;AAFa,GAAtD;AAIAlB,EAAAA,YAAY,CAAC8C,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAenD,MAAM,CAACc,IAAtB,CAA7B;AACD;AAED,OAAO,SAASsC,IAAT,GAAgB;AACrBjD,EAAAA,YAAY,CAAC8C,OAAb,CAAqB,MAArB,EAA6BjD,MAAM,CAACE,QAApC;AACA6B,EAAAA,UAAU,CAAC,MAAM/B,MAAM,CAACqD,QAAP,CAAgBC,MAAhB,EAAP,EAAiC,GAAjC,CAAV;AACD;AAED,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,KAA9B,EAAqC;AAC1CzD,EAAAA,MAAM,CAACc,IAAP,CAAY4C,QAAZ,CAAqBF,OAArB,IAAgCC,KAAhC;AACAtD,EAAAA,YAAY,CAAC8C,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAenD,MAAM,CAACc,IAAtB,CAA7B;AACD;AAED,OAAO,SAAS6C,OAAT,GAAmB;AACxB,MAAI,CAAC3D,MAAM,CAACC,QAAR,IAAoBD,MAAM,CAACC,QAAP,YAA2BL,IAAnD,EAAyD;AACzDgE,EAAAA,QAAQ;AACR5D,EAAAA,MAAM,CAACC,QAAP,CAAgBI,UAAhB,CAA2B,KAA3B;AACAL,EAAAA,MAAM,CAACE,QAAP,GAAkBC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;AACD;AAED,OAAO,SAASwD,QAAT,CAAkBC,MAAlB,EAA0B;AAC/B,MAAI,CAAC7D,MAAM,CAACC,QAAR,IAAoBD,MAAM,CAACC,QAAP,YAA2BL,IAAnD,EAAyD;AACzDoC,EAAAA,IAAI,CAAChC,MAAM,CAACC,QAAR,CAAJ;;AACA,MAAI4D,MAAJ,EAAY;AACV7D,IAAAA,MAAM,CAACsB,UAAP,GAAoBtB,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBK,EAA1C;AACD,GAFD,MAEO;AACL;AACA,UAAMvC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,GAAG,GAAGF,KAAK,CAACG,OAAN,EAAZ;AACA,UAAMN,OAAO,GAAGO,MAAM,CAACF,GAAD,CAAtB;AACAX,IAAAA,MAAM,CAACc,IAAP,CAAYC,KAAZ,CAAkBT,OAAlB,IAA6B,EAAE,GAAGN,MAAM,CAACc,IAAP,CAAYC,KAAZ,CAAkBrB,IAAI,CAACqD,MAAL,CAAY/C,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBK,EAAlC,CAAlB;AAAL,KAA7B;AACAhD,IAAAA,MAAM,CAACsB,UAAP,GAAoBhB,OAApB;AACD;AACF;AAED,OAAO,SAASiB,SAAT,CAAmBhB,IAAnB,EAAyB;AAC9B,MAAI,CAACP,MAAM,CAACC,QAAR,IAAoB,CAACD,MAAM,CAACsB,UAAhC,EAA4C;AAC5CtB,EAAAA,MAAM,CAACE,QAAP,GAAkBC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;;AACA,MAAIJ,MAAM,CAACC,QAAP,YAA2BL,IAA3B,IAAmCW,IAAI,KAAK,MAAhD,EAAwD;AACtD,UAAMc,QAAQ,GAAGrB,MAAM,CAACC,QAAP,CAAgB6C,KAAhB,CAAsBzB,QAAvC;AACAA,IAAAA,QAAQ,CAACyC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB9D,MAAM,CAACsB,UAA7B;AACAtB,IAAAA,MAAM,CAACC,QAAP,CAAgB8D,QAAhB,CAAyB;AAAE1C,MAAAA,QAAQ,EAAEA;AAAZ,KAAzB;AACAW,IAAAA,IAAI,CAAChC,MAAM,CAACC,QAAR,EAAkB,MAAlB,CAAJ;AACD,GALD,MAKO,IAAID,MAAM,CAACC,QAAP,YAA2BN,IAA3B,IAAmCY,IAAI,KAAK,MAAhD,EAAwD;AAC7D,UAAMc,QAAQ,GAAGrB,MAAM,CAACC,QAAP,CAAgB6C,KAAhB,CAAsBF,MAAtB,CAA6BE,KAA7B,CAAmCzB,QAApD;AACA,UAAM2C,WAAW,GAAG3C,QAAQ,CAAC4C,SAAT,CAAmBC,CAAC,IAAIA,CAAC,KAAKlE,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBK,EAApD,IAA0D,CAA9E;AACA3B,IAAAA,QAAQ,CAACyC,MAAT,CAAgBE,WAAhB,EAA6B,CAA7B,EAAgChE,MAAM,CAACsB,UAAvC;AACAtB,IAAAA,MAAM,CAACC,QAAP,CAAgB6C,KAAhB,CAAsBF,MAAtB,CAA6BmB,QAA7B,CAAsC;AAAE1C,MAAAA,QAAQ,EAAEA;AAAZ,KAAtC;AACAW,IAAAA,IAAI,CAAChC,MAAM,CAACC,QAAR,EAAkB,MAAlB,CAAJ;AACD;AACF;AAED,OAAO,SAASkE,UAAT,CAAoBC,QAApB,EAA8B;AACnC;AACA,MAAI,CAACpE,MAAM,CAACC,QAAZ,EAAsB;AACtB,QAAMoE,YAAY,GAAGrE,MAAM,CAACC,QAA5B;AACA+B,EAAAA,IAAI,CAAChC,MAAM,CAACC,QAAR,CAAJ;AACAqE,EAAAA,OAAO,CAACC,GAAR,CAAYvE,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAlC;AACA,QAAMvB,QAAQ,GACZrB,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6B4B,QAA7B,CAAsCnC,OAAtC,CAA8CoC,cADhD;AAEA,QAAMC,IAAI,GAAGrD,QAAQ,CAClB4C,SADU,CACAC,CAAC,IACZxE,IAAI,CAACqD,MAAL,CAAYmB,CAAC,CAAC7B,OAAF,CAAUM,KAAV,CAAgBK,EAA5B,MAAoCtD,IAAI,CAACqD,MAAL,CAAY/C,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBK,EAAlC,CAFzB,CAAb;;AAGE,MAAIoB,QAAQ,KAAK,IAAjB,EAAuB;AACvB,QAAIM,IAAI,KAAK,CAAb,EAAgB;AAChB,UAAMC,SAAS,GAAGtD,QAAQ,CAACqD,IAAI,GAAG,CAAR,CAAR,CAAmBrC,OAArC;AACA,UAAMuC,aAAa,GAAGlF,IAAI,CAACmF,WAAL,CAAiBF,SAAjB,CAAtB;AACAC,IAAAA,aAAa,CAACE,IAAd,CAAmB9E,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBK,EAAzC;AACA,UAAM+B,gBAAgB,GAAGrF,IAAI,CAACmF,WAAL,CAAiB7E,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAvC,CAAzB;AACAmC,IAAAA,gBAAgB,CAACjB,MAAjB,CAAwBY,IAAxB,EAA8B,CAA9B;AACIC,IAAAA,SAAS,CAACZ,QAAV,CAAoB;AAAE1C,MAAAA,QAAQ,EAAEuD;AAAZ,KAApB;AACAP,IAAAA,YAAY,CAAC1B,KAAb,CAAmBC,MAAnB,CAA0BmB,QAA1B,CAAmC;AAAE1C,MAAAA,QAAQ,EAAE0D;AAAZ,KAAnC;AACA/C,IAAAA,IAAI,CAAC2C,SAAD,CAAJ;AACA3C,IAAAA,IAAI,CAACqC,YAAY,CAAC1B,KAAb,CAAmBC,MAApB,CAAJ;AACD,GAXH,MAWS;AACT,QAAI5C,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BD,KAA7B,CAAmCC,MAAnC,YAAqD9C,KAAzD,EAAgE;AAChE,UAAMuB,QAAQ,GAAGrB,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BD,KAA7B,CAAmCC,MAAnC,CACd4B,QADc,CACLnC,OADK,CACGoC,cADpB;AAEA,UAAMC,IAAI,GAAGrD,QAAQ,CAAC4C,SAAT,CACXC,CAAC,IAAIA,CAAC,CAAC7B,OAAF,CAAUM,KAAV,CAAgBK,EAAhB,KAAuBhD,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BD,KAA7B,CAAmCK,EADpD,CAAb;AAEA,UAAM4B,aAAa,GAAG5E,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BD,KAA7B,CAAmCC,MAAnC,CAA0CE,KAA1C,CAAgDzB,QAAtE;AACAuD,IAAAA,aAAa,CAACd,MAAd,CAAqBY,IAAI,GAAG,CAA5B,EAA+B,CAA/B,EAAkC1E,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBK,EAAxD;AACIhD,IAAAA,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BD,KAA7B,CAAmCC,MAAnC,CAA0CmB,QAA1C,CAAmD;AAAE1C,MAAAA,QAAQ,EAAEuD;AAAZ,KAAnD;AACJ5C,IAAAA,IAAI,CAAChC,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BD,KAA7B,CAAmCC,MAApC,CAAJ;AACA,UAAMoC,cAAc,GAAGtF,IAAI,CAACmF,WAAL,CAAiBR,YAAY,CAAC1B,KAAb,CAAmBC,MAApC,CAAvB;AACAoC,IAAAA,cAAc,CAAClB,MAAf,CAAsBkB,cAAc,CAACf,SAAf,CAAyBC,CAAC,IAC9CA,CAAC,KAAKG,YAAY,CAAC1B,KAAb,CAAmBK,EADL,CAAtB,EACgC,CADhC;AAEAqB,IAAAA,YAAY,CAAC1B,KAAb,CAAmBC,MAAnB,CAA0BmB,QAA1B,CAAmC;AAAE1C,MAAAA,QAAQ,EAAE2D;AAAZ,KAAnC;AACAhD,IAAAA,IAAI,CAACqC,YAAY,CAAC1B,KAAb,CAAmBC,MAApB,CAAJ;AACD;AACF;AAED,OAAO,SAASqC,QAAT,CAAkBC,SAAlB,EAA6B;AAClC,MAAI,CAAClF,MAAM,CAACC,QAAZ,EAAsB;AACtB,MAAIoB,QAAJ;;AACA,MAAIrB,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BC,eAAjC,EAAkD;AAChDxB,IAAAA,QAAQ,GAAGrB,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BC,eAA7B,CAA6CsC,MAA7C,EAAX;AACD,GAFD,MAEO;AACL9D,IAAAA,QAAQ,GAAGrB,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BE,KAA7B,CAAmCzB,QAA9C;AACD;;AACD,MAAI+D,aAAa,GACf/D,QAAQ,CAAC4C,SAAT,CAAmBC,CAAC,IAAIA,CAAC,KAAKlE,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBK,EAApD,CADF;AAEA,MAAIoC,aAAa,KAAK,CAAlB,IAAuBF,SAAS,KAAK,CAAC,CAA1C,EAA6C,OAA7C,KACK,IAAIE,aAAa,KAAK/D,QAAQ,CAACgE,MAA3B,IACJH,SAAS,KAAK,CADd,EACiB;AACtB,MAAII,eAAJ;;AACA,MAAIJ,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpBI,IAAAA,eAAe,GAAGjE,QAAQ,CAACkE,KAAT,CAAe,CAAf,EAAkBH,aAAlB,EAAiCI,OAAjC,EAAlB;AACD,GAFD,MAEO;AACLF,IAAAA,eAAe,GAAGjE,QAAQ,CAACkE,KAAT,CAAeH,aAAa,GAAG,CAA/B,CAAlB;AACD;;AACD,MAAIK,WAAJ;;AACA,MAAIzF,MAAM,CAACc,IAAP,CAAY4C,QAAZ,CAAqBgC,YAArB,KAAsC,cAA1C,EAA0D;AACxDD,IAAAA,WAAW,GAAG,CAACH,eAAe,CAACrB,SAAhB,CAA0BC,CAAC,IACxClE,MAAM,CAACc,IAAP,CAAYC,KAAZ,CAAkBrB,IAAI,CAACqD,MAAL,CAAYmB,CAAZ,CAAlB,EAAkClD,IAAlC,CAAuCC,QAAvC,KAAoD,UADvC,IACqD,CADtD,IAC2DiE,SADzE;AAED,GAHD,MAGO;AACLO,IAAAA,WAAW,GAAG,IAAIP,SAAlB;AACD;;AACD,QAAMS,UAAU,GAAGtE,QAAQ,CAACyC,MAAT,CAAgBsB,aAAhB,EAA+B,CAA/B,EAAkC,CAAlC,CAAnB;AACA/D,EAAAA,QAAQ,CAACyC,MAAT,CAAgBsB,aAAa,GAAGK,WAAhC,EAA6C,CAA7C,EAAgDE,UAAhD;AACA3F,EAAAA,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAtB,CAA6BmB,QAA7B,CAAsC;AAAE1C,IAAAA,QAAQ,EAAEA;AAAZ,GAAtC;AACAW,EAAAA,IAAI,CAAChC,MAAM,CAACC,QAAP,CAAgB0C,KAAhB,CAAsBC,MAAvB,EAA+B,MAA/B,CAAJ;AACD;AAED,OAAO,SAASgD,QAAT,CAAkBrF,IAAlB,EAAwB;AAC7B,MAAI,CAACP,MAAM,CAACC,QAAZ,EAAsB;AACpB4F,IAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AACD,MAAItF,IAAI,KAAK,SAAT,IAAsBb,IAAI,CAACoG,QAAL,CAAc9F,MAAM,CAACC,QAArB,EAA+B0C,KAA/B,CAAqCK,EAArC,KAA4C,MAAtE,EAA8E;AAC5E6C,IAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AACD,MAAIE,eAAe,GAAG,EAAtB;AACA,MAAIlD,eAAe,GAAGnD,IAAI,CAACsG,OAAL,CAAahG,MAAM,CAACC,QAApB,EAA8B4C,eAApD;;AACA,WAASoD,aAAT,CAAuBzD,IAAvB,EAA6B;AAC3B,SAAK,IAAI0B,CAAT,IAAc1B,IAAI,CAACgC,QAAL,CAAcnC,OAAd,CAAsBoC,cAApC,EAAoD;AAClDwB,MAAAA,aAAa,CAAC/B,CAAC,CAAC7B,OAAH,CAAb;;AACA,UAAI6B,CAAC,CAAC7B,OAAF,CAAUS,KAAV,CAAgB9B,IAAhB,CAAqBC,QAArB,KAAkC,UAAtC,EAAkD;AAChD,YAAIV,IAAI,KAAK,OAAb,EAAsB;AACpB2D,UAAAA,CAAC,CAAC7B,OAAF,CAAU6D,cAAV;AACAhC,UAAAA,CAAC,CAAC7B,OAAF,CAAUJ,cAAV,CAAyB;AAACC,YAAAA,MAAM,EAAEC;AAAT,WAAzB,EAA8C,MAA9C;AACAH,UAAAA,IAAI,CAACkC,CAAC,CAAC7B,OAAH,CAAJ;AACD,SAJD,MAIO,IAAI9B,IAAI,KAAK,SAAT,IACT2D,CAAC,CAAC7B,OAAF,CAAUM,KAAV,CAAgBK,EAAhB,CAAmBmD,MAAnB,CAA0B,CAA1B,MAAiC,GAD5B,EACiC;AACtCJ,UAAAA,eAAe,CAACjB,IAAhB,CAAqBZ,CAAC,CAAC7B,OAAF,CAAUM,KAAV,CAAgBK,EAArC;AACAH,UAAAA,eAAe,CAACiB,MAAhB,CAAuBjB,eAAe,CACnCoB,SADoB,CACVmC,CAAC,IAAIA,CAAC,KAAKlC,CAAC,CAAC7B,OAAF,CAAUM,KAAV,CAAgBK,EADjB,CAAvB,EAC6C,CAD7C;AAED;AACF;AACF;AACF;;AACDiD,EAAAA,aAAa,CAACvG,IAAI,CAACsG,OAAL,CAAahG,MAAM,CAACC,QAApB,CAAD,CAAb;;AACA,MAAIM,IAAI,KAAK,SAAb,EAAwB;AACtB,UAAM8F,QAAQ,GAAG,IAAI3F,IAAJ,CAAShB,IAAI,CAACsG,OAAL,CAAahG,MAAM,CAACC,QAApB,EAA8B6C,KAA9B,CAAoC1B,KAA7C,CAAjB;AACAiF,IAAAA,QAAQ,CAACC,OAAT,CAAiBD,QAAQ,CAACE,OAAT,KAAqB,CAAtC;AACA7G,IAAAA,IAAI,CAACsG,OAAL,CAAahG,MAAM,CAACC,QAApB,EAA8B8D,QAA9B,CAAuC;AACrC1C,MAAAA,QAAQ,EAAEwB;AAD2B,KAAvC;AAGAb,IAAAA,IAAI,CAACtC,IAAI,CAACsG,OAAL,CAAahG,MAAM,CAACC,QAApB,CAAD,CAAJ;AACAR,IAAAA,OAAO,CAAC+G,UAAR,CAAmBH,QAAQ,CAACI,YAAT,EAAnB;AACA1E,IAAAA,UAAU,CAAC,MAAM;AACf/B,MAAAA,MAAM,CAACC,QAAP,CAAgB8D,QAAhB,CACE;AAAE1C,QAAAA,QAAQ,EAAErB,MAAM,CAACC,QAAP,CAAgB4C,eAAhB,CAAgCsC,MAAhC,CAAuCY,eAAvC;AAAZ,OADF;AAEA/D,MAAAA,IAAI,CAAChC,MAAM,CAACC,QAAR,CAAJ;AACD,KAJS,EAIP,GAJO,CAAV;AAKD;AACF","sourcesContent":["import * as display from '../display/display';\nimport * as util from '../util/util';\nimport Task from '../../components/Task/Task';\nimport List from '../../components/List/List';\nimport TaskList from '../../components/TaskList/TaskList';\nimport Frame from '../../components/Frame/Frame';\n\nexport function deleteTask() {\n  if (window.selected && window.selected instanceof Task) {\n    window.undoData = localStorage.getItem('data');\n    window.selected.deleteThis();\n  }\n}\n\nexport function newTask(type) {\n  // create new task after window.selected\n  if (!window.selected || window.preventReturn) return;\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = String(now);\n  window.data.tasks[newTask] = {\n    info: { complete: '', startDate: '', endDate: '' },\n    title: '',\n    subtasks: [],\n  };\n  window.copiedTask = newTask;\n  pasteTask(type);\n}\n\nexport function selectTask(el, force) {\n  if (window.getSelection) {\n    if (window.getSelection().empty) {  // Chrome\n      window.getSelection().empty();\n    } else if (window.getSelection().removeAllRanges) {  // Firefox\n      window.getSelection().removeAllRanges();\n    }\n  }\n  // make this task window.selected\n  if (window.preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  window.preventSelect = true;\n  setTimeout(function () { window.preventSelect = false }, 100);\n  if (window.selected) {\n    save(window.selected, 'task');\n  }\n  if (window.selected === el && !force) {\n    return;\n  }\n  if (window.selected instanceof Task && window.selected !== el) {\n    window.selected.displayOptions({ target: undefined }, 'hide');\n  }\n  window.selected = el;\n  if (el instanceof Task) {\n    el.editBar.current.focus();\n  } else if (el instanceof List) {\n    el.listInput.current.focus();\n  }\n}\n\nexport function save(task, saveType) {\n  // save the new window.data\n  var saveObject;\n  if (saveType === 'list') {\n    saveObject = task.props.parent;\n  } else {\n    saveObject = task;\n  }\n  var subtasks;\n  if (saveObject.subtasksCurrent) subtasks = saveObject.subtasksCurrent;\n  else subtasks = saveObject.state.subtasks;\n  window.data.tasks[util.stripR(saveObject.props.id)] = {\n    title: saveObject.state.title,\n    info: saveObject.state.info, subtasks: subtasks\n  };\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\n\nexport function undo() {\n  localStorage.setItem('data', window.undoData);\n  setTimeout(() => window.location.reload(), 500);\n}\n\nexport function saveSetting(setting, value) {\n  window.data.settings[setting] = value;\n  localStorage.setItem('data', JSON.stringify(window.data));\n}\n\nexport function cutTask() {\n  if (!window.selected || window.selected instanceof List) return;\n  copyTask();\n  window.selected.deleteThis(false);\n  window.undoData = localStorage.getItem('data');\n}\n\nexport function copyTask(mirror) {\n  if (!window.selected || window.selected instanceof List) return;\n  save(window.selected);\n  if (mirror) {\n    window.copiedTask = window.selected.props.id;\n  } else {\n    // only copy window.data\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = String(now);\n    window.data.tasks[newTask] = { ...window.data.tasks[util.stripR(window.selected.props.id)] };\n    window.copiedTask = newTask;\n  }\n}\n\nexport function pasteTask(type) {\n  if (!window.selected || !window.copiedTask) return;\n  window.undoData = localStorage.getItem('data');\n  if (window.selected instanceof List || type === 'task') {\n    const subtasks = window.selected.state.subtasks;\n    subtasks.splice(0, 0, window.copiedTask);\n    window.selected.setState({ subtasks: subtasks });\n    save(window.selected, 'task');\n  } else if (window.selected instanceof Task || type === 'list') {\n    const subtasks = window.selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x === window.selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, window.copiedTask);\n    window.selected.state.parent.setState({ subtasks: subtasks });\n    save(window.selected, 'list');\n  }\n}\n\nexport function indentTask(unindent) {\n  // umm fix sometime\n  if (!window.selected) return;\n  const lastSelected = window.selected;\n  save(window.selected);\n  console.log(window.selected.props.parent);\n  const subtasks =\n    window.selected.props.parent.taskList.current.subtaskObjects;\n  const here = subtasks\n    .findIndex(x => \n    util.stripR(x.current.props.id) === util.stripR(window.selected.props.id));\n    if (unindent !== true) {\n    if (here === 0) return;\n    const taskAbove = subtasks[here - 1].current;\n    const theseSubtasks = util.getSubtasks(taskAbove);\n    theseSubtasks.push(window.selected.props.id);\n    const previousSubtasks = util.getSubtasks(window.selected.props.parent);\n    previousSubtasks.splice(here, 1);\n        taskAbove.setState( { subtasks: theseSubtasks });\n        lastSelected.props.parent.setState({ subtasks: previousSubtasks });\n        save(taskAbove);\n        save(lastSelected.props.parent);\n      } else {\n    if (window.selected.props.parent.props.parent instanceof Frame) return;\n    const subtasks = window.selected.props.parent.props.parent\n      .taskList.current.subtaskObjects;\n    const here = subtasks.findIndex(\n      x => x.current.props.id === window.selected.props.parent.props.id);\n    const theseSubtasks = window.selected.props.parent.props.parent.state.subtasks;\n    theseSubtasks.splice(here + 1, 0, window.selected.props.id);\n        window.selected.props.parent.props.parent.setState({ subtasks: theseSubtasks });\n    save(window.selected.props.parent.props.parent);\n    const parentSubtasks = util.getSubtasks(lastSelected.props.parent);\n    parentSubtasks.splice(parentSubtasks.findIndex(x => \n      x === lastSelected.props.id), 1);\n    lastSelected.props.parent.setState({ subtasks: parentSubtasks });\n    save(lastSelected.props.parent);\n  }\n}\n\nexport function moveTask(direction) {\n  if (!window.selected) return;\n  var subtasks;\n  if (window.selected.props.parent.subtasksCurrent) {\n    subtasks = window.selected.props.parent.subtasksCurrent.concat();\n  } else {\n    subtasks = window.selected.props.parent.state.subtasks;\n  }\n  let selectedPlace =\n    subtasks.findIndex(x => x === window.selected.props.id);\n  if (selectedPlace === 0 && direction === -1) return;\n  else if (selectedPlace === subtasks.length\n    && direction === 1) return;\n  var subtasksChopped;\n  if (direction === -1) {\n    subtasksChopped = subtasks.slice(0, selectedPlace).reverse();\n  } else {\n    subtasksChopped = subtasks.slice(selectedPlace + 1);\n  }\n  var insertPlace;\n  if (window.data.settings.hideComplete === 'hideComplete') {\n    insertPlace = (subtasksChopped.findIndex(x =>\n      window.data.tasks[util.stripR(x)].info.complete !== 'complete') + 1) * direction;\n  } else {\n    insertPlace = 1 * direction;\n  }\n  const spliceTask = subtasks.splice(selectedPlace, 1)[0];\n  subtasks.splice(selectedPlace + insertPlace, 0, spliceTask);\n  window.selected.props.parent.setState({ subtasks: subtasks });\n  save(window.selected.props.parent, 'task');\n}\n\nexport function listEdit(type) {\n  if (!window.selected) {\n    alert('select a list');\n    return;\n  }\n  if (type === 'migrate' && util.getFrame(window.selected).props.id === 'bank') {\n    alert('select a date');\n    return;\n  }\n  var incompleteTasks = [];\n  var subtasksCurrent = util.getList(window.selected).subtasksCurrent;\n  function addIncomplete(task) {\n    for (let x of task.taskList.current.subtaskObjects) {\n      addIncomplete(x.current);\n      if (x.current.state.info.complete !== 'complete') {\n        if (type === 'clear') {\n          x.current.toggleComplete();\n          x.current.displayOptions({target: undefined}, 'hide');\n          save(x.current);\n        } else if (type === 'migrate' && \n          x.current.props.id.charAt(0) !== 'R') {\n          incompleteTasks.push(x.current.props.id);\n          subtasksCurrent.splice(subtasksCurrent\n            .findIndex(y => y === x.current.props.id), 1);\n        }\n      }\n    }\n  }\n  addIncomplete(util.getList(window.selected));\n  if (type === 'migrate') {\n    const tomorrow = new Date(util.getList(window.selected).state.title);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    util.getList(window.selected).setState({\n      subtasks: subtasksCurrent\n    });\n    save(util.getList(window.selected));\n    display.searchDate(tomorrow.toDateString());\n    setTimeout(() => {\n      window.selected.setState(\n        { subtasks: window.selected.subtasksCurrent.concat(incompleteTasks) });\n      save(window.selected);\n    }, 500);\n  }\n}"]},"metadata":{},"sourceType":"module"}