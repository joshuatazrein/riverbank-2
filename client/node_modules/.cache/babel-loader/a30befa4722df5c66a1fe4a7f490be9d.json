{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'second',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {}\n};\nvar data = !localStorage.getItem('data') ? {\n  resetData\n} : JSON.parse(localStorage.getItem('data')); // var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: ''\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container ' + this.state.hideComplete,\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          id: \"bank\",\n          info: data['river'].info,\n          subtasks: data['bank'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Frame, {\n          id: \"river\",\n          info: data['river'].info,\n          subtasks: data['river'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass StatusBar extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button ' + this.props.parent.state.hideComplete,\n          onClick: () => {\n            console.log(this.props.parent);\n            this.props.parent.toggleComplete();\n          },\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  startTimer(val) {\n    this.setState({\n      minutes: this.state.minutes + val,\n      seconds: 0\n    });\n\n    if (!this.interval) {\n      setTimeout(this.play, 100);\n    }\n  }\n\n  play(stopwatch) {\n    clearInterval(this.interval);\n\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({\n            minutes: this.state.minutes + 1,\n            seconds: 0\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds + 1\n          });\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n          }\n\n          this.setState({\n            minutes: this.state.minutes - 1,\n            seconds: 59\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  end() {\n    alert('timer complete');\n  }\n\n  playPause() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    } else {\n      this.play();\n    }\n  }\n\n  render() {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: () => this.startTimer(50),\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: () => this.startTimer(25),\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: () => this.startTimer(10),\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: () => this.startTimer(5),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: () => this.startTimer(1),\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: () => this.playPause(),\n          children: \"STOP/START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"timerBar\",\n        value: this.state.minutes + ':' + String(this.state.seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: '',\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this); // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          id: x.id,\n          title: x.title,\n          subtasks: x.subtasks,\n          parent: this\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: tasksListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n  }\n\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        startDate: ev.target.value\n      }\n    }));\n  }\n\n  changeEndDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        endDate: ev.target.value\n      }\n    }));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(function () {\n      preventSelect = false;\n    }, 500);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && this.state.info.endDate.length > 0 ? 'event' : ''; // task with info and subtasks\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass + ' ' + hasTimes + ' ' + this.state.info.collapsed,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.complete,\n            onClick: this.toggleComplete,\n            children: \"\\u221A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.important,\n            onClick: this.toggleImportant,\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.maybe,\n            onClick: this.toggleMaybe,\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: this.deleteThis,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: () => {\n              newTask('task');\n              this.displayOptions('hide');\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput startDate\",\n            value: this.state.info.startDate,\n            onChange: ev => this.changeStartDate(ev),\n            ref: this.startDateSpan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput endDate\",\n            value: this.state.info.endDate,\n            onChange: ev => this.changeEndDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          ref: this.taskList,\n          subtasks: this.state.subtasks,\n          parent: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n\n  if (selected == el) {\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 567,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();","map":{"version":3,"sources":["/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","ReactDOM","$","render","resetData","bank","info","index","subtasks","id","title","river","settings","data","localStorage","getItem","JSON","parse","selected","preventSelect","copiedTask","width","prevWidth","App","Component","constructor","props","state","hideComplete","toggleComplete","setState","StatusBar","newTask","cutTask","copyTask","pasteTask","parent","console","log","Timer","minutes","seconds","startTimer","val","interval","setTimeout","play","stopwatch","clearInterval","setInterval","end","alert","playPause","bind","String","padStart","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","changeIndex","newIndex","prevState","now","Date","i","length","push","getTime","endIndex","addEventListener","div","slice","map","x","List","taskList","createRef","changeTitle","ev","target","value","selectThis","selectTask","TaskList","addTask","tasksListed","task","Task","displayOptions","startDate","endDate","showHide","hasClass","editHeight","heightSpan","current","offsetHeight","changeStartDate","changeEndDate","status","complete","toggleImportant","important","maybe","toggleMaybe","deleteThis","currentTask","findIndex","splice","componentDidMount","editBar","focus","optionsButton","startDateSpan","headingClass","hasTimes","collapsed","height","editWidth","type","el","today","save","undefined","saveType","parents","reverse","parentObject","parentId","find","setItem","stringify","concat","insertIndex","keyComms","ctrlKey","shiftKey","key","metaKey","altKey","preventDefault","document","activeElement","blur","init","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:'1', title: 'second', subtasks: [], info: {}}\n    ]}, \n  settings: {}\n};\n\nvar data = !localStorage.getItem('data') ? { resetData } :\n  JSON.parse(localStorage.getItem('data'));\n\n// var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: ''};\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  render() {\n    return (\n      <div className='statusBar'>\n        <input className='searchBar'></input>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              console.log(this.props.parent);\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    if (!this.interval) {\n      setTimeout(this.play, 100);\n    }\n  }\n  play(stopwatch) {\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: this.state.minutes + 1, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000)\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n          }\n          this.setState({minutes: this.state.minutes - 1, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000)\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    } else {\n      this.play();\n    }\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    return (\n      <div>\n        <div class='buttonBar'>\n          <button class='button' onClick={() => this.startTimer(50)}>50</button>\n          <button class='button' onClick={() => this.startTimer(25)}>25</button>\n          <button class='button' onClick={() => this.startTimer(10)}>10</button>\n          <button class='button' onClick={() => this.startTimer(5)}>5</button>\n          <button class='button' onClick={() => this.startTimer(1)}>1</button>\n          <button class='button' onClick={() => this.playPause()}>STOP/START</button>\n        </div>\n        <input className='timerBar' \n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: '', subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n          return (\n            <List key={x.id} id={x.id} title={x.title}\n              subtasks={x.subtasks} parent={this} />\n          )\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        <input \n          className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, startDate: ev.target.value}})); \n  }\n  changeEndDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, endDate: ev.target.value}})); \n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(function () {preventSelect = false}, 500);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <button \n              className={'button ' + this.state.info.complete}\n              onClick={this.toggleComplete}>\n              √</button>\n            <button \n              className={'button ' + this.state.info.important}\n              onClick={this.toggleImportant}>\n              !</button>\n            <button \n              className={'button ' + this.state.info.maybe}\n              onClick={this.toggleMaybe}>\n              ?</button>\n            <button \n              className={'button'}\n              onClick={this.deleteThis}>\n              x</button>\n            <button \n              className={'button'}\n              onClick={() => {\n                newTask('task');\n                this.displayOptions('hide');\n              }}>\n              +</button>\n            <input className='optionsInput startDate' \n              value={this.state.info.startDate} \n              onChange={(ev) => this.changeStartDate(ev)}\n              ref={this.startDateSpan}>\n            </input>\n            <input className='optionsInput endDate' \n              value={this.state.info.endDate} \n              onChange={(ev) => this.changeEndDate(ev)}>\n            </input>\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <ul>\n          <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n            parent={this} />\n        </ul>\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  if (selected == el) {\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render(<App />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}