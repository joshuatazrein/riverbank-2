{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/Frame/Frame.js\";\nimport React from 'react';\nimport './Frame.css';\nimport * as display from '../../services/display/display';\nimport * as util from '../../services/util/util';\nimport List from '../List/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Frame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addList = () => {\n      // add a new list\n      var title;\n\n      if (this.props.id === 'river') {\n        const lastDate = new Date(window.data.tasks[this.state.subtasks[this.state.subtasks.length - 1]].title);\n        title = lastDate.toDateString();\n      } else {\n        title = '--';\n      }\n\n      const subtasks = this.state.subtasks;\n      const id = String(new Date().getTime());\n      window.data.tasks[id] = {\n        title: title,\n        subtasks: [],\n        info: {}\n      };\n      subtasks.push(id);\n      this.setState({\n        subtasks: subtasks\n      });\n    };\n\n    this.changeIndex = (val, set) => {\n      let newIndex;\n\n      if (set === true) {\n        newIndex = val;\n      } else {\n        newIndex = this.state.info.index + val;\n      }\n\n      if (newIndex > 0 && window.data.tasks[this.state.subtasks[newIndex - 1]].title === '--') {\n        return;\n      }\n\n      if (set !== undefined && newIndex > this.state.info.index && this.props.id === 'bank') {\n        newIndex -= this.state.width - 1;\n      }\n\n      if (newIndex < 0) newIndex = 0;\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          index: newIndex\n        }\n      }));\n    };\n\n    this.state = {\n      subtasks: props.subtasks,\n      info: props.info,\n      width: display.processWidth(props.info.focused),\n      zoomed: ''\n    };\n\n    if (props.id === 'river') {\n      this.state.repeats = window.data.settings.repeats;\n    }\n  }\n\n  render() {\n    var resizeCheck = () => {\n      if (this.state.width !== display.processWidth(this.state.info.focused)) {\n        this.setState({\n          width: display.processWidth(this.state.info.focused)\n        });\n      }\n    };\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck); // const shownLists =\n    //   this.state.subtasks.slice(this.state.info.index, endIndex);\n\n    const shownLists = this.state.subtasks;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `frameContainer \n        ${this.state.info.focused} ${this.state.zoomed}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: this.props.id,\n        className: 'frame',\n        children: [shownLists.map(x => {\n          this.frames.push( /*#__PURE__*/React.createRef());\n          const task = window.data.tasks[x];\n\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return /*#__PURE__*/_jsxDEV(List, {\n              id: x,\n              title: task.title,\n              subtasks: task.subtasks,\n              parent: this,\n              deadlines: this.props.deadlines[task.title],\n              startdates: this.props.startdates[task.title],\n              repeats: this.state.repeats[util.dateFormat(task.title).slice(0, 3)],\n              ref: this.frames[this.frames.length - 1]\n            }, x, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(List, {\n              id: x,\n              title: task.title,\n              subtasks: task.subtasks,\n              parent: this,\n              ref: this.frames[this.frames.length - 1]\n            }, x, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"changeButton\",\n          onClick: () => this.addList(),\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/Frame/Frame.js"],"names":["React","display","util","List","Frame","Component","constructor","props","addList","title","id","lastDate","Date","window","data","tasks","state","subtasks","length","toDateString","String","getTime","info","push","setState","changeIndex","val","set","newIndex","index","undefined","width","prevState","processWidth","focused","zoomed","repeats","settings","render","resizeCheck","endIndex","frames","addEventListener","shownLists","map","x","createRef","task","deadlines","startdates","dateFormat","slice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Frame.css';\nimport * as display from '../../services/display/display';\nimport * as util from '../../services/util/util';\nimport List from '../List/List';\n\nexport default class Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtasks: props.subtasks, info: props.info,\n      width: display.processWidth(props.info.focused),\n      zoomed: '',\n    };\n    if (props.id === 'river') {\n      this.state.repeats = window.data.settings.repeats;\n    }\n  }\n  addList = () => {\n    // add a new list\n    var title;\n    if (this.props.id === 'river') {\n      const lastDate = new Date(\n        window.data.tasks[this.state.subtasks[this.state.subtasks.length - 1]].title);\n      title = lastDate.toDateString();\n    } else {\n      title = '--';\n    }\n\n    const subtasks = this.state.subtasks;\n    const id = String(new Date().getTime());\n    window.data.tasks[id] = {\n      title: title, subtasks: [], info: {}\n    }\n    subtasks.push(id);\n    this.setState({subtasks: subtasks});\n  }\n  \n  changeIndex = (val, set) => {\n    let newIndex;\n    if (set === true) {\n      newIndex = val;\n    } else {\n      newIndex = this.state.info.index + val;\n    }\n    if (newIndex > 0 &&\n      window.data.tasks[this.state.subtasks[newIndex - 1]].title === '--') {\n      return;\n    }\n    if (\n      set !== undefined && \n      newIndex > this.state.info.index && \n      this.props.id === 'bank'\n    ) {\n      newIndex -= (this.state.width - 1);\n    }\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info, index: newIndex }\n    }));\n  }\n  render() {\n    var resizeCheck = () => {\n      if (this.state.width !== display.processWidth(this.state.info.focused)) {\n        this.setState({ width: display.processWidth(this.state.info.focused) });\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck);\n    // const shownLists =\n    //   this.state.subtasks.slice(this.state.info.index, endIndex);\n    const shownLists = this.state.subtasks;\n    return (\n      <div className={`frameContainer \n        ${this.state.info.focused} ${this.state.zoomed}`}>\n        <div id={this.props.id}\n          className={'frame'}>\n          {shownLists.map(x => {\n            this.frames.push(React.createRef());\n            const task = window.data.tasks[x];\n            if (this.props.id === 'river') {\n              // render state correctly in original lists\n              return (\n                <List key={x} id={x} title={task.title}\n                  subtasks={task.subtasks} parent={this}\n                  deadlines={this.props.deadlines[task.title]}\n                  startdates={this.props.startdates[task.title]}\n                  repeats={this.state.repeats[util.dateFormat(task.title)\n                    .slice(0, 3)]}\n                  ref={this.frames[this.frames.length - 1]} />\n              )\n            } else {\n              return (\n                <List key={x} id={x} title={task.title}\n                  subtasks={task.subtasks} parent={this}\n                  ref={this.frames[this.frames.length - 1]} />\n              )\n            }\n          })}\n          <button className='changeButton'\n            onClick={() => this.addList()}>&gt;</button>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}