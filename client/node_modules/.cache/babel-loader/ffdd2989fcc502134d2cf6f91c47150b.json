{"ast":null,"code":"'use strict';\n\nvar BuiltinModule = require('module'); // Guard against poorly mocked module constructors\n\n\nvar Module = module.constructor.length > 1 ? module.constructor : BuiltinModule;\n\nvar nodePath = require('path');\n\nvar modulePaths = [];\nvar moduleAliases = {};\nvar moduleAliasNames = [];\nvar oldNodeModulePaths = Module._nodeModulePaths;\n\nModule._nodeModulePaths = function (from) {\n  var paths = oldNodeModulePaths.call(this, from); // Only include the module path for top-level modules\n  // that were not installed:\n\n  if (from.indexOf('node_modules') === -1) {\n    paths = modulePaths.concat(paths);\n  }\n\n  return paths;\n};\n\nvar oldResolveFilename = Module._resolveFilename;\n\nModule._resolveFilename = function (request, parentModule, isMain, options) {\n  for (var i = moduleAliasNames.length; i-- > 0;) {\n    var alias = moduleAliasNames[i];\n\n    if (isPathMatchesAlias(request, alias)) {\n      var aliasTarget = moduleAliases[alias]; // Custom function handler\n\n      if (typeof moduleAliases[alias] === 'function') {\n        var fromPath = parentModule.filename;\n        aliasTarget = moduleAliases[alias](fromPath, request, alias);\n\n        if (!aliasTarget || typeof aliasTarget !== 'string') {\n          throw new Error('[module-alias] Expecting custom handler function to return path.');\n        }\n      }\n\n      request = nodePath.join(aliasTarget, request.substr(alias.length)); // Only use the first match\n\n      break;\n    }\n  }\n\n  return oldResolveFilename.call(this, request, parentModule, isMain, options);\n};\n\nfunction isPathMatchesAlias(path, alias) {\n  // Matching /^alias(\\/|$)/\n  if (path.indexOf(alias) === 0) {\n    if (path.length === alias.length) return true;\n    if (path[alias.length] === '/') return true;\n  }\n\n  return false;\n}\n\nfunction addPathHelper(path, targetArray) {\n  path = nodePath.normalize(path);\n\n  if (targetArray && targetArray.indexOf(path) === -1) {\n    targetArray.unshift(path);\n  }\n}\n\nfunction removePathHelper(path, targetArray) {\n  if (targetArray) {\n    var index = targetArray.indexOf(path);\n\n    if (index !== -1) {\n      targetArray.splice(index, 1);\n    }\n  }\n}\n\nfunction addPath(path) {\n  var parent;\n  path = nodePath.normalize(path);\n\n  if (modulePaths.indexOf(path) === -1) {\n    modulePaths.push(path); // Enable the search path for the current top-level module\n\n    var mainModule = getMainModule();\n\n    if (mainModule) {\n      addPathHelper(path, mainModule.paths);\n    }\n\n    parent = module.parent; // Also modify the paths of the module that was used to load the\n    // app-module-paths module and all of it's parents\n\n    while (parent && parent !== mainModule) {\n      addPathHelper(path, parent.paths);\n      parent = parent.parent;\n    }\n  }\n}\n\nfunction addAliases(aliases) {\n  for (var alias in aliases) {\n    addAlias(alias, aliases[alias]);\n  }\n}\n\nfunction addAlias(alias, target) {\n  moduleAliases[alias] = target; // Cost of sorting is lower here than during resolution\n\n  moduleAliasNames = Object.keys(moduleAliases);\n  moduleAliasNames.sort();\n}\n/**\n * Reset any changes maded (resets all registered aliases\n * and custom module directories)\n * The function is undocumented and for testing purposes only\n */\n\n\nfunction reset() {\n  var mainModule = getMainModule(); // Reset all changes in paths caused by addPath function\n\n  modulePaths.forEach(function (path) {\n    if (mainModule) {\n      removePathHelper(path, mainModule.paths);\n    } // Delete from require.cache if the module has been required before.\n    // This is required for node >= 11\n\n\n    Object.getOwnPropertyNames(require.cache).forEach(function (name) {\n      if (name.indexOf(path) !== -1) {\n        delete require.cache[name];\n      }\n    });\n    var parent = module.parent;\n\n    while (parent && parent !== mainModule) {\n      removePathHelper(path, parent.paths);\n      parent = parent.parent;\n    }\n  });\n  modulePaths = [];\n  moduleAliases = {};\n  moduleAliasNames = [];\n}\n/**\n * Import aliases from package.json\n * @param {object} options\n */\n\n\nfunction init(options) {\n  if (typeof options === 'string') {\n    options = {\n      base: options\n    };\n  }\n\n  options = options || {};\n  var candidatePackagePaths;\n\n  if (options.base) {\n    candidatePackagePaths = [nodePath.resolve(options.base.replace(/\\/package\\.json$/, ''))];\n  } else {\n    // There is probably 99% chance that the project root directory in located\n    // above the node_modules directory,\n    // Or that package.json is in the node process' current working directory (when\n    // running a package manager script, e.g. `yarn start` / `npm run start`)\n    candidatePackagePaths = [nodePath.join(__dirname, '../..'), process.cwd()];\n  }\n\n  var npmPackage;\n  var base;\n\n  for (var i in candidatePackagePaths) {\n    try {\n      base = candidatePackagePaths[i];\n      npmPackage = require(nodePath.join(base, 'package.json'));\n      break;\n    } catch (e) {// noop\n    }\n  }\n\n  if (typeof npmPackage !== 'object') {\n    var pathString = candidatePackagePaths.join(',\\n');\n    throw new Error('Unable to find package.json in any of:\\n[' + pathString + ']');\n  } //\n  // Import aliases\n  //\n\n\n  var aliases = npmPackage._moduleAliases || {};\n\n  for (var alias in aliases) {\n    if (aliases[alias][0] !== '/') {\n      aliases[alias] = nodePath.join(base, aliases[alias]);\n    }\n  }\n\n  addAliases(aliases); //\n  // Register custom module directories (like node_modules)\n  //\n\n  if (npmPackage._moduleDirectories instanceof Array) {\n    npmPackage._moduleDirectories.forEach(function (dir) {\n      if (dir === 'node_modules') return;\n      var modulePath = nodePath.join(base, dir);\n      addPath(modulePath);\n    });\n  }\n}\n\nfunction getMainModule() {\n  return require.main._simulateRepl ? undefined : require.main;\n}\n\nmodule.exports = init;\nmodule.exports.addPath = addPath;\nmodule.exports.addAlias = addAlias;\nmodule.exports.addAliases = addAliases;\nmodule.exports.isPathMatchesAlias = isPathMatchesAlias;\nmodule.exports.reset = reset;","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/node_modules/module-alias/index.js"],"names":["BuiltinModule","require","Module","module","constructor","length","nodePath","modulePaths","moduleAliases","moduleAliasNames","oldNodeModulePaths","_nodeModulePaths","from","paths","call","indexOf","concat","oldResolveFilename","_resolveFilename","request","parentModule","isMain","options","i","alias","isPathMatchesAlias","aliasTarget","fromPath","filename","Error","join","substr","path","addPathHelper","targetArray","normalize","unshift","removePathHelper","index","splice","addPath","parent","push","mainModule","getMainModule","addAliases","aliases","addAlias","target","Object","keys","sort","reset","forEach","getOwnPropertyNames","cache","name","init","base","candidatePackagePaths","resolve","replace","__dirname","process","cwd","npmPackage","e","pathString","_moduleAliases","_moduleDirectories","Array","dir","modulePath","main","_simulateRepl","undefined","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nvar BuiltinModule = require('module')\n\n// Guard against poorly mocked module constructors\nvar Module = module.constructor.length > 1\n  ? module.constructor\n  : BuiltinModule\n\nvar nodePath = require('path')\n\nvar modulePaths = []\nvar moduleAliases = {}\nvar moduleAliasNames = []\n\nvar oldNodeModulePaths = Module._nodeModulePaths\nModule._nodeModulePaths = function (from) {\n  var paths = oldNodeModulePaths.call(this, from)\n\n  // Only include the module path for top-level modules\n  // that were not installed:\n  if (from.indexOf('node_modules') === -1) {\n    paths = modulePaths.concat(paths)\n  }\n\n  return paths\n}\n\nvar oldResolveFilename = Module._resolveFilename\nModule._resolveFilename = function (request, parentModule, isMain, options) {\n  for (var i = moduleAliasNames.length; i-- > 0;) {\n    var alias = moduleAliasNames[i]\n    if (isPathMatchesAlias(request, alias)) {\n      var aliasTarget = moduleAliases[alias]\n      // Custom function handler\n      if (typeof moduleAliases[alias] === 'function') {\n        var fromPath = parentModule.filename\n        aliasTarget = moduleAliases[alias](fromPath, request, alias)\n        if (!aliasTarget || typeof aliasTarget !== 'string') {\n          throw new Error('[module-alias] Expecting custom handler function to return path.')\n        }\n      }\n      request = nodePath.join(aliasTarget, request.substr(alias.length))\n      // Only use the first match\n      break\n    }\n  }\n\n  return oldResolveFilename.call(this, request, parentModule, isMain, options)\n}\n\nfunction isPathMatchesAlias (path, alias) {\n  // Matching /^alias(\\/|$)/\n  if (path.indexOf(alias) === 0) {\n    if (path.length === alias.length) return true\n    if (path[alias.length] === '/') return true\n  }\n\n  return false\n}\n\nfunction addPathHelper (path, targetArray) {\n  path = nodePath.normalize(path)\n  if (targetArray && targetArray.indexOf(path) === -1) {\n    targetArray.unshift(path)\n  }\n}\n\nfunction removePathHelper (path, targetArray) {\n  if (targetArray) {\n    var index = targetArray.indexOf(path)\n    if (index !== -1) {\n      targetArray.splice(index, 1)\n    }\n  }\n}\n\nfunction addPath (path) {\n  var parent\n  path = nodePath.normalize(path)\n\n  if (modulePaths.indexOf(path) === -1) {\n    modulePaths.push(path)\n    // Enable the search path for the current top-level module\n    var mainModule = getMainModule()\n    if (mainModule) {\n      addPathHelper(path, mainModule.paths)\n    }\n    parent = module.parent\n\n    // Also modify the paths of the module that was used to load the\n    // app-module-paths module and all of it's parents\n    while (parent && parent !== mainModule) {\n      addPathHelper(path, parent.paths)\n      parent = parent.parent\n    }\n  }\n}\n\nfunction addAliases (aliases) {\n  for (var alias in aliases) {\n    addAlias(alias, aliases[alias])\n  }\n}\n\nfunction addAlias (alias, target) {\n  moduleAliases[alias] = target\n  // Cost of sorting is lower here than during resolution\n  moduleAliasNames = Object.keys(moduleAliases)\n  moduleAliasNames.sort()\n}\n\n/**\n * Reset any changes maded (resets all registered aliases\n * and custom module directories)\n * The function is undocumented and for testing purposes only\n */\nfunction reset () {\n  var mainModule = getMainModule()\n\n  // Reset all changes in paths caused by addPath function\n  modulePaths.forEach(function (path) {\n    if (mainModule) {\n      removePathHelper(path, mainModule.paths)\n    }\n\n    // Delete from require.cache if the module has been required before.\n    // This is required for node >= 11\n    Object.getOwnPropertyNames(require.cache).forEach(function (name) {\n      if (name.indexOf(path) !== -1) {\n        delete require.cache[name]\n      }\n    })\n\n    var parent = module.parent\n    while (parent && parent !== mainModule) {\n      removePathHelper(path, parent.paths)\n      parent = parent.parent\n    }\n  })\n\n  modulePaths = []\n  moduleAliases = {}\n  moduleAliasNames = []\n}\n\n/**\n * Import aliases from package.json\n * @param {object} options\n */\nfunction init (options) {\n  if (typeof options === 'string') {\n    options = { base: options }\n  }\n\n  options = options || {}\n\n  var candidatePackagePaths\n  if (options.base) {\n    candidatePackagePaths = [nodePath.resolve(options.base.replace(/\\/package\\.json$/, ''))]\n  } else {\n    // There is probably 99% chance that the project root directory in located\n    // above the node_modules directory,\n    // Or that package.json is in the node process' current working directory (when\n    // running a package manager script, e.g. `yarn start` / `npm run start`)\n    candidatePackagePaths = [nodePath.join(__dirname, '../..'), process.cwd()]\n  }\n\n  var npmPackage\n  var base\n  for (var i in candidatePackagePaths) {\n    try {\n      base = candidatePackagePaths[i]\n\n      npmPackage = require(nodePath.join(base, 'package.json'))\n      break\n    } catch (e) {\n      // noop\n    }\n  }\n\n  if (typeof npmPackage !== 'object') {\n    var pathString = candidatePackagePaths.join(',\\n')\n    throw new Error('Unable to find package.json in any of:\\n[' + pathString + ']')\n  }\n\n  //\n  // Import aliases\n  //\n\n  var aliases = npmPackage._moduleAliases || {}\n\n  for (var alias in aliases) {\n    if (aliases[alias][0] !== '/') {\n      aliases[alias] = nodePath.join(base, aliases[alias])\n    }\n  }\n\n  addAliases(aliases)\n\n  //\n  // Register custom module directories (like node_modules)\n  //\n\n  if (npmPackage._moduleDirectories instanceof Array) {\n    npmPackage._moduleDirectories.forEach(function (dir) {\n      if (dir === 'node_modules') return\n\n      var modulePath = nodePath.join(base, dir)\n      addPath(modulePath)\n    })\n  }\n}\n\nfunction getMainModule () {\n  return require.main._simulateRepl ? undefined : require.main\n}\n\nmodule.exports = init\nmodule.exports.addPath = addPath\nmodule.exports.addAlias = addAlias\nmodule.exports.addAliases = addAliases\nmodule.exports.isPathMatchesAlias = isPathMatchesAlias\nmodule.exports.reset = reset\n"]},"metadata":{},"sourceType":"script"}