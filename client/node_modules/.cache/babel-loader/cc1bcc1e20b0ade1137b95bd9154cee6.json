{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resetData = {\n  bank: {\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: []\n    }]\n  },\n  river: {\n    subtasks: [{\n      id: '1',\n      title: 'second',\n      subtasks: []\n    }]\n  },\n  settings: {}\n}; // var data = !localStorage.getItem('data') ? { resetData } :\n//   JSON.parse(localStorage.getItem('data'));\n\nvar data = resetData;\nconsole.log(data);\nlet selected;\nlet preventSelect;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Frame, {\n        id: \"bank\",\n        subtasks: data['bank'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Frame, {\n        id: \"river\",\n        subtasks: data['river'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\n\nfunction StatusBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statusBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonBar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: newTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = StatusBar;\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks\n    };\n  }\n\n  render() {\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: this.state.lists.map(x => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          id: x.id,\n          title: x.title,\n          subtasks: x.subtasks,\n          parent: this\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title\n    };\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  addTask() {\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = {\n      id: String(now),\n      info: {\n        complete: ''\n      },\n      title: '',\n      subtasks: []\n    };\n    const subtasks = this.props.parent.state.subtasks;\n    subtasks.push(newTask);\n    this.props.parent.setState({\n      subtasks: subtasks\n    });\n    save(this.props.parent, 'task');\n  }\n\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n  }\n\n  displayOptions(ev) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    } else {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  changeStartDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        startDate: ev.target.value\n      }\n    }));\n  }\n\n  changeEndDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        endDate: ev.target.value\n      }\n    }));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n  }\n\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef(); // task with info and subtasks\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.complete,\n            onClick: this.toggleComplete,\n            children: \"\\u221A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.important,\n            onClick: this.toggleImportant,\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.maybe,\n            onClick: this.toggleMaybe,\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: this.deleteThis,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput\",\n            value: this.state.info.startDate,\n            onChange: ev => this.changeStartDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput\",\n            value: this.state.info.endDate,\n            onChange: ev => this.changeEndDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          ref: this.taskList,\n          subtasks: this.state.subtasks,\n          parent: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (!selected.state.parent) {\n    console.log('1');\n    el = selected;\n  } else if (selected.state.parent) {\n    console.log('2');\n    el = selected.state.parent;\n  }\n\n  console.log(el);\n  el.taskList.current.state.addTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    console.log('error');\n    console.trace();\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  selected = el;\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 500);\n  console.log(selected);\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  const newObject = {\n    title: task.state.title,\n    id: task.props.id,\n    subtasks: task.state.subtasks\n  };\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'list') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'task' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  parentObject = { ...newObject\n  };\n  console.log(parentObject, newObject);\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction init() {\n  selected = undefined;\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n}\n\ninit();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StatusBar\");","map":{"version":3,"sources":["/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","ReactDOM","$","render","resetData","bank","subtasks","id","title","river","settings","data","console","log","selected","preventSelect","App","StatusBar","newTask","Frame","Component","constructor","props","state","lists","div","map","x","List","taskList","createRef","selectThis","selectTask","bind","TaskList","addTask","today","Date","now","getTime","String","info","complete","parent","push","setState","save","tasksListed","task","Task","displayOptions","ev","target","hasClass","changeTitle","value","changeStartDate","prevState","startDate","changeEndDate","endDate","toggleComplete","status","toggleImportant","important","maybe","toggleMaybe","deleteThis","currentTask","findIndex","splice","type","el","current","trace","setTimeout","saveType","parents","newObject","reverse","parentObject","endIndex","parentId","slice","length","find","localStorage","setItem","JSON","stringify","init","undefined","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\n\nvar resetData = {bank: {subtasks: [{id:'1', title:'first', subtasks: []}]}, \nriver:{subtasks: [{id:'1', title: 'second', subtasks: []}]}, \nsettings: {}}\n\n// var data = !localStorage.getItem('data') ? { resetData } :\n//   JSON.parse(localStorage.getItem('data'));\n\nvar data = resetData;\n\nconsole.log(data);\n\nlet selected;\nlet preventSelect;\n\nfunction App() {\n  return (\n    <>\n      <StatusBar />\n      <div className='container'>\n        <Frame id='bank' subtasks={data['bank'].subtasks} />\n        <Frame id='river' subtasks={data['river'].subtasks} />\n      </div>\n    </>\n  )\n}\n\nfunction StatusBar() {\n  return (\n    <div className='statusBar'>\n      <input className='searchBar'></input>\n      <div className='buttonBar'>\n        <button className='button' onClick={newTask}>+</button>\n      </div>\n    </div>\n  )\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks}\n  }\n  render() {\n    const div = (\n      <div id={this.props.id} className='frame'>\n        {this.state.lists.map(x => {\n          return (\n            <List key={x.id} id={x.id} title={x.title}\n              subtasks={x.subtasks} parent={this} />\n          )\n        })}\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title}\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        <h1>{this.props.id}</h1>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  addTask() {\n    const today = new Date();\n    const now = today.getTime();\n    const newTask = {\n      id: String(now),\n      info: {complete: ''},\n      title: '',\n      subtasks: [],\n    }\n    const subtasks = this.props.parent.state.subtasks;\n    subtasks.push(newTask);\n    this.props.parent.setState({subtasks: subtasks});\n    save(this.props.parent, 'task');\n  }\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul>\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'};\n  }\n  displayOptions(ev) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    } else {\n      this.setState({displayOptions: 'hide'});\n    }\n  }\n  changeTitle(ev) { this.setState({title: ev.target.value}); }\n  changeStartDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, startDate: ev.target.value}})); \n  }\n  changeEndDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, endDate: ev.target.value}})); \n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n  }\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    this.state.parent.setState({subtasks: subtasks});\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}>\n          <div className={'options ' + this.state.displayOptions}>\n            <button \n              className={'button ' + this.state.info.complete}\n              onClick={this.toggleComplete}>\n                √\n              </button>\n            <button \n              className={'button ' + this.state.info.important}\n              onClick={this.toggleImportant}>\n                !\n              </button>\n            <button \n              className={'button ' + this.state.info.maybe}\n              onClick={this.toggleMaybe}>\n                ?\n              </button>\n            <button \n              className={'button'}\n              onClick={this.deleteThis}>\n                x\n              </button>\n            <input className='optionsInput' \n              value={this.state.info.startDate} \n              onChange={(ev) => this.changeStartDate(ev)}>\n            </input>\n            <input className='optionsInput' \n              value={this.state.info.endDate} \n              onChange={(ev) => this.changeEndDate(ev)}>\n            </input>\n          </div>\n        </span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)}></textarea>\n        <ul>\n          <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n            parent={this} />\n        </ul>\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (!selected.state.parent) {\n    console.log('1');\n    el = selected;\n  } else if (selected.state.parent) {\n    console.log('2');\n    el = selected.state.parent;\n  }\n  console.log(el);\n  el.taskList.current.state.addTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    console.log('error');\n    console.trace();\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  selected = el;\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 500)\n  console.log(selected);\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  const newObject = {title: task.state.title, id: task.props.id, \n    subtasks: task.state.subtasks};\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'list') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'task' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  parentObject = {...newObject};\n  console.log(parentObject, newObject);\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction init() {\n  selected = undefined;\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}