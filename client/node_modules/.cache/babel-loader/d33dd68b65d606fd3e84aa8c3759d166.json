{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\"; // import \"./react-datepicker.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: String(new Date().getTime()),\n      title: new Date().toDateString(),\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {}\n};\nvar data = !localStorage.getItem('data') ? {\n  resetData\n} : JSON.parse(localStorage.getItem('data'));\nvar deadlines = {};\nvar startdates = {}; // var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: ''\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container ' + this.state.hideComplete,\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          id: \"bank\",\n          info: data['river'].info,\n          subtasks: data['bank'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Frame, {\n          id: \"river\",\n          info: data['river'].info,\n          subtasks: data['river'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass StatusBar extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: backup,\n          children: \"backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button ' + this.props.parent.state.hideComplete,\n          onClick: () => {\n            console.log(this.props.parent);\n            this.props.parent.toggleComplete();\n          },\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  startTimer(val) {\n    this.setState({\n      minutes: this.state.minutes + val,\n      seconds: 0\n    });\n    this.play();\n  }\n\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({\n            minutes: (this.state.minutes + 1) * multiplier,\n            seconds: 0\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds + 1\n          });\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n\n          this.setState({\n            minutes: (this.state.minutes - 1) * multiplier,\n            seconds: 59\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  end() {\n    alert('timer complete');\n  }\n\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({\n      minutes: 0,\n      seconds: 0\n    });\n  }\n\n  render() {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(50),\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(25),\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(10),\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(5),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            this.setState({\n              minutes: 0,\n              seconds: 1\n            });\n            this.play();\n          },\n          children: \":5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.playPause(),\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"timerBar\",\n        readOnly: true,\n        value: this.state.minutes + ':' + String(this.state.seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n\n    if (props.id === 'river') {\n      console.log('river');\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n    }\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(this.state.lists[this.state.lists.length - 1].title);\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: title,\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this); // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n        if (this.props.id === 'river') {\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this,\n            deadlines: this.state.deadlines[x.title],\n            startdates: this.state.startdates[x.title]\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(List, {\n            id: x.id,\n            title: x.title,\n            subtasks: x.subtasks,\n            parent: this\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [this.props.parent.props.id === 'bank' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        className: \"listInput listTitle\",\n        value: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), this.props.parent.props.id == 'river' && this.props.deadlines && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.deadlines).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"deadline\",\n            children: this.props.deadlines[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), this.props.parent.props.id == 'river' && this.props.startdates && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(this.props.startdates).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"startdate\",\n            children: this.props.startdates[x]\n          }, String(x), false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: tasksListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n  }\n\n  displayOptions(ev, showHide) {\n    console.log(ev);\n\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (startdates[now.toDateString()] && startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev != 'init') {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          startDate: ev.target.value\n        }\n      }));\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.startDate\n        }\n      };\n    }\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      console.log(deadline);\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        startdates: startdates\n      });\n    }\n\n    console.log(startdates, ev.target.value);\n  }\n\n  changeEndDate(ev) {\n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n\n      if (deadlines[now.toDateString()] && deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n\n    if (ev != 'init') {\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          endDate: ev.target.value\n        }\n      }));\n    }\n\n    if (ev === 'init') {\n      ev = {\n        target: {\n          value: this.state.info.endDate\n        }\n      };\n    }\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      console.log(deadline);\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      console.log(now);\n\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        deadlines: deadlines\n      });\n    }\n\n    console.log(deadlines, ev.target.value);\n  }\n\n  changeRepeats(day) {\n    if (this.state.repeats[day]) this.setState(repeats[day]);\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleCollapse() {\n    let status = this.state.info.collapsed;\n\n    if (status === 'collapsed') {\n      status = '';\n    } else {\n      status = 'collapsed';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        collapsed: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(function () {\n      preventSelect = false;\n    }, 500);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && this.state.info.endDate.length > 0 ? 'event' : '';\n\n    const startInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput startDate\",\n      value: this.state.info.startDate,\n      onChange: ev => this.changeStartDate(ev),\n      ref: this.startDateSpan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this);\n\n    const endInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput endDate\",\n      value: this.state.info.endDate,\n      onChange: ev => this.changeEndDate(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this);\n\n    let riverTask = false;\n    const parent = this.props.parent;\n\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n\n    if (parent.id === 'river') {\n      riverTask = true;\n    } // task with info and subtasks\n\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass + ' ' + hasTimes + ' ' + this.state.info.collapsed,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.complete,\n              onClick: this.toggleComplete,\n              children: \"\\u221A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.important,\n              onClick: this.toggleImportant,\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.maybe,\n              onClick: this.toggleMaybe,\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: this.deleteThis,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => {\n                newTask('task');\n                this.displayOptions('hide');\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => this.toggleCollapse(),\n              children: '[]'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), riverTask && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.props.repeats['Mon'],\n              onClick: () => this.changeRepeat('Mon'),\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.props.repeats['Tue'],\n              onClick: () => this.changeRepeat('Tue'),\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.props.repeats['Wed'],\n              onClick: () => this.changeRepeat('Wed'),\n              children: \"W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.props.repeats['Thu'],\n              onClick: () => this.changeRepeat('Thu'),\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.props.repeats['Fri'],\n              onClick: () => this.changeRepeat('Fri'),\n              children: \"F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.props.repeats['Sat'],\n              onClick: () => this.changeRepeat('Sat'),\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: this.props.repeats['Sun'],\n              onClick: () => this.changeRepeat('Sun'),\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), startInput, endInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n\n  if (selected == el) {\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date(); // fs.writeFile('file.txt', JSON.stringify('data'), \n  // (err) => { if (err) throw err; console.log('success'); } );\n\n  console.log(JSON.stringify(data));\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 755,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","useState","ReactDOM","DatePicker","$","render","fs","require","resetData","bank","info","index","subtasks","id","title","river","String","Date","getTime","toDateString","settings","data","localStorage","getItem","JSON","parse","deadlines","startdates","selected","preventSelect","copiedTask","width","prevWidth","App","Component","constructor","props","state","hideComplete","toggleComplete","setState","StatusBar","newTask","cutTask","copyTask","pasteTask","backup","parent","console","log","Timer","minutes","seconds","startTimer","val","play","stopwatch","backwards","multiplier","clearInterval","interval","setInterval","end","alert","playPause","bind","audioRef","createRef","padStart","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","changeIndex","newIndex","prevState","now","i","lastDate","length","date","setDate","getDate","push","endIndex","addEventListener","div","slice","map","x","List","taskList","changeTitle","ev","target","value","selectThis","selectTask","Object","keys","TaskList","addTask","tasksListed","task","Task","displayOptions","startDate","endDate","collapsed","showHide","hasClass","editHeight","heightSpan","current","offsetHeight","changeStartDate","includes","deadline","split","setMonth","Number","changeEndDate","changeRepeats","day","repeats","status","complete","toggleImportant","important","maybe","toggleMaybe","toggleCollapse","deleteThis","currentTask","findIndex","splice","setTimeout","componentDidMount","editBar","focus","optionsButton","startDateSpan","headingClass","hasTimes","startInput","endInput","riverTask","alignContent","changeRepeat","height","editWidth","type","el","today","save","undefined","saveType","parents","reverse","parentObject","parentId","find","setItem","stringify","concat","insertIndex","keyComms","ctrlKey","shiftKey","key","metaKey","altKey","preventDefault","document","activeElement","blur","init","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import \"./react-datepicker.css\";\nconst fs = require('fs');\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:String(new Date().getTime()), title: new Date().toDateString(), subtasks: [], info: {}}\n    ]}, \n  settings: {}\n};\n\nvar data = !localStorage.getItem('data') ? { resetData } :\n  JSON.parse(localStorage.getItem('data'));\n\nvar deadlines = {};\nvar startdates = {};\n// var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: ''};\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  render() {\n    return (\n      <div className='statusBar'>\n        <input className='searchBar'></input>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={backup}>backup</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              console.log(this.props.parent);\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    this.play();\n  }\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: (this.state.minutes + 1) * multiplier, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n          this.setState({minutes: (this.state.minutes - 1) * multiplier, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000);\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({minutes: 0, seconds: 0});\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = React.createRef();\n    return (\n      <div>\n        <div className='buttonBar'>\n          <button className='button' onClick={() => this.startTimer(50)}>50</button>\n          <button className='button' onClick={() => this.startTimer(25)}>25</button>\n          <button className='button' onClick={() => this.startTimer(10)}>10</button>\n          <button className='button' onClick={() => this.startTimer(5)}>5</button>\n          <button className='button' onClick={() => {\n            this.setState({minutes: 0, seconds: 1});\n            this.play();\n          }}>:5</button>\n          <button className='button' onClick={() => this.playPause()}>&#9632;</button>\n        </div>\n        <input className='timerBar' readOnly={true}\n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n    if (props.id === 'river') {\n      console.log('river');\n      this.state.deadlines = deadlines;\n      this.state.startdates = startdates;\n    }\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(\n      this.state.lists[this.state.lists.length - 1].title\n    );\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: title, subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n          if (this.props.id === 'river') {\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} \n                deadlines={this.state.deadlines[x.title]} \n                startdates={this.state.startdates[x.title]} />\n            )\n          } else {\n            return (\n              <List key={x.id} id={x.id} title={x.title}\n                subtasks={x.subtasks} parent={this} />\n            )\n          }\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        {this.props.parent.props.id === 'bank' ?\n          <input className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input> :\n          <input readOnly className='listInput listTitle'\n            value={this.state.title}></input>\n        }\n        {this.props.parent.props.id == 'river' && \n        this.props.deadlines &&\n        <ul>\n          {Object.keys(this.props.deadlines).map(x => {\n            return <li \n              class='deadline' key={String(x)}>\n              {this.props.deadlines[x]}</li>;\n          })}\n        </ul>}\n        {this.props.parent.props.id == 'river' && \n        this.props.startdates &&\n        <ul>\n          {Object.keys(this.props.startdates).map(x => {\n            return <li \n              class='startdate' key={String(x)}>\n              {this.props.startdates[x]}</li>;\n          })}\n        </ul>}\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n  }\n  displayOptions(ev, showHide) {\n    console.log(ev);\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    if (this.state.info.startDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.startDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (startdates[now.toDateString()] && \n        startdates[now.toDateString()][this.props.id]) {\n        delete startdates[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev != 'init') {\n      this.setState(prevState => ({\n        info: {...prevState.info, startDate: ev.target.value}})); \n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.startDate}};\n    }\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      console.log(deadline);\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (!startdates[now.toDateString()]) {\n        startdates[now.toDateString()] = {};\n      }\n      startdates[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({startdates: startdates});\n    }\n    console.log(startdates, ev.target.value);\n  }\n  changeEndDate(ev) { \n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      if (deadlines[now.toDateString()] && \n        deadlines[now.toDateString()][this.props.id]) {\n        delete deadlines[now.toDateString()][this.props.id];\n      }\n    }\n    if (ev != 'init') {\n      this.setState(prevState => ({\n        info: {...prevState.info, endDate: ev.target.value}})); \n    }\n    if (ev === 'init') {\n      ev = {target: {value: this.state.info.endDate}};\n    }\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      console.log(deadline);\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) - 1);\n      now.setDate(Number(deadline[1]));\n      console.log(now);\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({deadlines: deadlines});\n    }\n    console.log(deadlines, ev.target.value);\n  }\n  changeRepeats(day) {\n    if (this.state.repeats[day])\n    this.setState(repeats[day])\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleCollapse() {\n    let status = this.state.info.collapsed\n    if (status === 'collapsed') { status = '' }\n    else { status = 'collapsed' }\n    this.setState(prevState => ({\n      info: {...prevState.info, collapsed: status}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(function () {preventSelect = false}, 500);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n    this.changeEndDate('init');\n    this.changeStartDate('init');\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    const startInput = \n      <input className='optionsInput startDate' \n      value={this.state.info.startDate} \n      onChange={(ev) => this.changeStartDate(ev)}\n      ref={this.startDateSpan}></input>\n    const endInput = \n      <input className='optionsInput endDate' \n      value={this.state.info.endDate} \n      onChange={(ev) => this.changeEndDate(ev)}>\n      </input>\n    let riverTask = false;\n    const parent = this.props.parent;\n    while (parent.props.parent) {\n      parent = parent.props.parent;\n    }\n    if (parent.id === 'river') {\n      riverTask = true;\n    }\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n              <button \n                className={'button ' + this.state.info.complete}\n                onClick={this.toggleComplete}>\n                √</button>\n              <button \n                className={'button ' + this.state.info.important}\n                onClick={this.toggleImportant}>\n                !</button>\n              <button \n                className={'button ' + this.state.info.maybe}\n                onClick={this.toggleMaybe}>\n                ?</button>\n              <button \n                className={'button'}\n                onClick={this.deleteThis}>\n                x</button>\n              <button \n                className={'button'}\n                onClick={() => {\n                  newTask('task');\n                  this.displayOptions('hide');\n                }}>\n                +</button>\n              <button \n                className={'button'}\n                onClick={() => this.toggleCollapse()}>\n                {'[]'}</button>\n            </div>\n            {riverTask &&\n              <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n                <button \n                  className={this.props.repeats['Mon']} \n                  onClick={() => this.changeRepeat('Mon')}>M</button>\n                <button \n                  className={this.props.repeats['Tue']} \n                  onClick={() => this.changeRepeat('Tue')}>T</button>\n                <button \n                  className={this.props.repeats['Wed']} \n                  onClick={() => this.changeRepeat('Wed')}>W</button>\n                <button \n                  className={this.props.repeats['Thu']} \n                  onClick={() => this.changeRepeat('Thu')}>R</button>\n                <button \n                  className={this.props.repeats['Fri']} \n                  onClick={() => this.changeRepeat('Fri')}>F</button>\n                <button \n                  className={this.props.repeats['Sat']} \n                  onClick={() => this.changeRepeat('Sat')}>S</button>\n                <button \n                  className={this.props.repeats['Sun']} \n                  onClick={() => this.changeRepeat('Sun')}>U</button>\n              </div>\n            }\n            {startInput}\n            {endInput}\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  if (selected == el) {\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date();\n  // fs.writeFile('file.txt', JSON.stringify('data'), \n  // (err) => { if (err) throw err; console.log('success'); } );\n  console.log(JSON.stringify(data));\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render(<App />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}