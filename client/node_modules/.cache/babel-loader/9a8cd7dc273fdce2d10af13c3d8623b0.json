{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/Frame/Frame.js\";\nimport React from 'react';\nimport './Frame.css';\nimport * as display from '../../services/display/display';\nimport * as util from '../../services/util/util';\nimport List from '../List/List';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Frame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addList = () => {\n      // add a new list\n      var title;\n\n      if (this.props.id === 'river') {\n        const lastDate = new Date(window.data.tasks[this.state.subtasks[this.state.subtasks.length - 1]].title);\n        lastDate.setDate(lastDate.getDate() + 1);\n        title = lastDate.toDateString();\n      } else {\n        title = '--';\n      }\n\n      const subtasks = this.state.subtasks;\n      const id = String(new Date().getTime());\n      window.data.tasks[id] = {\n        title: title,\n        subtasks: [],\n        info: {}\n      };\n      subtasks.push(id);\n      this.setState({\n        subtasks: subtasks\n      });\n    };\n\n    this.changeIndex = (val, set) => {\n      var newIndex;\n\n      if (set === true) {\n        newIndex = val;\n      } else {\n        newIndex = this.state.info.index + val;\n      }\n\n      if (!this.frame) return;\n      const children = $(this.frame.current).children();\n      console.log(newIndex, children[newIndex]);\n      children[newIndex].scrollIntoView(); // let newIndex;\n      // if (set === true) {\n      //   newIndex = val;\n      // } else {\n      //   newIndex = this.state.info.index + val;\n      // }\n      // if (newIndex > 0 &&\n      //   window.data.tasks[this.state.subtasks[newIndex - 1]].title === '--') {\n      //   return;\n      // }\n      // if (\n      //   set !== undefined && \n      //   newIndex > this.state.info.index && \n      //   this.props.id === 'bank'\n      // ) {\n      //   newIndex -= (this.state.width - 1);\n      // }\n      // if (newIndex < 0) newIndex = 0;\n      // this.setState(prevState => ({\n      //   info: { ...prevState.info, index: newIndex }\n      // }));\n    };\n\n    this.state = {\n      subtasks: props.subtasks,\n      info: props.info,\n      width: display.processWidth(props.info.focused),\n      zoomed: ''\n    };\n\n    if (props.id === 'river') {\n      this.state.repeats = window.data.settings.repeats;\n    }\n  }\n\n  render() {\n    var resizeCheck = () => {\n      if (this.state.width !== display.processWidth(this.state.info.focused)) {\n        this.setState({\n          width: display.processWidth(this.state.info.focused)\n        });\n      }\n    };\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck); // const shownLists =\n    //   this.state.subtasks.slice(this.state.info.index, endIndex);\n\n    const shownLists = this.state.subtasks;\n    this.frame = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `frameContainer \n        ${this.state.info.focused} ${this.state.zoomed}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: this.props.id,\n        className: 'frame',\n        ref: this.frame,\n        children: [shownLists.map(x => {\n          this.frames.push( /*#__PURE__*/React.createRef());\n          const task = window.data.tasks[x];\n\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return /*#__PURE__*/_jsxDEV(List, {\n              id: x,\n              title: task.title,\n              subtasks: task.subtasks,\n              parent: this,\n              deadlines: this.props.deadlines[task.title],\n              startdates: this.props.startdates[task.title],\n              repeats: this.state.repeats[util.dateFormat(task.title).slice(0, 3)],\n              ref: this.frames[this.frames.length - 1]\n            }, x, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(List, {\n              id: x,\n              title: task.title,\n              subtasks: task.subtasks,\n              parent: this,\n              ref: this.frames[this.frames.length - 1]\n            }, x, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"changeButton\",\n          title: \"add list or date\",\n          onClick: () => this.addList(),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/Frame/Frame.js"],"names":["React","display","util","List","$","Frame","Component","constructor","props","addList","title","id","lastDate","Date","window","data","tasks","state","subtasks","length","setDate","getDate","toDateString","String","getTime","info","push","setState","changeIndex","val","set","newIndex","index","frame","children","current","console","log","scrollIntoView","width","processWidth","focused","zoomed","repeats","settings","render","resizeCheck","endIndex","frames","addEventListener","shownLists","createRef","map","x","task","deadlines","startdates","dateFormat","slice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Frame.css';\nimport * as display from '../../services/display/display';\nimport * as util from '../../services/util/util';\nimport List from '../List/List';\nimport $ from 'jquery';\n\nexport default class Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtasks: props.subtasks, info: props.info,\n      width: display.processWidth(props.info.focused),\n      zoomed: '',\n    };\n    if (props.id === 'river') {\n      this.state.repeats = window.data.settings.repeats;\n    }\n  }\n  addList = () => {\n    // add a new list\n    var title;\n    if (this.props.id === 'river') {\n      const lastDate = new Date(\n        window.data.tasks[this.state.subtasks[this.state.subtasks.length - 1]].title);\n      lastDate.setDate(lastDate.getDate() + 1);\n      title = lastDate.toDateString();\n    } else {\n      title = '--';\n    }\n\n    const subtasks = this.state.subtasks;\n    const id = String(new Date().getTime());\n    window.data.tasks[id] = {\n      title: title, subtasks: [], info: {}\n    }\n    subtasks.push(id);\n    this.setState({subtasks: subtasks});\n  }\n\n  changeIndex = (val, set) => {\n    var newIndex;\n    if (set === true) {\n      newIndex = val;\n    } else {\n      newIndex = this.state.info.index + val;\n    }\n    if (!this.frame) return;\n    const children = $(this.frame.current).children();\n    console.log(newIndex, children[newIndex]);\n    children[newIndex].scrollIntoView();\n    // let newIndex;\n    // if (set === true) {\n    //   newIndex = val;\n    // } else {\n    //   newIndex = this.state.info.index + val;\n    // }\n    // if (newIndex > 0 &&\n    //   window.data.tasks[this.state.subtasks[newIndex - 1]].title === '--') {\n    //   return;\n    // }\n    // if (\n    //   set !== undefined && \n    //   newIndex > this.state.info.index && \n    //   this.props.id === 'bank'\n    // ) {\n    //   newIndex -= (this.state.width - 1);\n    // }\n    // if (newIndex < 0) newIndex = 0;\n    // this.setState(prevState => ({\n    //   info: { ...prevState.info, index: newIndex }\n    // }));\n  }\n  render() {\n    var resizeCheck = () => {\n      if (this.state.width !== display.processWidth(this.state.info.focused)) {\n        this.setState({ width: display.processWidth(this.state.info.focused) });\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck);\n    // const shownLists =\n    //   this.state.subtasks.slice(this.state.info.index, endIndex);\n    const shownLists = this.state.subtasks;\n    this.frame = React.createRef();\n    return (\n      <div className={`frameContainer \n        ${this.state.info.focused} ${this.state.zoomed}`}>\n        <div id={this.props.id}\n          className={'frame'} ref={this.frame}>\n          {shownLists.map(x => {\n            this.frames.push(React.createRef());\n            const task = window.data.tasks[x];\n            if (this.props.id === 'river') {\n              // render state correctly in original lists\n              return (\n                <List key={x} id={x} title={task.title}\n                  subtasks={task.subtasks} parent={this}\n                  deadlines={this.props.deadlines[task.title]}\n                  startdates={this.props.startdates[task.title]}\n                  repeats={this.state.repeats[util.dateFormat(task.title)\n                    .slice(0, 3)]}\n                  ref={this.frames[this.frames.length - 1]} />\n              )\n            } else {\n              return (\n                <List key={x} id={x} title={task.title}\n                  subtasks={task.subtasks} parent={this}\n                  ref={this.frames[this.frames.length - 1]} />\n              )\n            }\n          })}\n          <button className='changeButton' title='add list or date'\n            onClick={() => this.addList()}>+</button>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}