{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\"; // import \"./react-datepicker.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: String(new Date().getTime()),\n      title: new Date().toDateString(),\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {}\n};\nvar data = !localStorage.getItem('data') ? {\n  resetData\n} : JSON.parse(localStorage.getItem('data'));\nvar deadlines = {}; // var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideComplete: ''\n    };\n  }\n\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({\n        hideComplete: 'hideComplete'\n      });\n    } else {\n      this.setState({\n        hideComplete: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container ' + this.state.hideComplete,\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          id: \"bank\",\n          info: data['river'].info,\n          subtasks: data['bank'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Frame, {\n          id: \"river\",\n          info: data['river'].info,\n          subtasks: data['river'].subtasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass StatusBar extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statusBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: newTask,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: cutTask,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: copyTask,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pasteTask,\n          children: \"v\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: backup,\n          children: \"backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button ' + this.props.parent.state.hideComplete,\n          onClick: () => {\n            console.log(this.props.parent);\n            this.props.parent.toggleComplete();\n          },\n          children: \"+\\u221A/-\\u221A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  startTimer(val) {\n    this.setState({\n      minutes: this.state.minutes + val,\n      seconds: 0\n    });\n    this.play();\n  }\n\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({\n            minutes: (this.state.minutes + 1) * multiplier,\n            seconds: 0\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds + 1\n          });\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n\n          this.setState({\n            minutes: (this.state.minutes - 1) * multiplier,\n            seconds: 59\n          });\n        } else {\n          this.setState({\n            seconds: this.state.seconds - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  end() {\n    alert('timer complete');\n  }\n\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({\n      minutes: 0,\n      seconds: 0\n    });\n  }\n\n  render() {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = /*#__PURE__*/React.createRef();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(50),\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(25),\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(10),\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.startTimer(5),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            this.setState({\n              minutes: 0,\n              seconds: 1\n            });\n            this.play();\n          },\n          children: \":5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => this.playPause(),\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"timerBar\",\n        readOnly: true,\n        value: this.state.minutes + ':' + String(this.state.seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200),\n      deadlines: deadlines\n    };\n    $(window).on('resize', this.resizeCheck);\n  }\n\n  updateDeadlines() {\n    this.setState({\n      deadlines: deadlines\n    });\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(this.state.lists[this.state.lists.length - 1].title);\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: title,\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this); // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          id: x.id,\n          title: x.title,\n          subtasks: x.subtasks,\n          parent: this,\n          deadlines: deadlines[x.title]\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [this.props.parent.props.id === 'bank' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onChange: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        className: \"listInput listTitle\",\n        value: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), this.props.parent.props.id == 'river' && this.props.deadlines && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.deadlines.map(x => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: tasksListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n  }\n\n  displayOptions(ev, showHide) {\n    console.log(ev);\n\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        startDate: ev.target.value\n      }\n    }));\n  }\n\n  changeEndDate(ev) {\n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) + 1);\n      now.setDate(Number(deadline[1]));\n      delete deadlines[now.toDateString()][this.props.id];\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        endDate: ev.target.value\n      }\n    }));\n\n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      console.log(deadline);\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) + 1);\n      now.setDate(Number(deadline[1]));\n      console.log(now);\n\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n\n      parent.setState({\n        deadlines: deadlines\n      });\n    }\n\n    console.log(deadlines, ev.target.value);\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  toggleCollapse() {\n    let status = this.state.info.collapsed;\n\n    if (status === 'collapsed') {\n      status = '';\n    } else {\n      status = 'collapsed';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        collapsed: status\n      }\n    }));\n    this.displayOptions('hide');\n  }\n\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(function () {\n      preventSelect = false;\n    }, 500);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef();\n    this.startDateSpan = /*#__PURE__*/React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? 'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && this.state.info.endDate.length > 0 ? 'event' : '';\n\n    const startInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput startDate\",\n      value: this.state.info.startDate,\n      onChange: ev => this.changeStartDate(ev),\n      ref: this.startDateSpan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this);\n\n    const endInput = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"optionsInput endDate\",\n      value: this.state.info.endDate,\n      onChange: ev => this.changeEndDate(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this); // task with info and subtasks\n\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe + ' ' + headingClass + ' ' + hasTimes + ' ' + this.state.info.collapsed,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonBar\",\n            style: {\n              width: '100%',\n              alignContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.complete,\n              onClick: this.toggleComplete,\n              children: \"\\u221A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.important,\n              onClick: this.toggleImportant,\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button ' + this.state.info.maybe,\n              onClick: this.toggleMaybe,\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: this.deleteThis,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => {\n                newTask('task');\n                this.displayOptions('hide');\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button',\n              onClick: () => this.toggleCollapse(),\n              children: '[]'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), startInput, endInput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: '',\n      startDate: '',\n      endDate: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n\n  if (selected == el) {\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date(); // fs.writeFile('file.txt', JSON.stringify('data'), \n  // (err) => { if (err) throw err; console.log('success'); } );\n\n  console.log(JSON.stringify(data));\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n\n      case 'N':\n        newTask('task');\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 651,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","useState","ReactDOM","DatePicker","$","render","fs","require","resetData","bank","info","index","subtasks","id","title","river","String","Date","getTime","toDateString","settings","data","localStorage","getItem","JSON","parse","deadlines","selected","preventSelect","copiedTask","width","prevWidth","App","Component","constructor","props","state","hideComplete","toggleComplete","setState","StatusBar","newTask","cutTask","copyTask","pasteTask","backup","parent","console","log","Timer","minutes","seconds","startTimer","val","play","stopwatch","backwards","multiplier","clearInterval","interval","setInterval","end","alert","playPause","bind","audioRef","createRef","padStart","Frame","lists","Math","floor","window","innerWidth","on","resizeCheck","updateDeadlines","changeIndex","newIndex","prevState","now","i","lastDate","length","date","setDate","getDate","push","endIndex","addEventListener","div","slice","map","x","List","taskList","changeTitle","ev","target","value","selectThis","selectTask","TaskList","addTask","tasksListed","task","Task","displayOptions","startDate","endDate","collapsed","showHide","hasClass","editHeight","heightSpan","current","offsetHeight","changeStartDate","changeEndDate","includes","deadline","split","setMonth","Number","status","complete","toggleImportant","important","maybe","toggleMaybe","toggleCollapse","deleteThis","currentTask","findIndex","splice","setTimeout","componentDidMount","editBar","focus","optionsButton","startDateSpan","headingClass","hasTimes","startInput","endInput","alignContent","height","editWidth","type","el","today","save","undefined","saveType","parents","reverse","parentObject","parentId","find","setItem","stringify","concat","insertIndex","keyComms","ctrlKey","shiftKey","key","metaKey","altKey","preventDefault","document","activeElement","blur","init","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAO,4CAAP,C,CACA;;;;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAIC,SAAS,GAAG;AACdC,EAAAA,IAAI,EACF;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAP;AAAmBC,IAAAA,QAAQ,EAAE,CAC3B;AAACC,MAAAA,EAAE,EAAC,GAAJ;AAASC,MAAAA,KAAK,EAAC,OAAf;AAAwBF,MAAAA,QAAQ,EAAE,EAAlC;AAAsCF,MAAAA,IAAI,EAAE;AAA5C,KAD2B;AAA7B,GAFY;AAKdK,EAAAA,KAAK,EACH;AAACL,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAP;AAAmBC,IAAAA,QAAQ,EAAE,CAC3B;AAACC,MAAAA,EAAE,EAACG,MAAM,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD,CAAV;AAAkCJ,MAAAA,KAAK,EAAE,IAAIG,IAAJ,GAAWE,YAAX,EAAzC;AAAoEP,MAAAA,QAAQ,EAAE,EAA9E;AAAkFF,MAAAA,IAAI,EAAE;AAAxF,KAD2B;AAA7B,GANY;AASdU,EAAAA,QAAQ,EAAE;AATI,CAAhB;AAYA,IAAIC,IAAI,GAAG,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,GAAgC;AAAEf,EAAAA;AAAF,CAAhC,GACTgB,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADF;AAGA,IAAIG,SAAS,GAAG,EAAhB,C,CACA;;AAEA,IAAIC,QAAJ;AACA,IAAIC,aAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,KAAJ;AACA,IAAIC,SAAJ;;AAEA,MAAMC,GAAN,SAAkBhC,KAAK,CAACiC,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,YAAY,EAAE;AAAf,KAAb;AACD;;AACDC,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKF,KAAL,CAAWC,YAAX,IAA2B,EAA/B,EAAmC;AACjC,WAAKE,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD,KAFD,MAEO;AACL,WAAKE,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD;AACF;;AACDhC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAE,eAAe,KAAK+B,KAAL,CAAWC,YAA1C;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAEhB,IAAI,CAAC,OAAD,CAAJ,CAAcX,IAArC;AACE,UAAA,QAAQ,EAAEW,IAAI,CAAC,MAAD,CAAJ,CAAaT;AADzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAES,IAAI,CAAC,OAAD,CAAJ,CAAcX,IAAtC;AACE,UAAA,QAAQ,EAAEW,IAAI,CAAC,OAAD,CAAJ,CAAcT;AAD1B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAWD;;AAxB+B;;AA2BlC,MAAM4B,SAAN,SAAwBxC,KAAK,CAACiC,SAA9B,CAAwC;AACtC5B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEoC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AACE,UAAA,SAAS,EAAE,YAAY,KAAKV,KAAL,CAAWW,MAAX,CAAkBV,KAAlB,CAAwBC,YADjD;AAC+D,UAAA,OAAO,EAAE,MAAM;AAC1EU,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWW,MAAvB;AACA,iBAAKX,KAAL,CAAWW,MAAX,CAAkBR,cAAlB;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AApBqC;;AAuBxC,MAAMW,KAAN,SAAoBjD,KAAK,CAACiC,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACc,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAAb;AACD;;AACDC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,SAAKd,QAAL,CAAc;AAACW,MAAAA,OAAO,EAAE,KAAKd,KAAL,CAAWc,OAAX,GAAqBG,GAA/B;AAAoCF,MAAAA,OAAO,EAAE;AAA7C,KAAd;AACA,SAAKG,IAAL;AACD;;AACDA,EAAAA,IAAI,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACzB,UAAMC,UAAU,GAAGD,SAAS,GAAG,CAAC,CAAJ,GAAQ,CAApC;AACAE,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;;AACA,QAAIJ,SAAS,KAAK,WAAlB,EAA+B;AAC7B,WAAKI,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,YAAI,KAAKxB,KAAL,CAAWe,OAAX,KAAuB,EAA3B,EAA+B;AAC7B,eAAKZ,QAAL,CAAc;AAACW,YAAAA,OAAO,EAAE,CAAC,KAAKd,KAAL,CAAWc,OAAX,GAAqB,CAAtB,IAA2BO,UAArC;AACZN,YAAAA,OAAO,EAAE;AADG,WAAd;AAED,SAHD,MAGO;AACL,eAAKZ,QAAL,CAAc;AAACY,YAAAA,OAAO,EAAE,KAAKf,KAAL,CAAWe,OAAX,GAAqB;AAA/B,WAAd;AACD;AACF,OAP0B,EAOxB,IAPwB,CAA3B;AAQD,KATD,MASO;AACL,WAAKQ,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,YAAI,KAAKxB,KAAL,CAAWe,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,cAAI,KAAKf,KAAL,CAAWc,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,iBAAKW,GAAL;AACA,iBAAKP,IAAL,CAAU,WAAV,EAAuB,IAAvB;AACD;;AACD,eAAKf,QAAL,CAAc;AAACW,YAAAA,OAAO,EAAE,CAAC,KAAKd,KAAL,CAAWc,OAAX,GAAqB,CAAtB,IAA2BO,UAArC;AACZN,YAAAA,OAAO,EAAE;AADG,WAAd;AAED,SAPD,MAOO;AACL,eAAKZ,QAAL,CAAc;AAACY,YAAAA,OAAO,EAAE,KAAKf,KAAL,CAAWe,OAAX,GAAqB;AAA/B,WAAd;AACD;AACF,OAX0B,EAWxB,IAXwB,CAA3B;AAYD;AACF;;AACDU,EAAAA,GAAG,GAAG;AACJC,IAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;;AACDC,EAAAA,SAAS,GAAG;AACVL,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA,SAAKpB,QAAL,CAAc;AAACW,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAAd;AACD;;AACD9C,EAAAA,MAAM,GAAI;AACR,SAAK+C,UAAL,GAAkB,KAAKA,UAAL,CAAgBY,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKD,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKV,IAAL,GAAY,KAAKA,IAAL,CAAUU,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,QAAL,gBAAgBjE,KAAK,CAACkE,SAAN,EAAhB;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKd,UAAL,CAAgB,EAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,EAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,EAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,CAAhB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM;AACxC,iBAAKb,QAAL,CAAc;AAACW,cAAAA,OAAO,EAAE,CAAV;AAAaC,cAAAA,OAAO,EAAE;AAAtB,aAAd;AACA,iBAAKG,IAAL;AACD,WAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKS,SAAL,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AACE,QAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWc,OAAX,GAAqB,GAArB,GACPlC,MAAM,CAAC,KAAKoB,KAAL,CAAWe,OAAZ,CAAN,CAA2BgB,QAA3B,CAAoC,CAApC,EAAuC,GAAvC;AAFF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAlEiC;;AAqEpC,MAAMC,KAAN,SAAoBpE,KAAK,CAACiC,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACiC,MAAAA,KAAK,EAAElC,KAAK,CAACvB,QAAd;AAAwBF,MAAAA,IAAI,EAAEyB,KAAK,CAACzB,IAApC;AACXoB,MAAAA,KAAK,EAAEwC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B,CADI;AACiC/C,MAAAA,SAAS,EAAEA;AAD5C,KAAb;AAEAtB,IAAAA,CAAC,CAACoE,MAAD,CAAD,CAAUE,EAAV,CAAa,QAAb,EAAuB,KAAKC,WAA5B;AACD;;AACDC,EAAAA,eAAe,GAAG;AAChB,SAAKrC,QAAL,CAAc;AAACb,MAAAA,SAAS,EAAEA;AAAZ,KAAd;AACD;;AACDmD,EAAAA,WAAW,CAACxB,GAAD,EAAM;AACf,QAAIyB,QAAQ,GAAG,KAAK1C,KAAL,CAAW1B,IAAX,CAAgBC,KAAhB,GAAwB0C,GAAvC;AACA,QAAIyB,QAAQ,GAAG,CAAf,EAAkBA,QAAQ,GAAG,CAAX;AAClB,SAAKvC,QAAL,CAAcwC,SAAS,KAAK;AAC1BrE,MAAAA,IAAI,EAAE,EAAC,GAAGqE,SAAS,CAACrE,IAAd;AAAoBC,QAAAA,KAAK,EAAEmE;AAA3B;AADoB,KAAL,CAAvB;AAGD;;AACDzE,EAAAA,MAAM,GAAG;AACP,UAAM2E,GAAG,GAAG,IAAI/D,IAAJ,EAAZ;AACA,QAAIgE,CAAC,GAAG,CAAR;AACA,QAAIC,QAAQ,GAAG,IAAIjE,IAAJ,CACb,KAAKmB,KAAL,CAAWiC,KAAX,CAAiB,KAAKjC,KAAL,CAAWiC,KAAX,CAAiBc,MAAjB,GAA0B,CAA3C,EAA8CrE,KADjC,CAAf;;AAGA,WAAO,KAAKsB,KAAL,CAAWiC,KAAX,CAAiBc,MAAjB,GAA0B,KAAK/C,KAAL,CAAW1B,IAAX,CAAgBC,KAAhB,GAAwB,CAAzD,EAA4D;AAC1DsE,MAAAA,CAAC;;AACD,UAAI,KAAK9C,KAAL,CAAWtB,EAAX,KAAkB,MAAtB,EAA8B;AAC5B,YAAIC,KAAK,GAAG,EAAZ;AACD,OAFD,MAEO,IAAI,KAAKqB,KAAL,CAAWtB,EAAX,KAAkB,OAAtB,EAA+B;AACpC,cAAMuE,IAAI,GAAG,IAAInE,IAAJ,CAASiE,QAAQ,CAAChE,OAAT,EAAT,CAAb;AACAkE,QAAAA,IAAI,CAACC,OAAL,CAAaH,QAAQ,CAACI,OAAT,KAAqBL,CAAlC;AACA,YAAInE,KAAK,GAAGsE,IAAI,CAACjE,YAAL,EAAZ;AACD;;AACD,WAAKiB,KAAL,CAAWiC,KAAX,CAAiBkB,IAAjB,CAAsB;AAAC1E,QAAAA,EAAE,EAAEG,MAAM,CAACgE,GAAG,CAAC9D,OAAJ,KAAgB+D,CAAjB,CAAX;AACpBnE,QAAAA,KAAK,EAAEA,KADa;AACNF,QAAAA,QAAQ,EAAE,EADJ;AACQF,QAAAA,IAAI,EAAE;AADd,OAAtB;AAED;;AACD,aAASiE,WAAT,GAAuB;AACrB;AACA,YAAM7C,KAAK,GAAGwC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B,CAAd;;AACA,UAAI3C,KAAK,IAAI,KAAKM,KAAL,CAAWN,KAAxB,EAA+B;AAC7B,aAAKS,QAAL,CAAc;AAACT,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACD;AACF;;AACD,QAAI0D,QAAQ,GAAG,KAAKpD,KAAL,CAAW1B,IAAX,CAAgBC,KAAhB,GAAwB,KAAKyB,KAAL,CAAWN,KAAlD;AACA,SAAK+C,WAAL,GAAmB,KAAKA,WAAL,CAAiBb,IAAjB,CAAsB,IAAtB,CAAnB;AACAW,IAAAA,WAAW,GAAGA,WAAW,CAACX,IAAZ,CAAiB,IAAjB,CAAd,CA3BO,CA4BP;;AACAQ,IAAAA,MAAM,CAACiB,gBAAP,CAAwB,QAAxB,EAAkCd,WAAlC;;AACA,UAAMe,GAAG,gBACP;AAAK,MAAA,EAAE,EAAE,KAAKvD,KAAL,CAAWtB,EAApB;AAAwB,MAAA,SAAS,EAAC,OAAlC;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACE,QAAA,OAAO,EAAE,MAAM,KAAKgE,WAAL,CAAiB,KAAKzC,KAAL,CAAWN,KAAX,GAAmB,CAAC,CAArC,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGG,KAAKM,KAAL,CAAWiC,KAAX,CAAiBsB,KAAjB,CAAuB,KAAKvD,KAAL,CAAW1B,IAAX,CAAgBC,KAAvC,EAA8C6E,QAA9C,EAAwDI,GAAxD,CAA4DC,CAAC,IAAI;AAChE,4BACE,QAAC,IAAD;AAAiB,UAAA,EAAE,EAAEA,CAAC,CAAChF,EAAvB;AAA2B,UAAA,KAAK,EAAEgF,CAAC,CAAC/E,KAApC;AACE,UAAA,QAAQ,EAAE+E,CAAC,CAACjF,QADd;AACwB,UAAA,MAAM,EAAE,IADhC;AAEE,UAAA,SAAS,EAAEc,SAAS,CAACmE,CAAC,CAAC/E,KAAH;AAFtB,WAAW+E,CAAC,CAAChF,EAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAHH,eAUE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACE,QAAA,OAAO,EAAE,MAAM,KAAKgE,WAAL,CAAiB,KAAKzC,KAAL,CAAWN,KAA5B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAeA,WAAO4D,GAAP;AACD;;AA/DiC;;AAkEpC,MAAMI,IAAN,SAAmB9F,KAAK,CAACiC,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAK4D,QAAL,gBAAgB/F,KAAK,CAACkE,SAAN,EAAhB;AACA,SAAK9B,KAAL,GAAa;AAACxB,MAAAA,QAAQ,EAAEuB,KAAK,CAACvB,QAAjB;AAA2BE,MAAAA,KAAK,EAAEqB,KAAK,CAACrB,KAAxC;AACXJ,MAAAA,IAAI,EAAE;AADK,KAAb;AAED;;AACDsF,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,SAAK1D,QAAL,CAAc;AAACzB,MAAAA,KAAK,EAAEmF,EAAE,CAACC,MAAH,CAAUC;AAAlB,KAAd;AACD;;AACD9F,EAAAA,MAAM,GAAG;AACP,aAAS+F,UAAT,GAAsB;AACpBC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDD,IAAAA,UAAU,GAAGA,UAAU,CAACpC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKgC,WAAL,GAAmB,KAAKA,WAAL,CAAiBhC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAEoC,UAA/B;AAAA,iBACG,KAAKjE,KAAL,CAAWW,MAAX,CAAkBX,KAAlB,CAAwBtB,EAAxB,KAA+B,MAA/B,gBACC;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWtB,KAA/C;AACA,QAAA,QAAQ,EAAE,KAAKkF;AADf;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,SAAS,EAAC,qBAA1B;AACE,QAAA,KAAK,EAAE,KAAK5D,KAAL,CAAWtB;AADpB;AAAA;AAAA;AAAA;AAAA,cAJJ,EAOG,KAAKqB,KAAL,CAAWW,MAAX,CAAkBX,KAAlB,CAAwBtB,EAAxB,IAA8B,OAA9B,IACD,KAAKsB,KAAL,CAAWT,SADV,iBAED;AAAA,kBACG,KAAKS,KAAL,CAAWT,SAAX,CAAqBkE,GAArB,CAAyBC,CAAC,IAAI;AAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cATF,eAcE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAKE,QAApB;AAA8B,QAAA,QAAQ,EAAE,KAAK3D,KAAL,CAAWxB,QAAnD;AACE,QAAA,MAAM,EAAE;AADV;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAnCgC;;AAsCnC,MAAM0F,QAAN,SAAuBtG,KAAK,CAACiC,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACmE,MAAAA,OAAO,EAAE,KAAKA;AAAf,KAAb;AACD;;AACDlG,EAAAA,MAAM,GAAG;AACP,UAAMmG,WAAW,GAAG,KAAKrE,KAAL,CAAWvB,QAAX,CAAoBgF,GAApB,CAAwBC,CAAC,IAAI;AAC/C,YAAMY,IAAI,gBACR,QAAC,IAAD;AAEE,QAAA,EAAE,EAAEZ,CAAC,CAAChF,EAFR;AAGE,QAAA,IAAI,EAAEgF,CAAC,CAACnF,IAHV;AAIE,QAAA,KAAK,EAAEmF,CAAC,CAAC/E,KAJX;AAKE,QAAA,QAAQ,EAAE+E,CAAC,CAACjF,QALd;AAME,QAAA,MAAM,EAAE,KAAKuB,KAAL,CAAWW;AANrB,SACO+C,CAAC,CAAChF,EADT;AAAA;AAAA;AAAA;AAAA,cADF;;AAUA,aAAO4F,IAAP;AAAY,KAXM,CAApB;AAYA,wBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAvBoC;;AA0BvC,MAAME,IAAN,SAAmB1G,KAAK,CAACiC,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,KAAL,GAAa;AACX1B,MAAAA,IAAI,EAAEyB,KAAK,CAACzB,IADD;AACOI,MAAAA,KAAK,EAAEqB,KAAK,CAACrB,KADpB;AAEXF,MAAAA,QAAQ,EAAEuB,KAAK,CAACvB,QAFL;AAEekC,MAAAA,MAAM,EAAEX,KAAK,CAACW,MAF7B;AAGXjC,MAAAA,EAAE,EAAEsB,KAAK,CAACtB,EAHC;AAGG8F,MAAAA,cAAc,EAAE;AAHnB,KAAb;AAKA,QAAI,CAAC,KAAKvE,KAAL,CAAW1B,IAAX,CAAgBkG,SAArB,EAAgC,KAAKxE,KAAL,CAAW1B,IAAX,CAAgBkG,SAAhB,GAA4B,EAA5B;AAChC,QAAI,CAAC,KAAKxE,KAAL,CAAW1B,IAAX,CAAgBmG,OAArB,EAA8B,KAAKzE,KAAL,CAAW1B,IAAX,CAAgBmG,OAAhB,GAA0B,EAA1B;AAC9B,QAAI,CAAC,KAAKzE,KAAL,CAAW1B,IAAX,CAAgBoG,SAArB,EAAgC,KAAK1E,KAAL,CAAW1B,IAAX,CAAgBoG,SAAhB,GAA4B,EAA5B;AACjC;;AACDH,EAAAA,cAAc,CAACV,EAAD,EAAKc,QAAL,EAAe;AAC3BhE,IAAAA,OAAO,CAACC,GAAR,CAAYiD,EAAZ;;AACA,QAAI7F,CAAC,CAAC6F,EAAE,CAACC,MAAJ,CAAD,CAAac,QAAb,CAAsB,SAAtB,KACF5G,CAAC,CAAC6F,EAAE,CAACC,MAAJ,CAAD,CAAapD,MAAb,GAAsBkE,QAAtB,CAA+B,SAA/B,CADF,EAC6C;AAC3C;AACD;;AACD,QAAID,QAAQ,KAAK,MAAb,IAAuB,KAAK3E,KAAL,CAAWuE,cAAX,KAA8B,MAAzD,EAAiE;AAC/D,WAAKpE,QAAL,CAAc;AAACoE,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,KAFD,MAEO,IAAII,QAAQ,IAAI,MAAZ,IAAsB,KAAK3E,KAAL,CAAWuE,cAAX,KAA8B,MAAxD,EAAgE;AACrE,WAAKpE,QAAL,CAAc;AAACoE,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD;AACF;;AACDX,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,SAAK1D,QAAL,CAAc;AAACzB,MAAAA,KAAK,EAAEmF,EAAE,CAACC,MAAH,CAAUC,KAAlB;AAAyBc,MAAAA,UAAU,EACjD,UAAUjG,MAAM,CAAC,KAAKkG,UAAL,CAAgBC,OAAhB,CAAwBC,YAAzB,CAAhB,GAAyD;AAD3C,KAAd;AAED;;AACDC,EAAAA,eAAe,CAACpB,EAAD,EAAK;AAClB,SAAK1D,QAAL,CAAcwC,SAAS,KAAK;AAC1BrE,MAAAA,IAAI,EAAE,EAAC,GAAGqE,SAAS,CAACrE,IAAd;AAAoBkG,QAAAA,SAAS,EAAEX,EAAE,CAACC,MAAH,CAAUC;AAAzC;AADoB,KAAL,CAAvB;AAED;;AACDmB,EAAAA,aAAa,CAACrB,EAAD,EAAK;AAChB,QAAI,KAAK7D,KAAL,CAAW1B,IAAX,CAAgBmG,OAAhB,CAAwBU,QAAxB,CAAiC,GAAjC,CAAJ,EAA2C;AACzC;AACA,YAAMC,QAAQ,GAAG,KAAKpF,KAAL,CAAW1B,IAAX,CAAgBmG,OAAhB,CAAwBY,KAAxB,CAA8B,GAA9B,CAAjB;AACA,YAAMzC,GAAG,GAAG,IAAI/D,IAAJ,EAAZ;AACA+D,MAAAA,GAAG,CAAC0C,QAAJ,CAAaC,MAAM,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsB,CAAnC;AACAxC,MAAAA,GAAG,CAACK,OAAJ,CAAYsC,MAAM,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAlB;AACA,aAAO9F,SAAS,CAACsD,GAAG,CAAC7D,YAAJ,EAAD,CAAT,CAA8B,KAAKgB,KAAL,CAAWtB,EAAzC,CAAP;AACD;;AACD,SAAK0B,QAAL,CAAcwC,SAAS,KAAK;AAC1BrE,MAAAA,IAAI,EAAE,EAAC,GAAGqE,SAAS,CAACrE,IAAd;AAAoBmG,QAAAA,OAAO,EAAEZ,EAAE,CAACC,MAAH,CAAUC;AAAvC;AADoB,KAAL,CAAvB;;AAEA,QAAIF,EAAE,CAACC,MAAH,CAAUC,KAAV,CAAgBoB,QAAhB,CAAyB,GAAzB,CAAJ,EAAmC;AACjC;AACA,YAAMC,QAAQ,GAAGvB,EAAE,CAACC,MAAH,CAAUC,KAAV,CAAgBsB,KAAhB,CAAsB,GAAtB,CAAjB;AACA1E,MAAAA,OAAO,CAACC,GAAR,CAAYwE,QAAZ;AACA,YAAMxC,GAAG,GAAG,IAAI/D,IAAJ,EAAZ;AACA+D,MAAAA,GAAG,CAAC0C,QAAJ,CAAaC,MAAM,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsB,CAAnC;AACAxC,MAAAA,GAAG,CAACK,OAAJ,CAAYsC,MAAM,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAlB;AACAzE,MAAAA,OAAO,CAACC,GAAR,CAAYgC,GAAZ;;AACA,UAAI,CAACtD,SAAS,CAACsD,GAAG,CAAC7D,YAAJ,EAAD,CAAd,EAAoC;AAClCO,QAAAA,SAAS,CAACsD,GAAG,CAAC7D,YAAJ,EAAD,CAAT,GAAgC,EAAhC;AACD;;AACDO,MAAAA,SAAS,CAACsD,GAAG,CAAC7D,YAAJ,EAAD,CAAT,CAA8B,KAAKgB,KAAL,CAAWtB,EAAzC,IAA+C,KAAKuB,KAAL,CAAWtB,KAA1D;AACA,UAAIgC,MAAM,GAAG,KAAKX,KAAL,CAAWW,MAAxB;;AACA,aAAOA,MAAM,CAACX,KAAP,CAAaW,MAApB,EAA4B;AAC1BA,QAAAA,MAAM,GAAGA,MAAM,CAACX,KAAP,CAAaW,MAAtB;AACD;;AACDA,MAAAA,MAAM,CAACP,QAAP,CAAgB;AAACb,QAAAA,SAAS,EAAEA;AAAZ,OAAhB;AACD;;AACDqB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,SAAZ,EAAuBuE,EAAE,CAACC,MAAH,CAAUC,KAAjC;AACD;;AACD7D,EAAAA,cAAc,GAAG;AACf,QAAIsF,MAAM,GAAG,KAAKxF,KAAL,CAAW1B,IAAX,CAAgBmH,QAA7B;;AACA,QAAID,MAAM,KAAK,UAAf,EAA2B;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAA1C,MACK;AAAEA,MAAAA,MAAM,GAAG,UAAT;AAAqB;;AAC5B,SAAKrF,QAAL,CAAcwC,SAAS,KAAK;AAC1BrE,MAAAA,IAAI,EAAE,EAAC,GAAGqE,SAAS,CAACrE,IAAd;AAAoBmH,QAAAA,QAAQ,EAAED;AAA9B;AADoB,KAAL,CAAvB;AAEA,SAAKjB,cAAL,CAAoB,MAApB;AACD;;AACDmB,EAAAA,eAAe,GAAG;AAChB,QAAIF,MAAM,GAAG,KAAKxF,KAAL,CAAW1B,IAAX,CAAgBqH,SAA7B;;AACA,QAAIH,MAAM,KAAK,WAAf,EAA4B;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAA3C,MACK;AAAEA,MAAAA,MAAM,GAAG,WAAT;AAAsB;;AAC7B,SAAKrF,QAAL,CAAcwC,SAAS,KAAK;AAC1BrE,MAAAA,IAAI,EAAE,EAAC,GAAGqE,SAAS,CAACrE,IAAd;AAAoBqH,QAAAA,SAAS,EAAEH,MAA/B;AAAuCI,QAAAA,KAAK,EAAE;AAA9C;AADoB,KAAL,CAAvB;AAEA,SAAKrB,cAAL,CAAoB,MAApB;AACD;;AACDsB,EAAAA,WAAW,GAAG;AACZ,QAAIL,MAAM,GAAG,KAAKxF,KAAL,CAAW1B,IAAX,CAAgBsH,KAA7B;;AACA,QAAIJ,MAAM,KAAK,OAAf,EAAwB;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAAvC,MACK;AAAEA,MAAAA,MAAM,GAAG,OAAT;AAAkB;;AACzB,SAAKrF,QAAL,CAAcwC,SAAS,KAAK;AAC1BrE,MAAAA,IAAI,EAAE,EAAC,GAAGqE,SAAS,CAACrE,IAAd;AAAoBsH,QAAAA,KAAK,EAAEJ,MAA3B;AAAmCG,QAAAA,SAAS,EAAE;AAA9C;AADoB,KAAL,CAAvB;AAEA,SAAKpB,cAAL,CAAoB,MAApB;AACD;;AACDuB,EAAAA,cAAc,GAAG;AACf,QAAIN,MAAM,GAAG,KAAKxF,KAAL,CAAW1B,IAAX,CAAgBoG,SAA7B;;AACA,QAAIc,MAAM,KAAK,WAAf,EAA4B;AAAEA,MAAAA,MAAM,GAAG,EAAT;AAAa,KAA3C,MACK;AAAEA,MAAAA,MAAM,GAAG,WAAT;AAAsB;;AAC7B,SAAKrF,QAAL,CAAcwC,SAAS,KAAK;AAC1BrE,MAAAA,IAAI,EAAE,EAAC,GAAGqE,SAAS,CAACrE,IAAd;AAAoBoG,QAAAA,SAAS,EAAEc;AAA/B;AADoB,KAAL,CAAvB;AAEA,SAAKjB,cAAL,CAAoB,MAApB;AACD;;AACDwB,EAAAA,UAAU,GAAG;AACX,UAAMvH,QAAQ,GAAG,KAAKwB,KAAL,CAAWU,MAAX,CAAkBV,KAAlB,CAAwBxB,QAAzC;AACA,UAAMwH,WAAW,GAAGxH,QAAQ,CAACyH,SAAT,CAAmBxC,CAAC,IAAI;AAC1C,aAAOA,CAAC,CAAChF,EAAF,KAAS,KAAKuB,KAAL,CAAWvB,EAA3B;AACD,KAFmB,CAApB;AAGAD,IAAAA,QAAQ,CAAC0H,MAAT,CAAgBF,WAAhB,EAA6B,CAA7B;AACAzG,IAAAA,QAAQ,GAAG,KAAKS,KAAL,CAAWU,MAAtB;AACA,SAAKV,KAAL,CAAWU,MAAX,CAAkBP,QAAlB,CAA2B;AAAC3B,MAAAA,QAAQ,EAAEA;AAAX,KAA3B;AACAgB,IAAAA,aAAa,GAAG,IAAhB;AACA2G,IAAAA,UAAU,CAAC,YAAY;AAAC3G,MAAAA,aAAa,GAAG,KAAhB;AAAsB,KAApC,EAAsC,GAAtC,CAAV;AACD;;AACD4G,EAAAA,iBAAiB,GAAG;AAClB,SAAKxC,WAAL,CAAiB;AAACE,MAAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAE,KAAK/D,KAAL,CAAWtB;AAAnB;AAAT,KAAjB;AACA,SAAK2H,OAAL,CAAatB,OAAb,CAAqBuB,KAArB;AACArC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDhG,EAAAA,MAAM,GAAG;AACP;AACA,SAAKsG,cAAL,GAAsB,KAAKA,cAAL,CAAoB3C,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAK1B,cAAL,GAAsB,KAAKA,cAAL,CAAoB0B,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAK8D,eAAL,GAAuB,KAAKA,eAAL,CAAqB9D,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKiE,WAAL,GAAmB,KAAKA,WAAL,CAAiBjE,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKmE,UAAL,GAAkB,KAAKA,UAAL,CAAgBnE,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK+B,QAAL,gBAAgB/F,KAAK,CAACkE,SAAN,EAAhB;AACA,SAAKyE,aAAL,gBAAqB3I,KAAK,CAACkE,SAAN,EAArB;AACA,SAAKuE,OAAL,gBAAezI,KAAK,CAACkE,SAAN,EAAf;AACA,SAAKgD,UAAL,gBAAkBlH,KAAK,CAACkE,SAAN,EAAlB;AACA,SAAK0E,aAAL,gBAAqB5I,KAAK,CAACkE,SAAN,EAArB;AACA,UAAM2E,YAAY,GAAG,KAAKzG,KAAL,CAAWxB,QAAX,CAAoBuE,MAApB,GAA6B,CAA7B,GACnB,SADmB,GACP,EADd;AAEA,UAAM2D,QAAQ,GAAG,KAAK1G,KAAL,CAAW1B,IAAX,CAAgBkG,SAAhB,CAA0BzB,MAA1B,GAAmC,CAAnC,IACf,KAAK/C,KAAL,CAAW1B,IAAX,CAAgBmG,OAAhB,CAAwB1B,MAAxB,GAAiC,CADlB,GACsB,OADtB,GACgC,EADjD;;AAEA,UAAM4D,UAAU,gBACd;AAAO,MAAA,SAAS,EAAC,wBAAjB;AACA,MAAA,KAAK,EAAE,KAAK3G,KAAL,CAAW1B,IAAX,CAAgBkG,SADvB;AAEA,MAAA,QAAQ,EAAGX,EAAD,IAAQ,KAAKoB,eAAL,CAAqBpB,EAArB,CAFlB;AAGA,MAAA,GAAG,EAAE,KAAK2C;AAHV;AAAA;AAAA;AAAA;AAAA,YADF;;AAKA,UAAMI,QAAQ,gBACZ;AAAO,MAAA,SAAS,EAAC,sBAAjB;AACA,MAAA,KAAK,EAAE,KAAK5G,KAAL,CAAW1B,IAAX,CAAgBmG,OADvB;AAEA,MAAA,QAAQ,EAAGZ,EAAD,IAAQ,KAAKqB,aAAL,CAAmBrB,EAAnB;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,CArBO,CA0BP;;;AACA,wBACE;AACA,MAAA,SAAS,EAAE,UAAU,KAAK7D,KAAL,CAAW1B,IAAX,CAAgBqH,SAA1B,GACT,GADS,GACH,KAAK3F,KAAL,CAAW1B,IAAX,CAAgBmH,QADb,GAET,GAFS,GAEH,KAAKzF,KAAL,CAAW1B,IAAX,CAAgBsH,KAFb,GAGT,GAHS,GAGHa,YAHG,GAIT,GAJS,GAIHC,QAJG,GAKT,GALS,GAKH,KAAK1G,KAAL,CAAW1B,IAAX,CAAgBoG,SANxB;AAOA,MAAA,OAAO,EAAE,MAAM;AAACT,QAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB,OAPjC;AAAA,8BASE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAGJ,EAAD,IAAQ,KAAKU,cAAL,CAAoBV,EAApB,CAAxC;AACE,QAAA,GAAG,EAAE,KAAK0C,aADZ;AAAA,+BAEE;AAAK,UAAA,SAAS,EAAE,aAAa,KAAKvG,KAAL,CAAWuE,cAAxC;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,KAAK,EAAE;AAAC7E,cAAAA,KAAK,EAAE,MAAR;AAChCmH,cAAAA,YAAY,EAAE;AADkB,aAAlC;AAAA,oCAEE;AACE,cAAA,SAAS,EAAE,YAAY,KAAK7G,KAAL,CAAW1B,IAAX,CAAgBmH,QADzC;AAEE,cAAA,OAAO,EAAE,KAAKvF,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME;AACE,cAAA,SAAS,EAAE,YAAY,KAAKF,KAAL,CAAW1B,IAAX,CAAgBqH,SADzC;AAEE,cAAA,OAAO,EAAE,KAAKD,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAUE;AACE,cAAA,SAAS,EAAE,YAAY,KAAK1F,KAAL,CAAW1B,IAAX,CAAgBsH,KADzC;AAEE,cAAA,OAAO,EAAE,KAAKC,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAcE;AACE,cAAA,SAAS,EAAE,QADb;AAEE,cAAA,OAAO,EAAE,KAAKE,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,eAkBE;AACE,cAAA,SAAS,EAAE,QADb;AAEE,cAAA,OAAO,EAAE,MAAM;AACb1F,gBAAAA,OAAO,CAAC,MAAD,CAAP;AACA,qBAAKkE,cAAL,CAAoB,MAApB;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAyBE;AACE,cAAA,SAAS,EAAE,QADb;AAEE,cAAA,OAAO,EAAE,MAAM,KAAKuB,cAAL,EAFjB;AAAA,wBAGG;AAHH;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EA+BGa,UA/BH,EAgCGC,QAhCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cATF,eA8CE;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA,kBAAyC,KAAK5G,KAAL,CAAW1B,IAAX,CAAgBkG;AAAzD;AAAA;AAAA;AAAA;AAAA,cA9CF,eA+CE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA,kBAAuC,KAAKxE,KAAL,CAAW1B,IAAX,CAAgBmG;AAAvD;AAAA;AAAA;AAAA;AAAA,cA/CF,eAgDE;AAAU,QAAA,SAAS,EAAC,SAApB;AAA8B,QAAA,KAAK,EAAE,KAAKzE,KAAL,CAAWtB,KAAhD;AACE,QAAA,QAAQ,EAAGmF,EAAD,IAAQ,KAAKD,WAAL,CAAiBC,EAAjB,CADpB;AAC0C,QAAA,GAAG,EAAE,KAAKwC,OADpD;AAEE,QAAA,KAAK,EAAE;AAACS,UAAAA,MAAM,EAAE,KAAK9G,KAAL,CAAW6E;AAApB;AAFT;AAAA;AAAA;AAAA;AAAA,cAhDF,eAmDE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AACE,QAAA,GAAG,EAAE,KAAKC,UADZ;AAEE,QAAA,KAAK,EAAE;AAACpF,UAAAA,KAAK,EAAE,KAAKM,KAAL,CAAW+G;AAAnB,SAFT;AAAA,kBAGG,KAAK/G,KAAL,CAAWtB,KAAX,GAAmB;AAHtB;AAAA;AAAA;AAAA;AAAA,cAnDF,eAuDE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAKiF,QAApB;AAA8B,QAAA,QAAQ,EAAE,KAAK3D,KAAL,CAAWxB,QAAnD;AACE,QAAA,MAAM,EAAE;AADV;AAAA;AAAA;AAAA;AAAA,cAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4DD;;AAtMgC;;AAyMnC,SAAS6B,OAAT,CAAiB2G,IAAjB,EAAuB;AACrB;AACA,MAAIC,EAAJ;;AACA,MAAID,IAAI,IAAI,MAAR,IAAkB,CAACzH,QAAQ,CAACS,KAAT,CAAeU,MAAtC,EAA8C;AAC5CuG,IAAAA,EAAE,GAAG1H,QAAL;AACD,GAFD,MAEO,IAAIyH,IAAI,IAAI,MAAR,IAAkBzH,QAAQ,CAACS,KAAT,CAAeU,MAArC,EAA6C;AAClDuG,IAAAA,EAAE,GAAG1H,QAAQ,CAACS,KAAT,CAAeU,MAApB;AACD;;AACD,QAAMwG,KAAK,GAAG,IAAIrI,IAAJ,EAAd;AACA,QAAM+D,GAAG,GAAGsE,KAAK,CAACpI,OAAN,EAAZ;AACA,QAAMuB,OAAO,GAAG;AACd5B,IAAAA,EAAE,EAAEG,MAAM,CAACgE,GAAD,CADI;AAEdtE,IAAAA,IAAI,EAAE;AAACmH,MAAAA,QAAQ,EAAE,EAAX;AAAejB,MAAAA,SAAS,EAAE,EAA1B;AAA8BC,MAAAA,OAAO,EAAE;AAAvC,KAFQ;AAGd/F,IAAAA,KAAK,EAAE,EAHO;AAIdF,IAAAA,QAAQ,EAAE;AAJI,GAAhB;AAMAiB,EAAAA,UAAU,GAAGY,OAAb;AACAG,EAAAA,SAAS,CAACwG,IAAD,CAAT;AACD;;AAED,SAAS/C,UAAT,CAAoBgD,EAApB,EAAwB;AACtB;AACA,MAAIzH,aAAJ,EAAmB;;AACnB,MAAIyH,EAAE,YAAY/C,QAAlB,EAA4B;AAC1B;AACD;;AACDvD,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBqG,EAAzB;AACAzH,EAAAA,aAAa,GAAG,IAAhB;AACA2G,EAAAA,UAAU,CAAC,YAAY;AAAE3G,IAAAA,aAAa,GAAG,KAAhB;AAAuB,GAAtC,EAAwC,GAAxC,CAAV;;AACA,MAAID,QAAQ,IAAI0H,EAAhB,EAAoB;AAClB;AACD;;AACD,MAAI1H,QAAJ,EAAc;AACZ4H,IAAAA,IAAI,CAAC5H,QAAD,EAAW,MAAX,CAAJ;AACD;;AACD,MAAIA,QAAQ,YAAY+E,IAApB,IAA4B2C,EAAE,IAAI1H,QAAtC,EAAgD;AAC9CA,IAAAA,QAAQ,CAACgF,cAAT,CAAwB;AAACT,MAAAA,MAAM,EAAEsD;AAAT,KAAxB,EAA6C,MAA7C;AACD;;AACD7H,EAAAA,QAAQ,GAAG0H,EAAX;AACD;;AAED,SAASE,IAAT,CAAc9C,IAAd,EAAoBgD,QAApB,EAA8B;AAC5B;AACA,MAAI3G,MAAM,GAAG2D,IAAI,CAACtE,KAAL,CAAWW,MAAxB;AACA,MAAI4G,OAAO,GAAG,CAACjD,IAAI,CAACtE,KAAL,CAAWtB,EAAZ,CAAd;;AACA,SAAOiC,MAAM,IAAIA,MAAM,CAACX,KAAP,CAAatB,EAA9B,EAAkC;AAChC6I,IAAAA,OAAO,CAACnE,IAAR,CAAazC,MAAM,CAACX,KAAP,CAAatB,EAA1B;AACAiC,IAAAA,MAAM,GAAGA,MAAM,CAACX,KAAP,CAAaW,MAAtB;AACD;;AACD4G,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,EAAV;AACA,MAAIC,YAAY,GAAGvI,IAAI,CAACqI,OAAO,CAAC,CAAD,CAAR,CAAvB;AACA,MAAIlE,QAAJ;;AACA,MAAIiE,QAAQ,KAAK,MAAjB,EAAyB;AACvB;AACAjE,IAAAA,QAAQ,GAAG,CAAX;AACD,GAHD,MAGO,IAAIiE,QAAQ,KAAK,MAAb,IAAuB,CAACA,QAA5B,EAAsC;AAC3C;AACAjE,IAAAA,QAAQ,GAAG,CAAC,CAAZ;AACD;;AACD,OAAK,IAAIqE,QAAT,IAAqBH,OAAO,CAAC/D,KAAR,CAAc,CAAd,EAAiB+D,OAAO,CAACvE,MAAR,GAAiBK,QAAlC,CAArB,EAAkE;AAChEoE,IAAAA,YAAY,GAAGA,YAAY,CAAChJ,QAAb,CAAsBkJ,IAAtB,CAA2BjE,CAAC,IAAIA,CAAC,CAAChF,EAAF,KAASgJ,QAAzC,CAAf;AACD;;AACDD,EAAAA,YAAY,CAAC9I,KAAb,GAAqB2F,IAAI,CAACrE,KAAL,CAAWtB,KAAhC;AACA8I,EAAAA,YAAY,CAAChJ,QAAb,GAAwB6F,IAAI,CAACrE,KAAL,CAAWxB,QAAnC;AACAgJ,EAAAA,YAAY,CAAClJ,IAAb,GAAoB+F,IAAI,CAACrE,KAAL,CAAW1B,IAA/B;AACAY,EAAAA,YAAY,CAACyI,OAAb,CAAqB,MAArB,EAA6BvI,IAAI,CAACwI,SAAL,CAAe3I,IAAf,CAA7B;AACD;;AAED,SAASqB,OAAT,GAAmB;AACjB,MAAI,CAACf,QAAD,IAAaA,QAAQ,YAAYmE,IAArC,EAA2C;AAC3CnD,EAAAA,QAAQ;AACRhB,EAAAA,QAAQ,CAACwG,UAAT;AACD;;AAED,SAASxF,QAAT,GAAoB;AAClB,MAAI,CAAChB,QAAD,IAAaA,QAAQ,YAAYmE,IAArC,EAA2C;AAC3C,QAAM1D,KAAK,GAAGT,QAAQ,CAACS,KAAvB;AACAP,EAAAA,UAAU,GAAG;AAACf,IAAAA,KAAK,EAAEsB,KAAK,CAACtB,KAAd;AAAqBD,IAAAA,EAAE,EAAEc,QAAQ,CAACQ,KAAT,CAAetB,EAAxC;AACXH,IAAAA,IAAI,EAAE,EAAC,GAAG0B,KAAK,CAAC1B;AAAV,KADK;AACYE,IAAAA,QAAQ,EAAEwB,KAAK,CAACxB,QAAN,CAAeqJ,MAAf;AADtB,GAAb;AAED;;AAED,SAASrH,SAAT,CAAmBwG,IAAnB,EAAyB;AACvB,MAAI,CAACzH,QAAL,EAAe;;AACf,MAAIA,QAAQ,YAAYmE,IAApB,IAA4BsD,IAAI,KAAK,MAAzC,EAAiD;AAC/C,UAAMxI,QAAQ,GAAGe,QAAQ,CAACS,KAAT,CAAexB,QAAhC;AACAA,IAAAA,QAAQ,CAAC0H,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBzG,UAAtB;AACAF,IAAAA,QAAQ,CAACY,QAAT,CAAkB;AAAC3B,MAAAA,QAAQ,EAAEA;AAAX,KAAlB;AACA2I,IAAAA,IAAI,CAAC5H,QAAD,EAAW,MAAX,CAAJ;AACD,GALD,MAKO,IAAIA,QAAQ,YAAY+E,IAApB,IAA4B0C,IAAI,KAAK,MAAzC,EAAiD;AACtD,UAAMxI,QAAQ,GAAGe,QAAQ,CAACS,KAAT,CAAeU,MAAf,CAAsBV,KAAtB,CAA4BxB,QAA7C;AACA,UAAMsJ,WAAW,GAAGtJ,QAAQ,CAACyH,SAAT,CAAmBxC,CAAC,IAAIA,CAAC,CAAChF,EAAF,IAAQc,QAAQ,CAACQ,KAAT,CAAetB,EAA/C,IAAqD,CAAzE;AACAD,IAAAA,QAAQ,CAAC0H,MAAT,CAAgB4B,WAAhB,EAA6B,CAA7B,EAAgCrI,UAAhC;AACAF,IAAAA,QAAQ,CAACS,KAAT,CAAeU,MAAf,CAAsBP,QAAtB,CAA+B;AAAC3B,MAAAA,QAAQ,EAAEA;AAAX,KAA/B;AACA2I,IAAAA,IAAI,CAAC5H,QAAD,EAAW,MAAX,CAAJ;AACD;AACF;;AAED,SAASkB,MAAT,GAAkB;AAChB,QAAMmC,GAAG,GAAG,IAAI/D,IAAJ,EAAZ,CADgB,CAEhB;AACA;;AACA8B,EAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAACwI,SAAL,CAAe3I,IAAf,CAAZ;AACD;;AAED,SAAS8I,QAAT,CAAkBlE,EAAlB,EAAsB;AACpB,MAAIA,EAAE,CAACmE,OAAH,IAAcnE,EAAE,CAACoE,QAArB,EAA+B;AAC7BtH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,YAAQiD,EAAE,CAACqE,GAAX;AACE,WAAK,GAAL;AACE1H,QAAAA,SAAS,CAAC,MAAD,CAAT;AACA;;AACF,WAAK,GAAL;AACEH,QAAAA,OAAO,CAAC,MAAD,CAAP;AACA;;AACF;AACE;AARJ;AAUD,GAZD,MAYO,IAAIwD,EAAE,CAACmE,OAAP,EAAgB;AACrB,YAAQnE,EAAE,CAACqE,GAAX;AACE,WAAK,GAAL;AACE5H,QAAAA,OAAO;AACP;;AACF,WAAK,GAAL;AACEC,QAAAA,QAAQ;AACR;;AACF,WAAK,GAAL;AACEC,QAAAA,SAAS;AACT;;AACF,WAAK,GAAL;AACEH,QAAAA,OAAO;AACP;;AACF,WAAK,WAAL;AACE,YAAId,QAAQ,IAAIA,QAAQ,YAAY+E,IAApC,EAA0C;AACxC/E,UAAAA,QAAQ,CAACwG,UAAT;AACD;;AACH,WAAK,GAAL;AACE,YAAIxG,QAAQ,IAAIA,QAAQ,YAAY+E,IAApC,EAA0C;AACxC/E,UAAAA,QAAQ,CAACgF,cAAT,CAAwB;AAACT,YAAAA,MAAM,EAAE9F,CAAC,CAAC,SAAD;AAAV,WAAxB;;AACA,cAAIuB,QAAQ,CAACS,KAAT,CAAeuE,cAAf,KAAkC,MAAtC,EAA8C;AAC5ChF,YAAAA,QAAQ,CAACiH,aAAT,CAAuBzB,OAAvB,CAA+BuB,KAA/B;AACD,WAFD,MAEO;AACL/G,YAAAA,QAAQ,CAAC8G,OAAT,CAAiBtB,OAAjB,CAAyBuB,KAAzB;AACD;AACF;;AAAA;AACD;;AACF;AACE;AA5BJ;AA8BD,GA/BM,MA+BA,IAAI,CAACzC,EAAE,CAACsE,OAAJ,IAAe,CAACtE,EAAE,CAACmE,OAAnB,IAA8B,CAACnE,EAAE,CAACuE,MAAtC,EAA8C;AACnD,YAAQvE,EAAE,CAACqE,GAAX;AACE,WAAK,QAAL;AACErE,QAAAA,EAAE,CAACwE,cAAH;AACAC,QAAAA,QAAQ,CAACC,aAAT,CAAuBC,IAAvB;AACAvE,QAAAA,UAAU,CAACmD,SAAD,CAAV;AACA;;AACF;AACE;AAPJ;AASD;AACF;;AAED,SAASqB,IAAT,GAAgB;AACdlJ,EAAAA,QAAQ,GAAG6H,SAAX;AACA1H,EAAAA,KAAK,GAAGwC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B,CAAR;AACA1C,EAAAA,SAAS,GAAGuC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,GAAoB,GAA/B,CAAZ;AACAvE,EAAAA,QAAQ,CAACG,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAyBqK,QAAQ,CAACI,cAAT,CAAwB,MAAxB,CAAzB;AACA1K,EAAAA,CAAC,CAACsK,QAAD,CAAD,CAAYhG,EAAZ,CAAe,SAAf,EAA0ByF,QAA1B;AACD;;AAEDU,IAAI","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import \"./react-datepicker.css\";\nconst fs = require('fs');\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:String(new Date().getTime()), title: new Date().toDateString(), subtasks: [], info: {}}\n    ]}, \n  settings: {}\n};\n\nvar data = !localStorage.getItem('data') ? { resetData } :\n  JSON.parse(localStorage.getItem('data'));\n\nvar deadlines = {};\n// var data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hideComplete: ''};\n  }\n  toggleComplete() {\n    if (this.state.hideComplete == '') {\n      this.setState({hideComplete: 'hideComplete'});\n    } else {\n      this.setState({hideComplete: ''});\n    }\n  }\n  render () {\n    return (\n      <>\n        <StatusBar parent={this} />\n        <div className={'container ' + this.state.hideComplete}>\n          <Frame id='bank' info={data['river'].info} \n            subtasks={data['bank'].subtasks} />\n          <Frame id='river' info={data['river'].info} \n            subtasks={data['river'].subtasks} />\n        </div>\n      </>\n    )\n  }\n}\n\nclass StatusBar extends React.Component {\n  render() {\n    return (\n      <div className='statusBar'>\n        <input className='searchBar'></input>\n        <div className='buttonBar'>\n          <button className='button' onClick={newTask}>+</button>\n          <button className='button' onClick={cutTask}>x</button>\n          <button className='button' onClick={copyTask}>c</button>\n          <button className='button' onClick={pasteTask}>v</button>\n          <button className='button' onClick={backup}>backup</button>\n          <button \n            className={'button ' + this.props.parent.state.hideComplete} onClick={() => {\n              console.log(this.props.parent);\n              this.props.parent.toggleComplete();\n            }}>+√/-√</button>\n          <Timer />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {minutes: 0, seconds: 0};\n  }\n  startTimer(val) {\n    this.setState({minutes: this.state.minutes + val, seconds: 0});\n    this.play();\n  }\n  play(stopwatch, backwards) {\n    const multiplier = backwards ? -1 : 1;\n    clearInterval(this.interval);\n    if (stopwatch === 'stopwatch') {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 60) {\n          this.setState({minutes: (this.state.minutes + 1) * multiplier, \n            seconds: 0});\n        } else {\n          this.setState({seconds: this.state.seconds + 1});\n        }\n      }, 1000);\n    } else {\n      this.interval = setInterval(() => {\n        if (this.state.seconds === 0) {\n          if (this.state.minutes === 0) {\n            this.end();\n            this.play('stopwatch', true);\n          }\n          this.setState({minutes: (this.state.minutes - 1) * multiplier, \n            seconds: 59});\n        } else {\n          this.setState({seconds: this.state.seconds - 1});\n        }\n      }, 1000);\n    }\n  }\n  end() {\n    alert('timer complete');\n  }\n  playPause() {\n    clearInterval(this.interval);\n    this.setState({minutes: 0, seconds: 0});\n  }\n  render () {\n    this.startTimer = this.startTimer.bind(this);\n    this.playPause = this.playPause.bind(this);\n    this.play = this.play.bind(this);\n    this.audioRef = React.createRef();\n    return (\n      <div>\n        <div className='buttonBar'>\n          <button className='button' onClick={() => this.startTimer(50)}>50</button>\n          <button className='button' onClick={() => this.startTimer(25)}>25</button>\n          <button className='button' onClick={() => this.startTimer(10)}>10</button>\n          <button className='button' onClick={() => this.startTimer(5)}>5</button>\n          <button className='button' onClick={() => {\n            this.setState({minutes: 0, seconds: 1});\n            this.play();\n          }}>:5</button>\n          <button className='button' onClick={() => this.playPause()}>&#9632;</button>\n        </div>\n        <input className='timerBar' readOnly={true}\n          value={this.state.minutes + ':' + \n          String(this.state.seconds).padStart(2, '0')}></input>\n      </div>\n    )\n  }\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200), deadlines: deadlines};\n    $(window).on('resize', this.resizeCheck);\n  }\n  updateDeadlines() {\n    this.setState({deadlines: deadlines});\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    var lastDate = new Date(\n      this.state.lists[this.state.lists.length - 1].title\n    );\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      if (this.props.id === 'bank') {\n        var title = '';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + i);\n        var title = date.toDateString();\n      }\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: title, subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n          return (\n            <List key={x.id} id={x.id} title={x.title}\n              subtasks={x.subtasks} parent={this} \n              deadlines={deadlines[x.title]} />\n          )\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        {this.props.parent.props.id === 'bank' ?\n          <input className='listInput' value={this.state.title} \n          onChange={this.changeTitle}></input> :\n          <input readOnly className='listInput listTitle'\n            value={this.state.title}></input>\n        }\n        {this.props.parent.props.id == 'river' && \n        this.props.deadlines &&\n        <ul>\n          {this.props.deadlines.map(x => {\n            <li>x</li>\n          })}\n        </ul>}\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'\n    };\n    if (!this.state.info.startDate) this.state.info.startDate = '';\n    if (!this.state.info.endDate) this.state.info.endDate = '';\n    if (!this.state.info.collapsed) this.state.info.collapsed = '';\n  }\n  displayOptions(ev, showHide) {\n    console.log(ev);\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, startDate: ev.target.value}})); \n  }\n  changeEndDate(ev) { \n    if (this.state.info.endDate.includes('-')) {\n      // delete deadline string if no longer there\n      const deadline = this.state.info.endDate.split('-');\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) + 1);\n      now.setDate(Number(deadline[1]));\n      delete deadlines[now.toDateString()][this.props.id];\n    }\n    this.setState(prevState => ({\n      info: {...prevState.info, endDate: ev.target.value}})); \n    if (ev.target.value.includes('-')) {\n      // process deadline string\n      const deadline = ev.target.value.split('-');\n      console.log(deadline);\n      const now = new Date();\n      now.setMonth(Number(deadline[0]) + 1);\n      now.setDate(Number(deadline[1]));\n      console.log(now);\n      if (!deadlines[now.toDateString()]) {\n        deadlines[now.toDateString()] = {};\n      }\n      deadlines[now.toDateString()][this.props.id] = this.state.title;\n      let parent = this.props.parent;\n      while (parent.props.parent) {\n        parent = parent.props.parent;\n      }\n      parent.setState({deadlines: deadlines});\n    }\n    console.log(deadlines, ev.target.value);\n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n    this.displayOptions('hide');\n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n    this.displayOptions('hide');\n  }\n  toggleCollapse() {\n    let status = this.state.info.collapsed\n    if (status === 'collapsed') { status = '' }\n    else { status = 'collapsed' }\n    this.setState(prevState => ({\n      info: {...prevState.info, collapsed: status}})); \n    this.displayOptions('hide');\n  }\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(function () {preventSelect = false}, 500);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    this.startDateSpan = React.createRef();\n    const headingClass = this.state.subtasks.length > 0 ? \n      'heading' : '';\n    const hasTimes = this.state.info.startDate.length > 0 && \n      this.state.info.endDate.length > 0 ? 'event' : '';\n    const startInput = \n      <input className='optionsInput startDate' \n      value={this.state.info.startDate} \n      onChange={(ev) => this.changeStartDate(ev)}\n      ref={this.startDateSpan}></input>\n    const endInput = \n      <input className='optionsInput endDate' \n      value={this.state.info.endDate} \n      onChange={(ev) => this.changeEndDate(ev)}>\n      </input>\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe + \n        ' ' + headingClass + \n        ' ' + hasTimes + \n        ' ' + this.state.info.collapsed} \n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <div className='buttonBar' style={{width: '100%', \n              alignContent: 'center'}}>\n              <button \n                className={'button ' + this.state.info.complete}\n                onClick={this.toggleComplete}>\n                √</button>\n              <button \n                className={'button ' + this.state.info.important}\n                onClick={this.toggleImportant}>\n                !</button>\n              <button \n                className={'button ' + this.state.info.maybe}\n                onClick={this.toggleMaybe}>\n                ?</button>\n              <button \n                className={'button'}\n                onClick={this.deleteThis}>\n                x</button>\n              <button \n                className={'button'}\n                onClick={() => {\n                  newTask('task');\n                  this.displayOptions('hide');\n                }}>\n                +</button>\n              <button \n                className={'button'}\n                onClick={() => this.toggleCollapse()}>\n                {'[]'}</button>\n            </div>\n            {startInput}\n            {endInput}\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + 'x'}</span>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: '', startDate: '', endDate: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask(type);\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  if (selected == el) {\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask(type) {\n  if (!selected) return;\n  if (selected instanceof List || type === 'task') {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task || type === 'list') {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction backup() {\n  const now = new Date();\n  // fs.writeFile('file.txt', JSON.stringify('data'), \n  // (err) => { if (err) throw err; console.log('success'); } );\n  console.log(JSON.stringify(data));\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey && ev.shiftKey) {\n    console.log('sthing');\n    switch (ev.key) {\n      case 'V':\n        pasteTask('task');\n        break;\n      case 'N':\n        newTask('task');\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({target: $('<p></p>')});\n          if (selected.state.displayOptions === 'show') {\n            selected.startDateSpan.current.focus();\n          } else {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        ev.preventDefault();\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render(<App />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}