{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/Frame/Frame.js\";\nimport React from 'react';\nimport './Frame.css';\nimport * as display from '../../services/display/display';\nimport * as util from '../../services/util/util';\nimport List from '../List/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Frame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeIndex = (val, set) => {\n      let newIndex;\n\n      if (set === true) {\n        newIndex = val;\n      } else {\n        newIndex = this.state.info.index + val;\n      }\n\n      if (newIndex > 0 && window.data.tasks[this.state.subtasks[newIndex - 1]].title === '--') {\n        return;\n      }\n\n      if (set !== undefined && newIndex > this.state.info.index && this.props.id === 'bank') {\n        newIndex -= this.state.width - 1;\n      }\n\n      if (newIndex < 0) newIndex = 0;\n      this.setState(prevState => ({\n        info: { ...prevState.info,\n          index: newIndex\n        }\n      }));\n    };\n\n    this.state = {\n      subtasks: props.subtasks,\n      info: props.info,\n      width: display.processWidth(props.info.focused),\n      zoomed: ''\n    };\n\n    if (props.id === 'river') {\n      this.state.repeats = window.data.settings.repeats;\n    }\n  }\n\n  render() {\n    const lastDate = new Date(window.data.tasks[this.state.subtasks[this.state.subtasks.length - 1]].title);\n    let j = 0;\n    let c = Math.floor(Math.random() * 1000);\n\n    while (this.state.subtasks.length < this.state.info.index + 7) {\n      j++;\n      var title;\n\n      if (this.props.id === 'bank') {\n        title = '--';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + j);\n        title = date.toDateString();\n      }\n\n      const now = new Date();\n      const id = now.getTime(); // preventing overlap\n\n      let i = Math.floor(Math.random() * 1000) + c;\n\n      while (window.data.tasks[String(id + i)] !== undefined) {\n        i += 1;\n      }\n\n      window.data.tasks[String(id + i)] = {\n        title: title,\n        subtasks: [],\n        info: {}\n      };\n      this.state.subtasks.push(String(id + i));\n    }\n\n    var resizeCheck = () => {\n      if (this.state.width !== display.processWidth(this.state.info.focused)) {\n        this.setState({\n          width: display.processWidth(this.state.info.focused)\n        });\n      }\n    };\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck); // const shownLists =\n    //   this.state.subtasks.slice(this.state.info.index, endIndex);\n\n    const shownLists = this.state.subtasks;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `frameContainer \n        ${this.state.info.focused} ${this.state.zoomed}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: this.props.id,\n        className: 'frame',\n        children: [shownLists.map(x => {\n          this.frames.push( /*#__PURE__*/React.createRef());\n          const task = window.data.tasks[x];\n\n          if (this.props.id === 'river') {\n            // render state correctly in original lists\n            return /*#__PURE__*/_jsxDEV(List, {\n              id: x,\n              title: task.title,\n              subtasks: task.subtasks,\n              parent: this,\n              deadlines: this.props.deadlines[task.title],\n              startdates: this.props.startdates[task.title],\n              repeats: this.state.repeats[util.dateFormat(task.title).slice(0, 3)],\n              ref: this.frames[this.frames.length - 1]\n            }, x, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(List, {\n              id: x,\n              title: task.title,\n              subtasks: task.subtasks,\n              parent: this,\n              ref: this.frames[this.frames.length - 1]\n            }, x, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"changeButton\",\n          onClick: () => this.addList(),\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/Frame/Frame.js"],"names":["React","display","util","List","Frame","Component","constructor","props","changeIndex","val","set","newIndex","state","info","index","window","data","tasks","subtasks","title","undefined","id","width","setState","prevState","processWidth","focused","zoomed","repeats","settings","render","lastDate","Date","length","j","c","Math","floor","random","date","getTime","setDate","getDate","toDateString","now","i","String","push","resizeCheck","endIndex","frames","addEventListener","shownLists","map","x","createRef","task","deadlines","startdates","dateFormat","slice","addList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Frame.css';\nimport * as display from '../../services/display/display';\nimport * as util from '../../services/util/util';\nimport List from '../List/List';\n\nexport default class Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtasks: props.subtasks, info: props.info,\n      width: display.processWidth(props.info.focused),\n      zoomed: '',\n    };\n    if (props.id === 'river') {\n      this.state.repeats = window.data.settings.repeats;\n    }\n  }\n  changeIndex = (val, set) => {\n    let newIndex;\n    if (set === true) {\n      newIndex = val;\n    } else {\n      newIndex = this.state.info.index + val;\n    }\n    if (newIndex > 0 &&\n      window.data.tasks[this.state.subtasks[newIndex - 1]].title === '--') {\n      return;\n    }\n    if (\n      set !== undefined && \n      newIndex > this.state.info.index && \n      this.props.id === 'bank'\n    ) {\n      newIndex -= (this.state.width - 1);\n    }\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info, index: newIndex }\n    }));\n  }\n  render() {\n    const lastDate = new Date(\n      window.data.tasks[this.state.subtasks[this.state.subtasks.length - 1]].title);\n    let j = 0;\n    let c = Math.floor(Math.random() * 1000);\n    while (this.state.subtasks.length < this.state.info.index + 7) {\n      j++;\n      var title;\n      if (this.props.id === 'bank') {\n        title = '--';\n      } else if (this.props.id === 'river') {\n        const date = new Date(lastDate.getTime());\n        date.setDate(lastDate.getDate() + j);\n        title = date.toDateString();\n      }\n      const now = new Date();\n      const id = now.getTime();\n      // preventing overlap\n      let i = Math.floor(Math.random() * 1000) + c;\n      while (window.data.tasks[String(id + i)] !== undefined) {\n        i += 1;\n      }\n      window.data.tasks[String(id + i)] = { title: title, subtasks: [], info: {} };\n      this.state.subtasks.push(String(id + i));\n    }\n    var resizeCheck = () => {\n      if (this.state.width !== display.processWidth(this.state.info.focused)) {\n        this.setState({ width: display.processWidth(this.state.info.focused) });\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.frames = [];\n    window.addEventListener('resize', resizeCheck);\n    // const shownLists =\n    //   this.state.subtasks.slice(this.state.info.index, endIndex);\n    const shownLists = this.state.subtasks;\n    return (\n      <div className={`frameContainer \n        ${this.state.info.focused} ${this.state.zoomed}`}>\n        <div id={this.props.id}\n          className={'frame'}>\n          {shownLists.map(x => {\n            this.frames.push(React.createRef());\n            const task = window.data.tasks[x];\n            if (this.props.id === 'river') {\n              // render state correctly in original lists\n              return (\n                <List key={x} id={x} title={task.title}\n                  subtasks={task.subtasks} parent={this}\n                  deadlines={this.props.deadlines[task.title]}\n                  startdates={this.props.startdates[task.title]}\n                  repeats={this.state.repeats[util.dateFormat(task.title)\n                    .slice(0, 3)]}\n                  ref={this.frames[this.frames.length - 1]} />\n              )\n            } else {\n              return (\n                <List key={x} id={x} title={task.title}\n                  subtasks={task.subtasks} parent={this}\n                  ref={this.frames[this.frames.length - 1]} />\n              )\n            }\n          })}\n          <button className='changeButton'\n            onClick={() => this.addList()}>&gt;</button>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}