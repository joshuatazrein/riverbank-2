{"ast":null,"code":"import * as display from '../display/display';\nimport * as edit from '../edit/edit';\nexport function keyComms(ev) {\n  if (!ev.ctrlKey) {\n    if (ev.key === 'Enter' && !window.preventReturn) {\n      ev.preventDefault();\n\n      if (ev.shiftKey) {\n        edit.newTask('task');\n      } else {\n        edit.newTask();\n      }\n\n      return;\n    } else if (ev.key === 'Escape' && !window.preventReturn) {\n      ev.preventDefault();\n      if (window.app.current.state.displayTable !== 'none') display.displayTable();\n      document.activeElement.blur();\n\n      if (selected) {\n        edit.save(selected, 'task');\n\n        if (selected instanceof Task && selected.state.displayOptions === 'show') {\n          selected.displayOptions('hide');\n        } else {\n          selected = undefined;\n        }\n      }\n\n      return;\n    }\n  }\n\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        edit.pasteTask('task');\n        break;\n\n      case 'N':\n        edit.newTask('task');\n        break;\n\n      case 'F':\n        ev.preventDefault();\n        display.zoom();\n        break;\n\n      case 'C':\n        // mirror task\n        edit.copyTask(true);\n        break;\n\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        ev.preventDefault();\n        edit.cutTask();\n        break;\n\n      case 'c':\n        ev.preventDefault();\n        edit.copyTask();\n        break;\n\n      case 'v':\n        ev.preventDefault();\n        edit.pasteTask();\n        break;\n\n      case 'n':\n        ev.preventDefault();\n        edit.newTask();\n        break;\n\n      case ']':\n        ev.preventDefault();\n        edit.indentTask();\n        break;\n\n      case '[':\n        ev.preventDefault();\n        edit.indentTask(true);\n        break;\n\n      case 'f':\n        ev.preventDefault();\n        focus();\n        break;\n\n      case 'z':\n        ev.preventDefault();\n        edit.undo();\n        break;\n\n      case 'r':\n        ev.preventDefault();\n        display.updateAllSizes();\n        break;\n\n      case 'Backspace':\n        ev.preventDefault();\n\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        } else if (selected && selected instanceof List && selected.props.parent.props.id === 'bank') {\n          const confirm = window.confirm('delete this list?');\n\n          if (confirm) {\n            const subtasks = selected.props.parent.state.subtasks;\n            window.undoData = localStorage.getItem('data');\n            subtasks.splice(subtasks.findIndex(x => x === selected.props.id), 1);\n            selected.props.parent.setState({\n              subtasks: subtasks\n            });\n          }\n        }\n\n        break;\n\n      case 'w':\n        ev.preventDefault();\n\n        if (selected.props.parent.props.id != 'river') {\n          edit.moveTask(-1);\n        }\n\n        break;\n\n      case 's':\n        ev.preventDefault();\n\n        if (selected.props.parent.props.id != 'river') {\n          edit.moveTask(1);\n        }\n\n        break;\n\n      case 'a':\n        ev.preventDefault();\n        display.switchView(-1);\n        break;\n\n      case 'd':\n        ev.preventDefault();\n        display.switchView(1);\n        break;\n\n      case 'h':\n        ev.preventDefault();\n        window.app.current.toggleComplete();\n        break;\n\n      case 't':\n        ev.preventDefault();\n        if (window.app.current.state.zoomed === 'zoomed') return;\n        display.goToToday();\n        break;\n\n      case '1':\n        ev.preventDefault();\n\n        if (selected instanceof Task) {\n          selected.toggleComplete(false);\n        }\n\n        break;\n\n      case '2':\n        ev.preventDefault();\n\n        if (selected instanceof Task) {\n          selected.toggleImportant(false);\n        }\n\n        break;\n\n      case '3':\n        ev.preventDefault();\n\n        if (selected instanceof Task) {\n          selected.toggleMaybe(false);\n        }\n\n        break;\n\n      case 'i':\n        ev.preventDefault();\n\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({\n            target: $('<p></p>')\n          });\n\n          if (selected.state.displayOptions === 'hide') {\n            selected.editBar.current.focus();\n          }\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/services/keyComms/keyComms.js"],"names":["display","edit","keyComms","ev","ctrlKey","key","window","preventReturn","preventDefault","shiftKey","newTask","app","current","state","displayTable","document","activeElement","blur","selected","save","Task","displayOptions","undefined","pasteTask","zoom","copyTask","cutTask","indentTask","focus","undo","updateAllSizes","deleteThis","List","props","parent","id","confirm","subtasks","undoData","localStorage","getItem","splice","findIndex","x","setState","moveTask","switchView","toggleComplete","zoomed","goToToday","toggleImportant","toggleMaybe","target","$","editBar"],"mappings":"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","sourcesContent":["import * as display from '../display/display';\nimport * as edit from '../edit/edit';\n\nexport function keyComms(ev) {\n  if (!ev.ctrlKey) {\n    if (ev.key === 'Enter' && !window.preventReturn) {\n      ev.preventDefault();\n      if (ev.shiftKey) {\n        edit.newTask('task');\n      } else {\n        edit.newTask();\n      }\n      return;\n    } else if (ev.key === 'Escape' && !window.preventReturn) {\n      ev.preventDefault();\n      if (window.app.current.state.displayTable !== 'none') display.displayTable();\n      document.activeElement.blur();\n      if (selected) {\n        edit.save(selected, 'task');\n        if (selected instanceof Task &&\n          selected.state.displayOptions === 'show') {\n          selected.displayOptions('hide');\n        } else {\n          selected = undefined;\n        }\n      }\n      return;\n    }\n  }\n  if (ev.ctrlKey && ev.shiftKey) {\n    switch (ev.key) {\n      case 'V':\n        edit.pasteTask('task');\n        break;\n      case 'N':\n        edit.newTask('task');\n        break;\n      case 'F':\n        ev.preventDefault();\n        display.zoom();\n        break;\n      case 'C':\n        // mirror task\n        edit.copyTask(true);\n        break;\n      default:\n        break;\n    }\n  } else if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        ev.preventDefault();\n        edit.cutTask();\n        break;\n      case 'c':\n        ev.preventDefault();\n        edit.copyTask();\n        break;\n      case 'v':\n        ev.preventDefault();\n        edit.pasteTask();\n        break;\n      case 'n':\n        ev.preventDefault();\n        edit.newTask();\n        break;\n      case ']':\n        ev.preventDefault();\n        edit.indentTask();\n        break;\n      case '[':\n        ev.preventDefault();\n        edit.indentTask(true);\n        break;\n      case 'f':\n        ev.preventDefault();\n        focus();\n        break;\n      case 'z':\n        ev.preventDefault();\n        edit.undo();\n        break;\n      case 'r':\n        ev.preventDefault();\n        display.updateAllSizes();\n        break;\n      case 'Backspace':\n        ev.preventDefault();\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        } else if (selected && selected instanceof List &&\n          selected.props.parent.props.id === 'bank') {\n          const confirm = window.confirm('delete this list?');\n          if (confirm) {\n            const subtasks = selected.props.parent.state.subtasks;\n            window.undoData = localStorage.getItem('data');\n            subtasks.splice(\n              subtasks.findIndex(x => x === selected.props.id), 1);\n            selected.props.parent.setState({ subtasks: subtasks });\n          }\n        }\n        break;\n      case 'w':\n        ev.preventDefault();\n        if (selected.props.parent.props.id != 'river') {\n          edit.moveTask(-1);\n        }\n        break;\n      case 's':\n        ev.preventDefault();\n        if (selected.props.parent.props.id != 'river') {\n          edit.moveTask(1);\n        }\n        break;\n      case 'a':\n        ev.preventDefault();\n        display.switchView(-1);\n        break;\n      case 'd':\n        ev.preventDefault();\n        display.switchView(1);\n        break;\n      case 'h':\n        ev.preventDefault();\n        window.app.current.toggleComplete();\n        break;\n      case 't':\n        ev.preventDefault();\n        if (window.app.current.state.zoomed === 'zoomed') return;\n        display.goToToday();\n        break;\n      case '1':\n        ev.preventDefault();\n        if (selected instanceof Task) {\n          selected.toggleComplete(false);\n        }\n        break;\n      case '2':\n        ev.preventDefault();\n        if (selected instanceof Task) {\n          selected.toggleImportant(false);\n        }\n        break;\n      case '3':\n        ev.preventDefault();\n        if (selected instanceof Task) {\n          selected.toggleMaybe(false);\n        }\n        break;\n      case 'i':\n        ev.preventDefault();\n        if (selected && selected instanceof Task) {\n          selected.displayOptions({ target: $('<p></p>') });\n          if (selected.state.displayOptions === 'hide') {\n            selected.editBar.current.focus();\n          }\n        };\n        break;\n      default:\n        break;\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}