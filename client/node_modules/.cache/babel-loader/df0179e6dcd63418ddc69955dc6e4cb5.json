{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resetData = {\n  bank: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'first',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  river: {\n    info: {\n      index: 0\n    },\n    subtasks: [{\n      id: '1',\n      title: 'second',\n      subtasks: [],\n      info: {}\n    }]\n  },\n  settings: {}\n}; // var data = !localStorage.getItem('data') ? { resetData } :\n//   JSON.parse(localStorage.getItem('data'));\n\nvar data = resetData;\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Frame, {\n        id: \"bank\",\n        info: data['river'].info,\n        subtasks: data['bank'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Frame, {\n        id: \"river\",\n        info: data['river'].info,\n        subtasks: data['river'].subtasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\n\nfunction StatusBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statusBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: newTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: cutTask,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: copyTask,\n        children: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: pasteTask,\n        children: \"v\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = StatusBar;\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: props.subtasks,\n      info: props.info,\n      width: Math.floor(window.innerWidth / 200)\n    };\n    $(window).on('resize', this.resizeCheck);\n  }\n\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val;\n    if (newIndex < 0) newIndex = 0;\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        index: newIndex\n      }\n    }));\n  }\n\n  render() {\n    const now = new Date();\n    let i = 0;\n\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i++;\n      this.state.lists.push({\n        id: String(now.getTime() + i),\n        title: '',\n        subtasks: [],\n        info: {}\n      });\n    }\n\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n\n      if (width != this.state.width) {\n        this.setState({\n          width: width\n        });\n      }\n    }\n\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this); // $(window).off('resize', () => resizeCheck);\n\n    window.addEventListener('resize', resizeCheck);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.id,\n      className: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width * -1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n        return /*#__PURE__*/_jsxDEV(List, {\n          id: x.id,\n          title: x.title,\n          subtasks: x.subtasks,\n          parent: this\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changeButton\",\n        onClick: () => this.changeIndex(this.state.width),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n\n    return div;\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      onClick: selectThis,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"listInput\",\n        value: this.state.title,\n        onKeyDown: this.changeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        ref: this.taskList,\n        subtasks: this.state.subtasks,\n        parent: this\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addTask: this.addTask\n    };\n  }\n\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = /*#__PURE__*/_jsxDEV(Task, {\n        id: x.id,\n        info: x.info,\n        title: x.title,\n        subtasks: x.subtasks,\n        parent: this.props.parent\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n\n      return task;\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listContent\",\n      children: tasksListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info,\n      title: props.title,\n      subtasks: props.subtasks,\n      parent: props.parent,\n      id: props.id,\n      displayOptions: 'hide'\n    };\n  }\n\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || $(ev.target).parent().hasClass('options')) {\n      return;\n    }\n\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({\n        displayOptions: 'hide'\n      });\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({\n        displayOptions: 'show'\n      });\n    }\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value,\n      editHeight: 'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'\n    });\n  }\n\n  changeStartDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        startDate: ev.target.value\n      }\n    }));\n  }\n\n  changeEndDate(ev) {\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        endDate: ev.target.value\n      }\n    }));\n  }\n\n  toggleComplete() {\n    let status = this.state.info.complete;\n\n    if (status === 'complete') {\n      status = '';\n    } else {\n      status = 'complete';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        complete: status\n      }\n    }));\n  }\n\n  toggleImportant() {\n    let status = this.state.info.important;\n\n    if (status === 'important') {\n      status = '';\n    } else {\n      status = 'important';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        important: status,\n        maybe: ''\n      }\n    }));\n  }\n\n  toggleMaybe() {\n    let status = this.state.info.maybe;\n\n    if (status === 'maybe') {\n      status = '';\n    } else {\n      status = 'maybe';\n    }\n\n    this.setState(prevState => ({\n      info: { ...prevState.info,\n        maybe: status,\n        important: ''\n      }\n    }));\n  }\n\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id;\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({\n      subtasks: subtasks\n    });\n    preventSelect = true;\n    setTimeout(function () {\n      preventSelect = false;\n    }, 500);\n  }\n\n  componentDidMount() {\n    this.changeTitle({\n      target: {\n        value: this.state.title\n      }\n    });\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.optionsButton = /*#__PURE__*/React.createRef();\n    this.editBar = /*#__PURE__*/React.createRef();\n    this.heightSpan = /*#__PURE__*/React.createRef(); // task with info and subtasks\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'task ' + this.state.info.important + ' ' + this.state.info.complete + ' ' + this.state.info.maybe,\n      onClick: () => {\n        selectTask(this);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        onClick: ev => this.displayOptions(ev),\n        ref: this.optionsButton,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'options ' + this.state.displayOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.complete,\n            onClick: this.toggleComplete,\n            children: \"\\u221A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.important,\n            onClick: this.toggleImportant,\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button ' + this.state.info.maybe,\n            onClick: this.toggleMaybe,\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: this.deleteThis,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'button',\n            onClick: function () {\n              newTask('task');\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput startDate\",\n            value: this.state.info.startDate,\n            onChange: ev => this.changeStartDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"optionsInput endDate\",\n            value: this.state.info.endDate,\n            onChange: ev => this.changeEndDate(ev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan startDate\",\n        children: this.state.info.startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"optionsSpan endDate\",\n        children: this.state.info.endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editBar\",\n        value: this.state.title,\n        onChange: ev => this.changeTitle(ev),\n        ref: this.editBar,\n        style: {\n          height: this.state.editHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"editBar editSpan\",\n        ref: this.heightSpan,\n        style: {\n          width: this.state.editWidth\n        },\n        children: this.state.title + ' x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          ref: this.taskList,\n          subtasks: this.state.subtasks,\n          parent: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {\n      complete: ''\n    },\n    title: '',\n    subtasks: []\n  };\n  copiedTask = newTask;\n  pasteTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return;\n\n  if (el instanceof TaskList) {\n    return;\n  }\n\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () {\n    preventSelect = false;\n  }, 250);\n\n  if (selected == el) {\n    return;\n  }\n\n  if (selected) {\n    save(selected, 'task');\n  }\n\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({\n      target: undefined\n    }, 'hide');\n  }\n\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0;\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1;\n  }\n\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {\n    title: state.title,\n    id: selected.props.id,\n    info: { ...state.info\n    },\n    subtasks: state.subtasks.concat()\n  };\n}\n\nfunction pasteTask() {\n  if (!selected) return;\n\n  if (selected instanceof List) {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'task');\n  } else if (selected instanceof Task) {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({\n      subtasks: subtasks\n    });\n    save(selected, 'list');\n  }\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n\n      case 'c':\n        copyTask();\n        break;\n\n      case 'v':\n        pasteTask();\n        break;\n\n      case 'n':\n        newTask();\n        break;\n\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n\n      case 'i':\n        if (selected && selected instanceof Task) {\n          $(selected.optionsButton).trigger('click');\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StatusBar\");","map":{"version":3,"sources":["/Users/frederic/Documents/Dropbox/1_projects/code/2021-11-01_riverbank-2/riverbank-2/src/index.js"],"names":["React","ReactDOM","$","render","resetData","bank","info","index","subtasks","id","title","river","settings","data","selected","preventSelect","copiedTask","width","prevWidth","App","StatusBar","newTask","cutTask","copyTask","pasteTask","Frame","Component","constructor","props","state","lists","Math","floor","window","innerWidth","on","resizeCheck","changeIndex","val","newIndex","setState","prevState","now","Date","i","length","push","String","getTime","endIndex","bind","addEventListener","div","slice","map","x","List","taskList","createRef","changeTitle","ev","target","value","selectThis","selectTask","TaskList","addTask","tasksListed","task","parent","Task","displayOptions","showHide","hasClass","editHeight","heightSpan","current","offsetHeight","changeStartDate","startDate","changeEndDate","endDate","toggleComplete","status","complete","toggleImportant","important","maybe","toggleMaybe","deleteThis","currentTask","findIndex","splice","setTimeout","componentDidMount","editBar","focus","optionsButton","height","editWidth","type","el","today","console","log","save","undefined","saveType","parents","reverse","parentObject","parentId","find","localStorage","setItem","JSON","stringify","concat","insertIndex","keyComms","ctrlKey","key","trigger","metaKey","altKey","document","activeElement","blur","init","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './style.css';\nimport { render } from '@testing-library/react';\n\nvar resetData = {\n  bank: \n    {info: {index: 0}, subtasks: [\n      {id:'1', title:'first', subtasks: [], info: {}}\n    ]}, \n  river:\n    {info: {index: 0}, subtasks: [\n      {id:'1', title: 'second', subtasks: [], info: {}}\n    ]}, \n  settings: {}\n};\n\n// var data = !localStorage.getItem('data') ? { resetData } :\n//   JSON.parse(localStorage.getItem('data'));\n\nvar data = resetData;\n\nvar selected;\nvar preventSelect;\nvar copiedTask;\nvar width;\nvar prevWidth;\n\nfunction App() {\n  return (\n    <>\n      <StatusBar />\n      <div className='container'>\n        <Frame id='bank' info={data['river'].info} \n          subtasks={data['bank'].subtasks} />\n        <Frame id='river' info={data['river'].info} \n          subtasks={data['river'].subtasks} />\n      </div>\n    </>\n  )\n}\n\nfunction StatusBar() {\n  return (\n    <div className='statusBar'>\n      <input className='searchBar'></input>\n      <div className='buttonBar'>\n        <button className='button' onClick={newTask}>+</button>\n        <button className='button' onClick={cutTask}>x</button>\n        <button className='button' onClick={copyTask}>c</button>\n        <button className='button' onClick={pasteTask}>v</button>\n      </div>\n    </div>\n  )\n}\n\nclass Frame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lists: props.subtasks, info: props.info,\n      width: Math.floor(window.innerWidth / 200)};\n    $(window).on('resize', this.resizeCheck);\n  }\n  changeIndex(val) {\n    let newIndex = this.state.info.index + val\n    if (newIndex < 0) newIndex = 0\n    this.setState(prevState => ({\n      info: {...prevState.info, index: newIndex}\n    }));\n  }\n  render() {\n    const now = new Date();\n    let i = 0;\n    while (this.state.lists.length < this.state.info.index + 7) {\n      i ++;\n      this.state.lists.push({id: String(now.getTime() + i), \n        title: '', subtasks: [], info: {}});\n    }\n    function resizeCheck() {\n      // TODO: debug \"this\" in this function\n      const width = Math.floor(window.innerWidth / 200);\n      if (width != this.state.width) {\n        this.setState({width: width});\n      }\n    }\n    let endIndex = this.state.info.index + this.state.width;\n    this.changeIndex = this.changeIndex.bind(this);\n    resizeCheck = resizeCheck.bind(this);\n    // $(window).off('resize', () => resizeCheck);\n    window.addEventListener('resize', resizeCheck);\n    const div = (\n      <div id={this.props.id} className='frame'>\n        <button className='changeButton'\n          onClick={() => this.changeIndex(this.state.width * -1)}>&lt;</button>\n        {this.state.lists.slice(this.state.info.index, endIndex).map(x => {\n          return (\n            <List key={x.id} id={x.id} title={x.title}\n              subtasks={x.subtasks} parent={this} />\n          )\n        })}\n        <button className='changeButton' \n          onClick={() => this.changeIndex(this.state.width)}>&gt;</button>\n      </div>\n    )\n    return div;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {subtasks: props.subtasks, title: props.title,\n      info: {}}\n  }\n  changeTitle(ev) {\n    this.setState({title: ev.target.value})\n  }\n  render() {\n    function selectThis() {\n      selectTask(this);\n    }\n    selectThis = selectThis.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    return (\n      <div className='list' onClick={selectThis}>\n        <input \n          className='listInput' value={this.state.title} \n          onKeyDown={this.changeTitle}></input>\n        <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n          parent={this} />\n      </div>\n    )\n  }\n}\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addTask: this.addTask};\n  }\n  render() {\n    const tasksListed = this.props.subtasks.map(x => {\n      const task = (\n        <Task \n          key={x.id}\n          id={x.id}\n          info={x.info}\n          title={x.title}\n          subtasks={x.subtasks}\n          parent={this.props.parent}\n        />\n      )\n      return task});\n    return (\n      <ul className='listContent'>\n        {tasksListed}\n      </ul>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      info: props.info, title: props.title, \n      subtasks: props.subtasks, parent: props.parent, \n      id: props.id, displayOptions: 'hide'\n    };\n  }\n  displayOptions(ev, showHide) {\n    if ($(ev.target).hasClass('options') || \n      $(ev.target).parent().hasClass('options')) {\n      return\n    }\n    if (showHide === 'hide' || this.state.displayOptions === 'show') {\n      this.setState({displayOptions: 'hide'});\n    } else if (showHide == 'show' || this.state.displayOptions === 'hide') {\n      this.setState({displayOptions: 'show'});\n    }\n  }\n  changeTitle(ev) { \n    this.setState({title: ev.target.value, editHeight: \n    'calc(' + String(this.heightSpan.current.offsetHeight) + 'px + 0.25em)'});\n  }\n  changeStartDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, startDate: ev.target.value}})); \n  }\n  changeEndDate(ev) { \n    this.setState(prevState => ({\n      info: {...prevState.info, endDate: ev.target.value}})); \n  }\n  toggleComplete() {\n    let status = this.state.info.complete\n    if (status === 'complete') { status = '' }\n    else { status = 'complete' }\n    this.setState(prevState => ({\n      info: {...prevState.info, complete: status}})); \n  }\n  toggleImportant() {\n    let status = this.state.info.important\n    if (status === 'important') { status = '' }\n    else { status = 'important' }\n    this.setState(prevState => ({\n      info: {...prevState.info, important: status, maybe: ''}})); \n  }\n  toggleMaybe() {\n    let status = this.state.info.maybe\n    if (status === 'maybe') { status = '' }\n    else { status = 'maybe' }\n    this.setState(prevState => ({\n      info: {...prevState.info, maybe: status, important: ''}})); \n  }\n  deleteThis() {\n    const subtasks = this.state.parent.state.subtasks;\n    const currentTask = subtasks.findIndex(x => {\n      return x.id === this.state.id\n    });\n    subtasks.splice(currentTask, 1);\n    selected = this.state.parent;\n    this.state.parent.setState({subtasks: subtasks});\n    preventSelect = true;\n    setTimeout(function () {preventSelect = false}, 500);\n  }\n  componentDidMount() {\n    this.changeTitle({target: {value: this.state.title}});\n    this.editBar.current.focus();\n    selectTask(this);\n  }\n  render() {\n    // fuck react\n    this.displayOptions = this.displayOptions.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.toggleImportant = this.toggleImportant.bind(this);\n    this.toggleMaybe = this.toggleMaybe.bind(this);\n    this.deleteThis = this.deleteThis.bind(this);\n    this.taskList = React.createRef();\n    this.optionsButton = React.createRef();\n    this.editBar = React.createRef();\n    this.heightSpan = React.createRef();\n    // task with info and subtasks\n    return (\n      <li \n      className={'task ' + this.state.info.important + \n        ' ' + this.state.info.complete + \n        ' ' + this.state.info.maybe}\n      onClick={() => {selectTask(this)}}\n      >\n        <span className='info' onClick={(ev) => this.displayOptions(ev)}\n          ref={this.optionsButton}>\n          <div className={'options ' + this.state.displayOptions}>\n            <button \n              className={'button ' + this.state.info.complete}\n              onClick={this.toggleComplete}>\n              √</button>\n            <button \n              className={'button ' + this.state.info.important}\n              onClick={this.toggleImportant}>\n              !</button>\n            <button \n              className={'button ' + this.state.info.maybe}\n              onClick={this.toggleMaybe}>\n              ?</button>\n            <button \n              className={'button'}\n              onClick={this.deleteThis}>\n              x</button>\n            <button \n              className={'button'}\n              onClick={function () {newTask('task')}}>\n              +</button>\n            <input className='optionsInput startDate' \n              value={this.state.info.startDate} \n              onChange={(ev) => this.changeStartDate(ev)}>\n            </input>\n            <input className='optionsInput endDate' \n              value={this.state.info.endDate} \n              onChange={(ev) => this.changeEndDate(ev)}>\n            </input>\n          </div>\n        </span>\n        <span className='optionsSpan startDate'>{this.state.info.startDate}</span>\n        <span className='optionsSpan endDate'>{this.state.info.endDate}</span>\n        <textarea className='editBar' value={this.state.title}\n          onChange={(ev) => this.changeTitle(ev)} ref={this.editBar}\n          style={{height: this.state.editHeight}}></textarea>\n        <span className='editBar editSpan'\n          ref={this.heightSpan} \n          style={{width: this.state.editWidth}}>\n          {this.state.title + ' x'}</span>\n        <ul>\n          <TaskList ref={this.taskList} subtasks={this.state.subtasks} \n            parent={this} />\n        </ul>\n      </li>\n    )\n  }\n}\n\nfunction newTask(type) {\n  // create new task after selected\n  let el;\n  if (type == 'task' || !selected.state.parent) {\n    el = selected;\n  } else if (type == 'list' || selected.state.parent) {\n    el = selected.state.parent;\n  }\n  const today = new Date();\n  const now = today.getTime();\n  const newTask = {\n    id: String(now),\n    info: {complete: ''},\n    title: '',\n    subtasks: [],\n  }\n  copiedTask = newTask;\n  pasteTask();\n}\n\nfunction selectTask(el) {\n  // make this task selected\n  if (preventSelect) return\n  if (el instanceof TaskList) {\n    return\n  }\n  console.log('selecting', el);\n  preventSelect = true;\n  setTimeout(function () { preventSelect = false }, 250);\n  if (selected == el) {\n    return\n  }\n  if (selected) {\n    save(selected, 'task');\n  }\n  if (selected instanceof Task && el != selected) {\n    selected.displayOptions({target: undefined}, 'hide');\n  }\n  selected = el;\n}\n\nfunction save(task, saveType) {\n  // save the new data\n  let parent = task.props.parent;\n  let parents = [task.props.id];\n  while (parent && parent.props.id) {\n    parents.push(parent.props.id);\n    parent = parent.props.parent;\n  }\n  parents = parents.reverse();\n  let parentObject = data[parents[0]];\n  let endIndex;\n  if (saveType === 'task') {\n    // save the TaskList which this task is in\n    endIndex = 0\n  } else if (saveType === 'list' || !saveType) {\n    // save this task's data\n    endIndex = -1\n  }\n  for (let parentId of parents.slice(1, parents.length - endIndex)) {\n    parentObject = parentObject.subtasks.find(x => x.id === parentId);\n  }\n  parentObject.title = task.state.title;\n  parentObject.subtasks = task.state.subtasks;\n  parentObject.info = task.state.info;\n  localStorage.setItem('data', JSON.stringify(data));\n}\n\nfunction cutTask() {\n  if (!selected || selected instanceof List) return;\n  copyTask();\n  selected.deleteThis();\n}\n\nfunction copyTask() {\n  if (!selected || selected instanceof List) return;\n  const state = selected.state;\n  copiedTask = {title: state.title, id: selected.props.id, \n    info: {...state.info}, subtasks: state.subtasks.concat()};\n}\n\nfunction pasteTask() {\n  if (!selected) return;\n  if (selected instanceof List) {\n    const subtasks = selected.state.subtasks;\n    subtasks.splice(0, 0, copiedTask);\n    selected.setState({subtasks: subtasks});\n    save(selected, 'task');\n  } else if (selected instanceof Task) {\n    const subtasks = selected.state.parent.state.subtasks;\n    const insertIndex = subtasks.findIndex(x => x.id == selected.props.id) + 1;\n    subtasks.splice(insertIndex, 0, copiedTask);\n    selected.state.parent.setState({subtasks: subtasks});\n    save(selected, 'list');\n  }\n}\n\nfunction keyComms(ev) {\n  if (ev.ctrlKey) {\n    switch (ev.key) {\n      case 'x':\n        cutTask();\n        break;\n      case 'c':\n        copyTask();\n        break;\n      case 'v':\n        pasteTask();\n        break;\n      case 'n':\n        newTask();\n        break;\n      case 'Backspace':\n        if (selected && selected instanceof Task) {\n          selected.deleteThis();\n        }\n      case 'i':\n        if (selected && selected instanceof Task) {\n          $(selected.optionsButton).trigger('click');\n        }\n        break;\n      default:\n        break;\n    }\n  } else if (!ev.metaKey && !ev.ctrlKey && !ev.altKey) {\n    switch (ev.key) {\n      case 'Escape':\n        document.activeElement.blur();\n        selectTask(undefined);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nfunction init() {\n  selected = undefined;\n  width = Math.floor(window.innerWidth / 200);\n  prevWidth = Math.floor(window.innerWidth / 200);\n  ReactDOM.render(<App />, document.getElementById('root'));\n  $(document).on('keydown', keyComms);\n}\n\ninit();"]},"metadata":{},"sourceType":"module"}