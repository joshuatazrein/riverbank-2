{"ast":null,"code":"var _jsxFileName = \"/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/List/List.js\";\nimport React from 'react';\nimport './List.css';\nimport * as display from '../../services/display/display';\nimport * as edit from '../../services/edit/edit';\nimport * as util from '../../services/util/util';\nimport TaskList from '../TaskList/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateHeights = () => {\n      return;\n      if (!this.taskList.current) return;\n      const objects = this.taskList.current.subtaskObjects.filter(x => x.current.isComplete() !== 'complete');\n\n      for (let i = 0; i < objects.length - 1; i++) {\n        const thisObject = objects[i].current;\n        const nextObject = objects[i + 1].current;\n        let minHeight = 1;\n\n        if (thisObject.state.info.type === 'event') {\n          const endDate = thisObject.state.info.endDate;\n\n          if (!endDate.includes('--')) {\n            // rounded to 30 minutes\n            minHeight = (endDate[0] * 60 + endDate[1]) / 60;\n          } else if (nextObject.state.info.type === 'event') {\n            // no end date\n            const startDate = nextObject.state.info.startDate;\n\n            if (!startDate.includes('--')) {\n              const difference = util.getTime(startDate) - util.getTime(thisObject.state.info.startDate);\n              minHeight = difference / 60;\n            }\n          }\n        }\n\n        thisObject.setState({\n          minHeight: minHeight\n        });\n      }\n\n      if (objects.length > 0) {\n        let minHeight = 1;\n        const lastObject = objects[objects.length - 1].current;\n        const endDate = lastObject.state.info.endDate;\n\n        if (lastObject.state.info.type === 'event' && !endDate.includes('--')) {\n          // rounded to 30 minutes\n          minHeight = (endDate[0] * 60 + endDate[1]) / 60;\n        }\n\n        lastObject.setState({\n          minHeight: minHeight\n        });\n      }\n    };\n\n    this.taskList = /*#__PURE__*/React.createRef();\n    this.state = {\n      // filter subtasks here\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {},\n      zoomed: ''\n    };\n  }\n\n  changeTitle(ev) {\n    this.setState({\n      title: ev.target.value\n    });\n  }\n\n  sortList() {\n    // sort the given list by time\n    let ordered = true;\n    let currentTime = 0;\n\n    for (let x of this.subtasksCurrent) {\n      const task = window.data.tasks[util.stripR(x)];\n      const thisTime = util.getTime(task.info.startDate);\n\n      if (task.info.type === 'event' && thisTime < currentTime) {\n        ordered = false;\n        break;\n      }\n\n      currentTime = thisTime;\n    }\n\n    if (ordered) return; // sort the list\n\n    let sortedList = [];\n    let currentSort = ['start'];\n\n    for (let task of this.subtasksCurrent) {\n      const taskData = window.data.tasks[util.stripR(task)];\n\n      if (taskData.info.type === 'event' && !taskData.info.startDate.includes('--')) {\n        sortedList.push(currentSort);\n        currentSort = [];\n        currentSort.push(task);\n      } else {\n        currentSort.push(task);\n      }\n    }\n\n    sortedList.push(currentSort); // add last thing\n\n    sortedList = sortedList.sort((a, b) => {\n      if (a[0] === 'start' || a.length === 0) {\n        a = a.splice(0, 1);\n        return -1;\n      } else if (b[0] === 'start' || b.length === 0) {\n        b = b.splice(0, 1);\n        return 1;\n      } else {\n        return util.getTime(window.data.tasks[util.stripR(a[0])].info.startDate) - util.getTime(window.data.tasks[util.stripR(b[0])].info.startDate);\n      }\n    }).flat();\n    this.subtasksCurrent = sortedList;\n  }\n\n  render() {\n    var selectThis = () => {\n      edit.selectTask(this);\n    };\n\n    this.changeTitle = this.changeTitle.bind(this);\n    this.listInput = /*#__PURE__*/React.createRef();\n    this.subtasksCurrent = this.state.subtasks.filter(x => !(x.charAt(0) === 'R' && !this.props.repeats.includes(x)) && window.data.tasks[util.stripR(x)]);\n\n    if (this.props.parent.props.id === 'river') {\n      for (let task of this.props.repeats) {\n        if (!this.subtasksCurrent.includes(task) && !this.subtasksCurrent.includes(util.stripR(task))) {\n          this.subtasksCurrent.push(task);\n        }\n      }\n    }\n\n    if (util.getFrame(this).props.id === 'river') {\n      this.sortList();\n      setTimeout(this.updateHeights, 100);\n    }\n\n    const drop = ev => {\n      edit.selectTask(window.draggedTask);\n      console.log(window.selected);\n      edit.cutTask();\n      window.preventSelect = false;\n      edit.selectTask(this);\n\n      if (ev.metaKey) {\n        console.log('yes');\n        edit.pasteTask('task');\n      } else {\n        edit.pasteTask();\n      }\n    };\n\n    const dragOver = ev => {\n      ev.preventDefault();\n      ev.dataTransfer.dropEffect = 'all';\n    };\n\n    const dragEnter = ev => {\n      ev.dataTransfer.dropEffect = 'all';\n    };\n\n    const dragLeave = ev => {\n      ev.dataTransfer.dropEffect = 'all';\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'list ' + this.state.zoomed,\n      onClick: selectThis,\n      onContextMenu: selectThis,\n      onDrop: drop,\n      onDragOver: dragOver,\n      onDragEnter: dragEnter,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listInputBackground\",\n        children: this.props.parent.props.id === 'bank' ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"listInput\",\n          value: this.state.title,\n          onChange: this.changeTitle,\n          ref: this.listInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monthYear\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: this.state.title.slice(4, 8)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: this.state.title.slice(11)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            readOnly: true,\n            className: \"listInput listTitle\",\n            value: util.dateFormat(this.state.title),\n            ref: this.listInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listFrame\",\n        children: [this.props.parent.props.id === 'river' && this.props.deadlines && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.props.deadlines.map(x => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"deadline\",\n              onClick: () => display.searchDate(window.data.tasks[util.stripR(x)].title, 'start'),\n              children: window.data.tasks[util.stripR(x)].title\n            }, String(x), false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), this.props.parent.props.id === 'river' && this.props.startdates && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.props.startdates.map(x => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"startdate\",\n              onClick: () => display.searchDate(window.data.tasks[util.stripR(x)].title, 'start'),\n              children: window.data.tasks[util.stripR(x)].title\n            }, String(x), false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          ref: this.taskList,\n          subtasks: this.subtasksCurrent,\n          parent: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/frederic/Documents/big-projects/2021-11-01_riverbank-2/riverbank-2/src/components/List/List.js"],"names":["React","display","edit","util","TaskList","List","Component","constructor","props","updateHeights","taskList","current","objects","subtaskObjects","filter","x","isComplete","i","length","thisObject","nextObject","minHeight","state","info","type","endDate","includes","startDate","difference","getTime","setState","lastObject","createRef","subtasks","title","zoomed","changeTitle","ev","target","value","sortList","ordered","currentTime","subtasksCurrent","task","window","data","tasks","stripR","thisTime","sortedList","currentSort","taskData","push","sort","a","b","splice","flat","render","selectThis","selectTask","bind","listInput","charAt","repeats","parent","id","getFrame","setTimeout","drop","draggedTask","console","log","selected","cutTask","preventSelect","metaKey","pasteTask","dragOver","preventDefault","dataTransfer","dropEffect","dragEnter","dragLeave","slice","dateFormat","deadlines","map","searchDate","String","startdates"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './List.css';\nimport * as display from '../../services/display/display';\nimport * as edit from '../../services/edit/edit';\nimport * as util from '../../services/util/util';\nimport TaskList from '../TaskList/TaskList';\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.taskList = React.createRef();\n    this.state = {\n      // filter subtasks here\n      subtasks: props.subtasks,\n      title: props.title,\n      info: {}, zoomed: ''\n    };\n  }\n  changeTitle(ev) {\n    this.setState({ title: ev.target.value });\n  }\n  sortList() {\n    // sort the given list by time\n    let ordered = true;\n    let currentTime = 0;\n    for (let x of this.subtasksCurrent) {\n      const task = window.data.tasks[util.stripR(x)];\n      const thisTime = util.getTime(task.info.startDate);\n      if (\n        task.info.type === 'event' &&\n        thisTime < currentTime\n      ) {\n        ordered = false;\n        break;\n      }\n      currentTime = thisTime;\n    }\n    if (ordered) return;\n    // sort the list\n    let sortedList = [];\n    let currentSort = ['start'];\n    for (let task of this.subtasksCurrent) {\n      const taskData = window.data.tasks[util.stripR(task)];\n      if (taskData.info.type === 'event' && \n        !taskData.info.startDate.includes('--')) {\n        sortedList.push(currentSort);\n        currentSort = [];\n        currentSort.push(task);\n      } else {\n        currentSort.push(task);\n      }\n    }\n    sortedList.push(currentSort); // add last thing\n    sortedList = sortedList.sort((a, b) => {\n      if (a[0] === 'start' || a.length === 0) {\n        a = a.splice(0, 1);\n        return -1;\n      } else if (b[0] === 'start' || b.length === 0) {\n        b = b.splice(0, 1);\n        return 1;\n      } else {\n        return util.getTime(window.data.tasks[util.stripR(a[0])].info.startDate) - \n          util.getTime(window.data.tasks[util.stripR(b[0])].info.startDate)\n      }\n    }).flat();\n    this.subtasksCurrent = sortedList;\n  }\n  updateHeights = () => {\n    return\n    if (!this.taskList.current) return;\n    const objects = this.taskList.current.subtaskObjects.filter(\n      x => x.current.isComplete() !== 'complete'\n    );\n    for (\n      let i = 0; i < objects.length - 1; i++\n    ) {\n      const thisObject = objects[i].current;\n      const nextObject = objects[i + 1].current;\n      let minHeight = 1;\n      if (\n        thisObject.state.info.type === 'event'\n      ) {\n        const endDate = thisObject.state.info.endDate;\n        if (!endDate.includes('--')) {\n          // rounded to 30 minutes\n          minHeight = (endDate[0] * 60 + endDate[1]) / 60;\n        } else if (nextObject.state.info.type === 'event') {\n          // no end date\n          const startDate = nextObject.state.info.startDate;\n          if (!startDate.includes('--')) {\n            const difference = \n              util.getTime(startDate) - util.getTime(thisObject.state.info.startDate);\n            minHeight = difference / 60;\n          }\n        }\n      }\n      thisObject.setState({ minHeight: minHeight });\n    }\n    if (objects.length > 0) {\n      let minHeight = 1;\n      const lastObject = objects[objects.length - 1].current;\n      const endDate = lastObject.state.info.endDate;\n      if (lastObject.state.info.type === 'event' &&\n        !endDate.includes('--')) {\n        // rounded to 30 minutes\n        minHeight = (endDate[0] * 60 + endDate[1]) / 60;\n      }\n      lastObject.setState({ minHeight: minHeight });\n    }\n  }\n  render() {\n    var selectThis = () => {\n      edit.selectTask(this);\n    }\n    this.changeTitle = this.changeTitle.bind(this);\n    this.listInput = React.createRef();\n    this.subtasksCurrent = this.state.subtasks.filter(x =>\n      !(x.charAt(0) === 'R' && !this.props.repeats.includes(x)) &&\n      window.data.tasks[util.stripR(x)]);\n    if (this.props.parent.props.id === 'river') {\n      for (let task of this.props.repeats) {\n        if (!this.subtasksCurrent.includes(task) &&\n          !this.subtasksCurrent.includes(util.stripR(task))) {\n          this.subtasksCurrent.push(task);\n        }\n      }\n    }\n    if (util.getFrame(this).props.id === 'river') {\n      this.sortList();\n      setTimeout(this.updateHeights, 100);\n    }\n    const drop = (ev) => {\n      edit.selectTask(window.draggedTask);\n      console.log(window.selected);\n      edit.cutTask();\n      window.preventSelect = false;\n      edit.selectTask(this);\n      if (ev.metaKey) {\n        console.log('yes');\n        edit.pasteTask('task');\n      } else {\n        edit.pasteTask();\n      }\n    }\n    const dragOver = (ev) => {\n      ev.preventDefault();\n      ev.dataTransfer.dropEffect = 'all';\n    }\n    const dragEnter = (ev) => {\n      ev.dataTransfer.dropEffect = 'all';\n    }\n    const dragLeave = (ev) => {\n      ev.dataTransfer.dropEffect = 'all';\n    }\n    return (\n      <div className={'list ' + this.state.zoomed} onClick={selectThis}\n        onContextMenu={selectThis}\n        onDrop={drop}\n        onDragOver={dragOver}\n        onDragEnter={dragEnter}\n      >\n        <div className='listInputBackground'>\n          {this.props.parent.props.id === 'bank' ?\n            <input className='listInput' value={this.state.title}\n              onChange={this.changeTitle} ref={this.listInput}></input> :\n            <>\n              <div className='monthYear'>\n                <span>{this.state.title.slice(4, 8)}</span>\n                <span>{this.state.title.slice(11)}</span>\n              </div>\n              <input readOnly className='listInput listTitle'\n                value={util.dateFormat(this.state.title)} ref={this.listInput}>\n              </input>\n            </>\n          }\n        </div>\n        <div className='listFrame'>\n          {this.props.parent.props.id === 'river' &&\n            this.props.deadlines &&\n            <ul>\n              {this.props.deadlines.map(x => {\n                return <li\n                  className='deadline' key={String(x)}\n                  onClick={() => display.searchDate(window.data.tasks[util.stripR(x)].title, 'start')}>\n                  {window.data.tasks[util.stripR(x)].title}</li>;\n              })}\n            </ul>}\n          {this.props.parent.props.id === 'river' &&\n            this.props.startdates &&\n            <ul>\n              {this.props.startdates.map(x => {\n                return (<li\n                  className='startdate' key={String(x)}\n                  onClick={() => display.searchDate(window.data.tasks[util.stripR(x)].title,\n                    'start')}>\n                  {window.data.tasks[util.stripR(x)].title}</li>);\n              })}\n            </ul>}\n          {<TaskList ref={this.taskList} subtasks={this.subtasksCurrent}\n            parent={this} />}\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}